

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Dec 05 20:06:07 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43  0000                     
    44                           ; Version 1.41
    45                           ; Generated 25/01/2017 GMT
    46                           ; 
    47                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F46K22 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     
    79                           	psect	idataCOMRAM
    80  00073A                     __pidataCOMRAM:
    81                           	opt stack 0
    82                           
    83                           ;initializer for _KeyPressed
    84  00073A  0001               	dw	1
    85                           
    86                           	psect	nvCOMRAM
    87  000042                     __pnvCOMRAM:
    88                           	opt stack 0
    89  000042                     _TMR4_InterruptHandler:
    90                           	opt stack 0
    91  000042                     	ds	2
    92  000044                     _TMR2_InterruptHandler:
    93                           	opt stack 0
    94  000044                     	ds	2
    95  0000                     _CCPTMRS1bits	set	3912
    96  0000                     _CCPR4H	set	3929
    97  0000                     _CCPR4L	set	3928
    98  0000                     _CCP4CON	set	3927
    99  0000                     _T4CONbits	set	3921
   100  0000                     _TMR4	set	3923
   101  0000                     _PR4	set	3922
   102  0000                     _T4CON	set	3921
   103  0000                     _ANSELA	set	3896
   104  0000                     _ANSELE	set	3900
   105  0000                     _ANSELD	set	3899
   106  0000                     _ANSELB	set	3897
   107  0000                     _ANSELC	set	3898
   108  0000                     _PORTAbits	set	3968
   109  0000                     _LATAbits	set	3977
   110  0000                     _LATDbits	set	3980
   111  0000                     _TXREG1	set	4013
   112  0000                     _RCREG1	set	4014
   113  0000                     _RCSTA1bits	set	4011
   114  0000                     _SPBRGH1	set	4016
   115  0000                     _SPBRG1	set	4015
   116  0000                     _TXSTA1	set	4012
   117  0000                     _RCSTA1	set	4011
   118  0000                     _BAUDCON1	set	4024
   119  0000                     _PIE2bits	set	4000
   120  0000                     _RCONbits	set	4048
   121  0000                     _PIE5bits	set	3965
   122  0000                     _PIR5bits	set	3966
   123  0000                     _T2CONbits	set	4026
   124  0000                     _TMR2	set	4028
   125  0000                     _PR2	set	4027
   126  0000                     _T2CON	set	4026
   127  0000                     _PIR2bits	set	4001
   128  0000                     _EEDATA	set	4008
   129  0000                     _EEADR	set	4009
   130  0000                     _EEADRH	set	4010
   131  0000                     _EECON2	set	4007
   132  0000                     _EECON1bits	set	4006
   133  0000                     _INTCONbits	set	4082
   134  0000                     _TABLAT	set	4085
   135  0000                     _TBLPTRL	set	4086
   136  0000                     _TBLPTRH	set	4087
   137  0000                     _TBLPTRU	set	4088
   138  0000                     _SSP1BUF	set	4041
   139  0000                     _SSP1CON2bits	set	4037
   140  0000                     _SSP1CON1bits	set	4038
   141  0000                     _PIE1bits	set	3997
   142  0000                     _PIR1bits	set	3998
   143  0000                     _SSP1ADD	set	4040
   144  0000                     _SSP1CON3	set	4043
   145  0000                     _SSP1CON1	set	4038
   146  0000                     _SSP1STAT	set	4039
   147  0000                     _INTCON2bits	set	4081
   148  0000                     _WPUB	set	3937
   149  0000                     _TRISD	set	3989
   150  0000                     _TRISC	set	3988
   151  0000                     _TRISB	set	3987
   152  0000                     _TRISA	set	3986
   153  0000                     _TRISE	set	3990
   154  0000                     _LATC	set	3979
   155  0000                     _LATB	set	3978
   156  0000                     _LATA	set	3977
   157  0000                     _LATD	set	3980
   158  0000                     _LATE	set	3981
   159  0000                     _OSCTUNE	set	3995
   160  0000                     _OSCCON2	set	4050
   161  0000                     _OSCCON	set	4051
   162                           
   163                           ; #config settings
   164  0000                     
   165                           	psect	cinit
   166  000570                     __pcinit:
   167                           	opt stack 0
   168  000570                     start_initialization:
   169                           	opt stack 0
   170  000570                     __initialization:
   171                           	opt stack 0
   172                           
   173                           ; Initialize objects allocated to COMRAM (2 bytes)
   174                           ; load TBLPTR registers with __pidataCOMRAM
   175  000570  0E3A               	movlw	low __pidataCOMRAM
   176  000572  6EF6               	movwf	tblptrl,c
   177  000574  0E07               	movlw	high __pidataCOMRAM
   178  000576  6EF7               	movwf	tblptrh,c
   179  000578  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   180  00057A  6EF8               	movwf	tblptru,c
   181  00057C  0009               	tblrd		*+	;fetch initializer
   182  00057E  CFF5 F046          	movff	tablat,__pdataCOMRAM
   183  000582  0009               	tblrd		*+	;fetch initializer
   184  000584  CFF5 F047          	movff	tablat,__pdataCOMRAM+1
   185                           
   186                           ; Clear objects allocated to COMRAM (40 bytes)
   187  000588  EE00  F001         	lfsr	0,__pbssCOMRAM
   188  00058C  0E28               	movlw	40
   189  00058E                     clear_0:
   190  00058E  6AEE               	clrf	postinc0,c
   191  000590  06E8               	decf	wreg,f,c
   192  000592  E1FD               	bnz	clear_0
   193  000594                     end_of_initialization:
   194                           	opt stack 0
   195  000594                     __end_of__initialization:
   196                           	opt stack 0
   197  000594  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   198  000596  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   199  000598  0E00               	movlw	low (__Lmediumconst shr (0+16))
   200  00059A  6EF8               	movwf	tblptru,c
   201  00059C  0100               	movlb	0
   202  00059E  EF9D  F002         	goto	_main	;jump to C main() function
   203                           tblptru	equ	0xFF8
   204                           tblptrh	equ	0xFF7
   205                           tblptrl	equ	0xFF6
   206                           tablat	equ	0xFF5
   207                           postinc0	equ	0xFEE
   208                           wreg	equ	0xFE8
   209                           
   210                           	psect	bssCOMRAM
   211  000001                     __pbssCOMRAM:
   212                           	opt stack 0
   213  000001                     _i2c1_object:
   214                           	opt stack 0
   215  000001                     	ds	7
   216  000008                     _TMR4_Ticked:
   217                           	opt stack 0
   218  000008                     	ds	2
   219  00000A                     I2C1_ISR@pi2c_buf_ptr:
   220                           	opt stack 0
   221  00000A                     	ds	2
   222  00000C                     _p_i2c1_current:
   223                           	opt stack 0
   224  00000C                     	ds	2
   225  00000E                     _p_i2c1_trb_current:
   226                           	opt stack 0
   227  00000E                     	ds	2
   228  000010                     KeyPadScan@Push:
   229                           	opt stack 0
   230  000010                     	ds	1
   231  000011                     I2C1_ISR@i2c_10bit_address_restart:
   232                           	opt stack 0
   233  000011                     	ds	1
   234  000012                     I2C1_ISR@i2c_bytes_left:
   235                           	opt stack 0
   236  000012                     	ds	1
   237  000013                     _i2c1_trb_count:
   238                           	opt stack 0
   239  000013                     	ds	1
   240  000014                     _i2c1_state:
   241                           	opt stack 0
   242  000014                     	ds	1
   243  000015                     I2C1_MasterRead@trBlock:
   244                           	opt stack 0
   245  000015                     	ds	6
   246  00001B                     I2C1_MasterWrite@trBlock:
   247                           	opt stack 0
   248  00001B                     	ds	6
   249  000021                     _i2c1_tr_queue:
   250                           	opt stack 0
   251  000021                     	ds	6
   252  000027                     I2C1_ISR@i2c_address:
   253                           	opt stack 0
   254  000027                     	ds	2
   255                           tblptru	equ	0xFF8
   256                           tblptrh	equ	0xFF7
   257                           tblptrl	equ	0xFF6
   258                           tablat	equ	0xFF5
   259                           postinc0	equ	0xFEE
   260                           wreg	equ	0xFE8
   261                           
   262                           	psect	dataCOMRAM
   263  000046                     __pdataCOMRAM:
   264                           	opt stack 0
   265  000046                     _KeyPressed:
   266                           	opt stack 0
   267  000046                     	ds	2
   268                           tblptru	equ	0xFF8
   269                           tblptrh	equ	0xFF7
   270                           tblptrl	equ	0xFF6
   271                           tablat	equ	0xFF5
   272                           postinc0	equ	0xFEE
   273                           wreg	equ	0xFE8
   274                           
   275                           	psect	cstackCOMRAM
   276  000029                     __pcstackCOMRAM:
   277                           	opt stack 0
   278  000029                     ??_I2C1_Stop:
   279  000029                     
   280                           ; 1 bytes @ 0x0
   281  000029                     	ds	2
   282  00002B                     I2C1_Stop@completion_code:
   283                           	opt stack 0
   284                           
   285                           ; 1 bytes @ 0x2
   286  00002B                     	ds	1
   287  00002C                     ??_I2C1_ISR:
   288                           
   289                           ; 1 bytes @ 0x3
   290  00002C                     	ds	2
   291  00002E                     ??_INTERRUPT_InterruptManager:
   292                           
   293                           ; 1 bytes @ 0x5
   294  00002E                     	ds	14
   295  00003C                     EUSART1_Write@txData:
   296                           	opt stack 0
   297  00003C                     TMR2_SetInterruptHandler@InterruptHandler:
   298                           	opt stack 0
   299  00003C                     TMR4_SetInterruptHandler@InterruptHandler:
   300                           	opt stack 0
   301  00003C                     Delay@DelayCount:
   302                           	opt stack 0
   303                           
   304                           ; 2 bytes @ 0x13
   305  00003C                     	ds	2
   306  00003E                     KeyPadScan@KeyPadKey:
   307                           	opt stack 0
   308                           
   309                           ; 1 bytes @ 0x15
   310  00003E                     	ds	1
   311  00003F                     ?_KeyPadAcquire:
   312                           	opt stack 0
   313                           
   314                           ; 2 bytes @ 0x16
   315  00003F                     	ds	2
   316  000041                     KeyPadAcquire@KeyAcquire:
   317                           	opt stack 0
   318                           
   319                           ; 1 bytes @ 0x18
   320  000041                     	ds	1
   321  000042                     tblptru	equ	0xFF8
   322                           tblptrh	equ	0xFF7
   323                           tblptrl	equ	0xFF6
   324                           tablat	equ	0xFF5
   325                           postinc0	equ	0xFEE
   326                           wreg	equ	0xFE8
   327                           
   328                           ; 1 bytes @ 0x19
   329 ;;
   330 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   331 ;;
   332 ;; *************** function _main *****************
   333 ;; Defined at:
   334 ;;		line 53 in file "main.c"
   335 ;; Parameters:    Size  Location     Type
   336 ;;		None
   337 ;; Auto vars:     Size  Location     Type
   338 ;;		None
   339 ;; Return value:  Size  Location     Type
   340 ;;                  1    wreg      void 
   341 ;; Registers used:
   342 ;;		wreg, status,2, status,0, cstack
   343 ;; Tracked objects:
   344 ;;		On entry : 0/0
   345 ;;		On exit  : 0/0
   346 ;;		Unchanged: 0/0
   347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   352 ;;Total ram usage:        0 bytes
   353 ;; Hardware stack levels required when called:    6
   354 ;; This function calls:
   355 ;;		_Delay
   356 ;;		_EUSART1_Write
   357 ;;		_KeyPadAcquire
   358 ;;		_SYSTEM_Initialize
   359 ;;		_TMR4_SetInterruptHandler
   360 ;; This function is called by:
   361 ;;		Startup code after reset
   362 ;; This function uses a non-reentrant model
   363 ;;
   364                           
   365                           	psect	text0
   366  00053A                     __ptext0:
   367                           	opt stack 0
   368  00053A                     _main:
   369                           	opt stack 25
   370                           
   371                           ;main.c: 56: SYSTEM_Initialize();
   372                           
   373                           ;incstack = 0
   374  00053A  EC10  F003         	call	_SYSTEM_Initialize	;wreg free
   375                           
   376                           ;main.c: 75: (INTCONbits.GIE = 1);
   377  00053E  8EF2               	bsf	intcon,7,c	;volatile
   378                           
   379                           ;main.c: 77: (INTCONbits.PEIE = 1);
   380  000540  8CF2               	bsf	intcon,6,c	;volatile
   381                           
   382                           ;main.c: 80: TMR4_SetInterruptHandler(TMR4_Interrupt);
   383  000542  0E22               	movlw	low _TMR4_Interrupt
   384  000544  6E3C               	movwf	TMR4_SetInterruptHandler@InterruptHandler,c
   385  000546  0E07               	movlw	high _TMR4_Interrupt
   386  000548  6E3D               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1,c
   387  00054A  EC87  F003         	call	_TMR4_SetInterruptHandler	;wreg free
   388                           
   389                           ;main.c: 95: Delay(10*10*10);
   390  00054E  0E03               	movlw	3
   391  000550  6E3D               	movwf	Delay@DelayCount+1,c
   392  000552  0EE8               	movlw	232
   393  000554  6E3C               	movwf	Delay@DelayCount,c
   394  000556  ECFC  F002         	call	_Delay	;wreg free
   395                           
   396                           ;main.c: 96: do { LATDbits.LATD0 = 0; } while(0);
   397  00055A  908C               	bcf	3980,0,c	;volatile
   398                           
   399                           ;main.c: 98: do { LATDbits.LATD2 = 1; } while(0);
   400  00055C  848C               	bsf	3980,2,c	;volatile
   401                           
   402                           ;main.c: 99: EUSART1_Write(1);
   403  00055E  0E01               	movlw	1
   404  000560  EC81  F003         	call	_EUSART1_Write
   405  000564                     l2070:
   406                           
   407                           ;main.c: 102: {
   408                           ;main.c: 103: EUSART1_Write(KeyPadAcquire());
   409  000564  EC7F  F002         	call	_KeyPadAcquire	;wreg free
   410  000568  503F               	movf	?_KeyPadAcquire,w,c
   411  00056A  EC81  F003         	call	_EUSART1_Write
   412  00056E  D7FA               	goto	l2070
   413  000570                     __end_of_main:
   414                           	opt stack 0
   415                           tblptru	equ	0xFF8
   416                           tblptrh	equ	0xFF7
   417                           tblptrl	equ	0xFF6
   418                           tablat	equ	0xFF5
   419                           intcon	equ	0xFF2
   420                           postinc0	equ	0xFEE
   421                           wreg	equ	0xFE8
   422                           
   423 ;; *************** function _SYSTEM_Initialize *****************
   424 ;; Defined at:
   425 ;;		line 111 in file "mcc_generated_files/mcc.c"
   426 ;; Parameters:    Size  Location     Type
   427 ;;		None
   428 ;; Auto vars:     Size  Location     Type
   429 ;;		None
   430 ;; Return value:  Size  Location     Type
   431 ;;                  1    wreg      void 
   432 ;; Registers used:
   433 ;;		wreg, status,2, status,0, cstack
   434 ;; Tracked objects:
   435 ;;		On entry : 0/0
   436 ;;		On exit  : 0/0
   437 ;;		Unchanged: 0/0
   438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   443 ;;Total ram usage:        0 bytes
   444 ;; Hardware stack levels used:    1
   445 ;; Hardware stack levels required when called:    5
   446 ;; This function calls:
   447 ;;		_EUSART1_Initialize
   448 ;;		_I2C1_Initialize
   449 ;;		_INTERRUPT_Initialize
   450 ;;		_OSCILLATOR_Initialize
   451 ;;		_PIN_MANAGER_Initialize
   452 ;;		_PWM4_Initialize
   453 ;;		_TMR2_Initialize
   454 ;;		_TMR4_Initialize
   455 ;; This function is called by:
   456 ;;		_main
   457 ;; This function uses a non-reentrant model
   458 ;;
   459                           
   460                           	psect	text1
   461  000620                     __ptext1:
   462                           	opt stack 0
   463  000620                     _SYSTEM_Initialize:
   464                           	opt stack 25
   465                           
   466                           ;mcc.c: 114: INTERRUPT_Initialize();
   467                           
   468                           ;incstack = 0
   469  000620  EC9B  F003         	call	_INTERRUPT_Initialize	;wreg free
   470                           
   471                           ;mcc.c: 115: PIN_MANAGER_Initialize();
   472  000624  EC39  F002         	call	_PIN_MANAGER_Initialize	;wreg free
   473                           
   474                           ;mcc.c: 116: OSCILLATOR_Initialize();
   475  000628  EC7A  F003         	call	_OSCILLATOR_Initialize	;wreg free
   476                           
   477                           ;mcc.c: 117: I2C1_Initialize();
   478  00062C  ECD1  F002         	call	_I2C1_Initialize	;wreg free
   479                           
   480                           ;mcc.c: 118: TMR4_Initialize();
   481  000630  ECE8  F002         	call	_TMR4_Initialize	;wreg free
   482                           
   483                           ;mcc.c: 119: PWM4_Initialize();
   484  000634  EC54  F003         	call	_PWM4_Initialize	;wreg free
   485                           
   486                           ;mcc.c: 120: TMR2_Initialize();
   487  000638  EC21  F003         	call	_TMR2_Initialize	;wreg free
   488                           
   489                           ;mcc.c: 121: EUSART1_Initialize();
   490  00063C  EC6F  F003         	call	_EUSART1_Initialize	;wreg free
   491  000640  0012               	return		;funcret
   492  000642                     __end_of_SYSTEM_Initialize:
   493                           	opt stack 0
   494                           tblptru	equ	0xFF8
   495                           tblptrh	equ	0xFF7
   496                           tblptrl	equ	0xFF6
   497                           tablat	equ	0xFF5
   498                           intcon	equ	0xFF2
   499                           postinc0	equ	0xFEE
   500                           wreg	equ	0xFE8
   501                           
   502 ;; *************** function _TMR4_Initialize *****************
   503 ;; Defined at:
   504 ;;		line 63 in file "mcc_generated_files/tmr4.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;		None
   507 ;; Auto vars:     Size  Location     Type
   508 ;;		None
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      void 
   511 ;; Registers used:
   512 ;;		wreg, status,2, status,0, cstack
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   522 ;;Total ram usage:        0 bytes
   523 ;; Hardware stack levels used:    1
   524 ;; Hardware stack levels required when called:    4
   525 ;; This function calls:
   526 ;;		_TMR4_SetInterruptHandler
   527 ;;		_TMR4_StartTimer
   528 ;; This function is called by:
   529 ;;		_SYSTEM_Initialize
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533                           	psect	text2
   534  0005D0                     __ptext2:
   535                           	opt stack 0
   536  0005D0                     _TMR4_Initialize:
   537                           	opt stack 25
   538                           
   539                           ;tmr4.c: 68: T4CON = 0x02;
   540                           
   541                           ;incstack = 0
   542  0005D0  0E02               	movlw	2
   543  0005D2  010F               	movlb	15	; () banked
   544  0005D4  6F51               	movwf	81,b	;volatile
   545                           
   546                           ;tmr4.c: 71: PR4 = 0x7C;
   547  0005D6  0E7C               	movlw	124
   548  0005D8  010F               	movlb	15	; () banked
   549  0005DA  6F52               	movwf	82,b	;volatile
   550                           
   551                           ;tmr4.c: 74: TMR4 = 0x00;
   552  0005DC  0E00               	movlw	0
   553  0005DE  010F               	movlb	15	; () banked
   554  0005E0  6F53               	movwf	83,b	;volatile
   555                           
   556                           ; BSR set to: 15
   557                           ;tmr4.c: 77: PIR5bits.TMR4IF = 0;
   558  0005E2  907E               	bcf	3966,0,c	;volatile
   559                           
   560                           ; BSR set to: 15
   561                           ;tmr4.c: 80: PIE5bits.TMR4IE = 1;
   562  0005E4  807D               	bsf	3965,0,c	;volatile
   563                           
   564                           ; BSR set to: 15
   565                           ;tmr4.c: 83: TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandler);
   566  0005E6  0E3C               	movlw	low _TMR4_DefaultInterruptHandler
   567  0005E8  6E3C               	movwf	TMR4_SetInterruptHandler@InterruptHandler,c
   568  0005EA  0E07               	movlw	high _TMR4_DefaultInterruptHandler
   569  0005EC  6E3D               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1,c
   570  0005EE  EC87  F003         	call	_TMR4_SetInterruptHandler	;wreg free
   571                           
   572                           ;tmr4.c: 86: TMR4_StartTimer();
   573  0005F2  EC96  F003         	call	_TMR4_StartTimer	;wreg free
   574  0005F6  0012               	return		;funcret
   575  0005F8                     __end_of_TMR4_Initialize:
   576                           	opt stack 0
   577                           tblptru	equ	0xFF8
   578                           tblptrh	equ	0xFF7
   579                           tblptrl	equ	0xFF6
   580                           tablat	equ	0xFF5
   581                           intcon	equ	0xFF2
   582                           postinc0	equ	0xFEE
   583                           wreg	equ	0xFE8
   584                           
   585 ;; *************** function _TMR4_StartTimer *****************
   586 ;; Defined at:
   587 ;;		line 89 in file "mcc_generated_files/tmr4.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;		None
   590 ;; Auto vars:     Size  Location     Type
   591 ;;		None
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      void 
   594 ;; Registers used:
   595 ;;		None
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   605 ;;Total ram usage:        0 bytes
   606 ;; Hardware stack levels used:    1
   607 ;; Hardware stack levels required when called:    3
   608 ;; This function calls:
   609 ;;		Nothing
   610 ;; This function is called by:
   611 ;;		_TMR4_Initialize
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           	psect	text3
   616  00072C                     __ptext3:
   617                           	opt stack 0
   618  00072C                     _TMR4_StartTimer:
   619                           	opt stack 25
   620                           
   621                           ;tmr4.c: 92: T4CONbits.TMR4ON = 1;
   622                           
   623                           ;incstack = 0
   624  00072C  010F               	movlb	15	; () banked
   625  00072E  8551               	bsf	81,2,b	;volatile
   626                           
   627                           ; BSR set to: 15
   628  000730  0012               	return		;funcret
   629  000732                     __end_of_TMR4_StartTimer:
   630                           	opt stack 0
   631                           tblptru	equ	0xFF8
   632                           tblptrh	equ	0xFF7
   633                           tblptrl	equ	0xFF6
   634                           tablat	equ	0xFF5
   635                           intcon	equ	0xFF2
   636                           postinc0	equ	0xFEE
   637                           wreg	equ	0xFE8
   638                           
   639 ;; *************** function _TMR4_SetInterruptHandler *****************
   640 ;; Defined at:
   641 ;;		line 134 in file "mcc_generated_files/tmr4.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;  InterruptHan    2   19[COMRAM] PTR void 
   644 ;;		 -> TMR4_Interrupt(1), TMR4_DefaultInterruptHandler(1), 
   645 ;; Auto vars:     Size  Location     Type
   646 ;;		None
   647 ;; Return value:  Size  Location     Type
   648 ;;                  1    wreg      void 
   649 ;; Registers used:
   650 ;;		wreg, status,2, status,0
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   656 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   659 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   660 ;;Total ram usage:        2 bytes
   661 ;; Hardware stack levels used:    1
   662 ;; Hardware stack levels required when called:    3
   663 ;; This function calls:
   664 ;;		Nothing
   665 ;; This function is called by:
   666 ;;		_TMR4_Initialize
   667 ;;		_main
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           	psect	text4
   672  00070E                     __ptext4:
   673                           	opt stack 0
   674  00070E                     _TMR4_SetInterruptHandler:
   675                           	opt stack 27
   676                           
   677                           ;tmr4.c: 135: TMR4_InterruptHandler = InterruptHandler;
   678                           
   679                           ; BSR set to: 15
   680                           ;incstack = 0
   681  00070E  C03C  F042         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
   682  000712  C03D  F043         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
   683  000716  0012               	return		;funcret
   684  000718                     __end_of_TMR4_SetInterruptHandler:
   685                           	opt stack 0
   686                           tblptru	equ	0xFF8
   687                           tblptrh	equ	0xFF7
   688                           tblptrl	equ	0xFF6
   689                           tablat	equ	0xFF5
   690                           intcon	equ	0xFF2
   691                           postinc0	equ	0xFEE
   692                           wreg	equ	0xFE8
   693                           
   694 ;; *************** function _TMR2_Initialize *****************
   695 ;; Defined at:
   696 ;;		line 63 in file "mcc_generated_files/tmr2.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;		None
   699 ;; Auto vars:     Size  Location     Type
   700 ;;		None
   701 ;; Return value:  Size  Location     Type
   702 ;;                  1    wreg      void 
   703 ;; Registers used:
   704 ;;		wreg, status,2, status,0, cstack
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   714 ;;Total ram usage:        0 bytes
   715 ;; Hardware stack levels used:    1
   716 ;; Hardware stack levels required when called:    4
   717 ;; This function calls:
   718 ;;		_TMR2_SetInterruptHandler
   719 ;;		_TMR2_StartTimer
   720 ;; This function is called by:
   721 ;;		_SYSTEM_Initialize
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           	psect	text5
   726  000642                     __ptext5:
   727                           	opt stack 0
   728  000642                     _TMR2_Initialize:
   729                           	opt stack 25
   730                           
   731                           ;tmr2.c: 68: T2CON = 0x02;
   732                           
   733                           ;incstack = 0
   734  000642  0E02               	movlw	2
   735  000644  6EBA               	movwf	4026,c	;volatile
   736                           
   737                           ;tmr2.c: 71: PR2 = 0x0C;
   738  000646  0E0C               	movlw	12
   739  000648  6EBB               	movwf	4027,c	;volatile
   740                           
   741                           ;tmr2.c: 74: TMR2 = 0x00;
   742  00064A  0E00               	movlw	0
   743  00064C  6EBC               	movwf	4028,c	;volatile
   744                           
   745                           ;tmr2.c: 77: PIR1bits.TMR2IF = 0;
   746  00064E  929E               	bcf	3998,1,c	;volatile
   747                           
   748                           ;tmr2.c: 80: PIE1bits.TMR2IE = 1;
   749  000650  829D               	bsf	3997,1,c	;volatile
   750                           
   751                           ;tmr2.c: 83: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
   752  000652  0E3E               	movlw	low _TMR2_DefaultInterruptHandler
   753  000654  6E3C               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
   754  000656  0E07               	movlw	high _TMR2_DefaultInterruptHandler
   755  000658  6E3D               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
   756  00065A  EC8C  F003         	call	_TMR2_SetInterruptHandler	;wreg free
   757                           
   758                           ;tmr2.c: 86: TMR2_StartTimer();
   759  00065E  EC99  F003         	call	_TMR2_StartTimer	;wreg free
   760  000662  0012               	return		;funcret
   761  000664                     __end_of_TMR2_Initialize:
   762                           	opt stack 0
   763                           tblptru	equ	0xFF8
   764                           tblptrh	equ	0xFF7
   765                           tblptrl	equ	0xFF6
   766                           tablat	equ	0xFF5
   767                           intcon	equ	0xFF2
   768                           postinc0	equ	0xFEE
   769                           wreg	equ	0xFE8
   770                           
   771 ;; *************** function _TMR2_StartTimer *****************
   772 ;; Defined at:
   773 ;;		line 89 in file "mcc_generated_files/tmr2.c"
   774 ;; Parameters:    Size  Location     Type
   775 ;;		None
   776 ;; Auto vars:     Size  Location     Type
   777 ;;		None
   778 ;; Return value:  Size  Location     Type
   779 ;;                  1    wreg      void 
   780 ;; Registers used:
   781 ;;		None
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   791 ;;Total ram usage:        0 bytes
   792 ;; Hardware stack levels used:    1
   793 ;; Hardware stack levels required when called:    3
   794 ;; This function calls:
   795 ;;		Nothing
   796 ;; This function is called by:
   797 ;;		_TMR2_Initialize
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           	psect	text6
   802  000732                     __ptext6:
   803                           	opt stack 0
   804  000732                     _TMR2_StartTimer:
   805                           	opt stack 25
   806                           
   807                           ;tmr2.c: 92: T2CONbits.TMR2ON = 1;
   808                           
   809                           ;incstack = 0
   810  000732  84BA               	bsf	4026,2,c	;volatile
   811  000734  0012               	return		;funcret
   812  000736                     __end_of_TMR2_StartTimer:
   813                           	opt stack 0
   814                           tblptru	equ	0xFF8
   815                           tblptrh	equ	0xFF7
   816                           tblptrl	equ	0xFF6
   817                           tablat	equ	0xFF5
   818                           intcon	equ	0xFF2
   819                           postinc0	equ	0xFEE
   820                           wreg	equ	0xFE8
   821                           
   822 ;; *************** function _TMR2_SetInterruptHandler *****************
   823 ;; Defined at:
   824 ;;		line 134 in file "mcc_generated_files/tmr2.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;  InterruptHan    2   19[COMRAM] PTR void 
   827 ;;		 -> TMR2_DefaultInterruptHandler(1), 
   828 ;; Auto vars:     Size  Location     Type
   829 ;;		None
   830 ;; Return value:  Size  Location     Type
   831 ;;                  1    wreg      void 
   832 ;; Registers used:
   833 ;;		wreg, status,2, status,0
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   839 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   842 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   843 ;;Total ram usage:        2 bytes
   844 ;; Hardware stack levels used:    1
   845 ;; Hardware stack levels required when called:    3
   846 ;; This function calls:
   847 ;;		Nothing
   848 ;; This function is called by:
   849 ;;		_TMR2_Initialize
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text7
   854  000718                     __ptext7:
   855                           	opt stack 0
   856  000718                     _TMR2_SetInterruptHandler:
   857                           	opt stack 25
   858                           
   859                           ;tmr2.c: 135: TMR2_InterruptHandler = InterruptHandler;
   860                           
   861                           ;incstack = 0
   862  000718  C03C  F044         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
   863  00071C  C03D  F045         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
   864  000720  0012               	return		;funcret
   865  000722                     __end_of_TMR2_SetInterruptHandler:
   866                           	opt stack 0
   867                           tblptru	equ	0xFF8
   868                           tblptrh	equ	0xFF7
   869                           tblptrl	equ	0xFF6
   870                           tablat	equ	0xFF5
   871                           intcon	equ	0xFF2
   872                           postinc0	equ	0xFEE
   873                           wreg	equ	0xFE8
   874                           
   875 ;; *************** function _PWM4_Initialize *****************
   876 ;; Defined at:
   877 ;;		line 63 in file "mcc_generated_files/pwm4.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;		None
   880 ;; Auto vars:     Size  Location     Type
   881 ;;		None
   882 ;; Return value:  Size  Location     Type
   883 ;;                  1    wreg      void 
   884 ;; Registers used:
   885 ;;		wreg, status,2
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   895 ;;Total ram usage:        0 bytes
   896 ;; Hardware stack levels used:    1
   897 ;; Hardware stack levels required when called:    3
   898 ;; This function calls:
   899 ;;		Nothing
   900 ;; This function is called by:
   901 ;;		_SYSTEM_Initialize
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905                           	psect	text8
   906  0006A8                     __ptext8:
   907                           	opt stack 0
   908  0006A8                     _PWM4_Initialize:
   909                           	opt stack 26
   910                           
   911                           ;pwm4.c: 68: CCP4CON = 0x0C;
   912                           
   913                           ;incstack = 0
   914  0006A8  0E0C               	movlw	12
   915  0006AA  010F               	movlb	15	; () banked
   916  0006AC  6F57               	movwf	87,b	;volatile
   917                           
   918                           ;pwm4.c: 71: CCPR4L = 0x00;
   919  0006AE  0E00               	movlw	0
   920  0006B0  010F               	movlb	15	; () banked
   921  0006B2  6F58               	movwf	88,b	;volatile
   922                           
   923                           ;pwm4.c: 74: CCPR4H = 0x00;
   924  0006B4  0E00               	movlw	0
   925  0006B6  010F               	movlb	15	; () banked
   926  0006B8  6F59               	movwf	89,b	;volatile
   927                           
   928                           ;pwm4.c: 77: CCPTMRS1bits.C4TSEL = 0x1;
   929  0006BA  010F               	movlb	15	; () banked
   930  0006BC  5148               	movf	72,w,b	;volatile
   931  0006BE  0BFC               	andlw	-4
   932  0006C0  0901               	iorlw	1
   933  0006C2  6F48               	movwf	72,b	;volatile
   934                           
   935                           ; BSR set to: 15
   936  0006C4  0012               	return		;funcret
   937  0006C6                     __end_of_PWM4_Initialize:
   938                           	opt stack 0
   939                           tblptru	equ	0xFF8
   940                           tblptrh	equ	0xFF7
   941                           tblptrl	equ	0xFF6
   942                           tablat	equ	0xFF5
   943                           intcon	equ	0xFF2
   944                           postinc0	equ	0xFEE
   945                           wreg	equ	0xFE8
   946                           
   947 ;; *************** function _PIN_MANAGER_Initialize *****************
   948 ;; Defined at:
   949 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		wreg, status,2
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   967 ;;Total ram usage:        0 bytes
   968 ;; Hardware stack levels used:    1
   969 ;; Hardware stack levels required when called:    3
   970 ;; This function calls:
   971 ;;		Nothing
   972 ;; This function is called by:
   973 ;;		_SYSTEM_Initialize
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           	psect	text9
   978  000472                     __ptext9:
   979                           	opt stack 0
   980  000472                     _PIN_MANAGER_Initialize:
   981                           	opt stack 26
   982                           
   983                           ;pin_manager.c: 56: LATE = 0x00;
   984                           
   985                           ; BSR set to: 15
   986                           ;incstack = 0
   987  000472  0E00               	movlw	0
   988  000474  6E8D               	movwf	3981,c	;volatile
   989                           
   990                           ;pin_manager.c: 57: LATD = 0x00;
   991  000476  0E00               	movlw	0
   992  000478  6E8C               	movwf	3980,c	;volatile
   993                           
   994                           ;pin_manager.c: 58: LATA = 0x00;
   995  00047A  0E00               	movlw	0
   996  00047C  6E89               	movwf	3977,c	;volatile
   997                           
   998                           ;pin_manager.c: 59: LATB = 0x00;
   999  00047E  0E00               	movlw	0
  1000  000480  6E8A               	movwf	3978,c	;volatile
  1001                           
  1002                           ;pin_manager.c: 60: LATC = 0x00;
  1003  000482  0E00               	movlw	0
  1004  000484  6E8B               	movwf	3979,c	;volatile
  1005                           
  1006                           ;pin_manager.c: 65: TRISE = 0x07;
  1007  000486  0E07               	movlw	7
  1008  000488  6E96               	movwf	3990,c	;volatile
  1009                           
  1010                           ;pin_manager.c: 66: TRISA = 0xF0;
  1011  00048A  0EF0               	movlw	240
  1012  00048C  6E92               	movwf	3986,c	;volatile
  1013                           
  1014                           ;pin_manager.c: 67: TRISB = 0x00;
  1015  00048E  0E00               	movlw	0
  1016  000490  6E93               	movwf	3987,c	;volatile
  1017                           
  1018                           ;pin_manager.c: 68: TRISC = 0x9B;
  1019  000492  0E9B               	movlw	155
  1020  000494  6E94               	movwf	3988,c	;volatile
  1021                           
  1022                           ;pin_manager.c: 69: TRISD = 0x08;
  1023  000496  0E08               	movlw	8
  1024  000498  6E95               	movwf	3989,c	;volatile
  1025                           
  1026                           ;pin_manager.c: 74: ANSELC = 0x24;
  1027  00049A  0E24               	movlw	36
  1028  00049C  010F               	movlb	15	; () banked
  1029  00049E  6F3A               	movwf	58,b	;volatile
  1030                           
  1031                           ;pin_manager.c: 75: ANSELB = 0x00;
  1032  0004A0  0E00               	movlw	0
  1033  0004A2  010F               	movlb	15	; () banked
  1034  0004A4  6F39               	movwf	57,b	;volatile
  1035                           
  1036                           ;pin_manager.c: 76: ANSELD = 0xFC;
  1037  0004A6  0EFC               	movlw	252
  1038  0004A8  010F               	movlb	15	; () banked
  1039  0004AA  6F3B               	movwf	59,b	;volatile
  1040                           
  1041                           ;pin_manager.c: 77: ANSELE = 0x07;
  1042  0004AC  0E07               	movlw	7
  1043  0004AE  010F               	movlb	15	; () banked
  1044  0004B0  6F3C               	movwf	60,b	;volatile
  1045                           
  1046                           ;pin_manager.c: 78: ANSELA = 0x00;
  1047  0004B2  0E00               	movlw	0
  1048  0004B4  010F               	movlb	15	; () banked
  1049  0004B6  6F38               	movwf	56,b	;volatile
  1050                           
  1051                           ;pin_manager.c: 83: WPUB = 0x00;
  1052  0004B8  0E00               	movlw	0
  1053  0004BA  6E61               	movwf	3937,c	;volatile
  1054                           
  1055                           ; BSR set to: 15
  1056                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 0;
  1057  0004BC  9EF1               	bcf	intcon2,7,c	;volatile
  1058                           
  1059                           ; BSR set to: 15
  1060  0004BE  0012               	return		;funcret
  1061  0004C0                     __end_of_PIN_MANAGER_Initialize:
  1062                           	opt stack 0
  1063                           tblptru	equ	0xFF8
  1064                           tblptrh	equ	0xFF7
  1065                           tblptrl	equ	0xFF6
  1066                           tablat	equ	0xFF5
  1067                           intcon	equ	0xFF2
  1068                           intcon2	equ	0xFF1
  1069                           postinc0	equ	0xFEE
  1070                           wreg	equ	0xFE8
  1071                           
  1072 ;; *************** function _OSCILLATOR_Initialize *****************
  1073 ;; Defined at:
  1074 ;;		line 124 in file "mcc_generated_files/mcc.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;		None
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;		None
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  1    wreg      void 
  1081 ;; Registers used:
  1082 ;;		wreg, status,2
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1092 ;;Total ram usage:        0 bytes
  1093 ;; Hardware stack levels used:    1
  1094 ;; Hardware stack levels required when called:    3
  1095 ;; This function calls:
  1096 ;;		Nothing
  1097 ;; This function is called by:
  1098 ;;		_SYSTEM_Initialize
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           	psect	text10
  1103  0006F4                     __ptext10:
  1104                           	opt stack 0
  1105  0006F4                     _OSCILLATOR_Initialize:
  1106                           	opt stack 26
  1107                           
  1108                           ;mcc.c: 127: OSCCON = 0x60;
  1109                           
  1110                           ; BSR set to: 15
  1111                           ;incstack = 0
  1112  0006F4  0E60               	movlw	96
  1113  0006F6  6ED3               	movwf	4051,c	;volatile
  1114                           
  1115                           ;mcc.c: 129: OSCCON2 = 0x04;
  1116  0006F8  0E04               	movlw	4
  1117  0006FA  6ED2               	movwf	4050,c	;volatile
  1118                           
  1119                           ;mcc.c: 131: OSCTUNE = 0x00;
  1120  0006FC  0E00               	movlw	0
  1121  0006FE  6E9B               	movwf	3995,c	;volatile
  1122  000700  0012               	return		;funcret
  1123  000702                     __end_of_OSCILLATOR_Initialize:
  1124                           	opt stack 0
  1125                           tblptru	equ	0xFF8
  1126                           tblptrh	equ	0xFF7
  1127                           tblptrl	equ	0xFF6
  1128                           tablat	equ	0xFF5
  1129                           intcon	equ	0xFF2
  1130                           intcon2	equ	0xFF1
  1131                           postinc0	equ	0xFEE
  1132                           wreg	equ	0xFE8
  1133                           
  1134 ;; *************** function _INTERRUPT_Initialize *****************
  1135 ;; Defined at:
  1136 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;		None
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;		None
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  1    wreg      void 
  1143 ;; Registers used:
  1144 ;;		None
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1154 ;;Total ram usage:        0 bytes
  1155 ;; Hardware stack levels used:    1
  1156 ;; Hardware stack levels required when called:    3
  1157 ;; This function calls:
  1158 ;;		Nothing
  1159 ;; This function is called by:
  1160 ;;		_SYSTEM_Initialize
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           	psect	text11
  1165  000736                     __ptext11:
  1166                           	opt stack 0
  1167  000736                     _INTERRUPT_Initialize:
  1168                           	opt stack 26
  1169                           
  1170                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1171                           
  1172                           ;incstack = 0
  1173  000736  9ED0               	bcf	4048,7,c	;volatile
  1174  000738  0012               	return		;funcret
  1175  00073A                     __end_of_INTERRUPT_Initialize:
  1176                           	opt stack 0
  1177                           tblptru	equ	0xFF8
  1178                           tblptrh	equ	0xFF7
  1179                           tblptrl	equ	0xFF6
  1180                           tablat	equ	0xFF5
  1181                           intcon	equ	0xFF2
  1182                           intcon2	equ	0xFF1
  1183                           postinc0	equ	0xFEE
  1184                           wreg	equ	0xFE8
  1185                           
  1186 ;; *************** function _I2C1_Initialize *****************
  1187 ;; Defined at:
  1188 ;;		line 198 in file "mcc_generated_files/i2c1.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;		None
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;		None
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  1    wreg      void 
  1195 ;; Registers used:
  1196 ;;		wreg, status,2, status,0
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1206 ;;Total ram usage:        0 bytes
  1207 ;; Hardware stack levels used:    1
  1208 ;; Hardware stack levels required when called:    3
  1209 ;; This function calls:
  1210 ;;		Nothing
  1211 ;; This function is called by:
  1212 ;;		_SYSTEM_Initialize
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           	psect	text12
  1217  0005A2                     __ptext12:
  1218                           	opt stack 0
  1219  0005A2                     _I2C1_Initialize:
  1220                           	opt stack 26
  1221                           
  1222                           ;i2c1.c: 200: i2c1_object.pTrHead = i2c1_tr_queue;
  1223                           
  1224                           ;incstack = 0
  1225  0005A2  0E21               	movlw	low _i2c1_tr_queue
  1226  0005A4  6E03               	movwf	_i2c1_object+2,c
  1227  0005A6  0E00               	movlw	high _i2c1_tr_queue
  1228  0005A8  6E04               	movwf	_i2c1_object+3,c
  1229                           
  1230                           ;i2c1.c: 201: i2c1_object.pTrTail = i2c1_tr_queue;
  1231  0005AA  0E21               	movlw	low _i2c1_tr_queue
  1232  0005AC  6E01               	movwf	_i2c1_object,c
  1233  0005AE  0E00               	movlw	high _i2c1_tr_queue
  1234  0005B0  6E02               	movwf	_i2c1_object+1,c
  1235                           
  1236                           ;i2c1.c: 202: i2c1_object.trStatus.s.empty = 1;
  1237  0005B2  8205               	bsf	_i2c1_object+4,1,c
  1238                           
  1239                           ;i2c1.c: 203: i2c1_object.trStatus.s.full = 0;
  1240  0005B4  9005               	bcf	_i2c1_object+4,0,c
  1241                           
  1242                           ;i2c1.c: 205: i2c1_object.i2cErrors = 0;
  1243  0005B6  0E00               	movlw	0
  1244  0005B8  6E07               	movwf	_i2c1_object+6,c
  1245                           
  1246                           ;i2c1.c: 208: SSP1STAT = 0x00;
  1247  0005BA  0E00               	movlw	0
  1248  0005BC  6EC7               	movwf	4039,c	;volatile
  1249                           
  1250                           ;i2c1.c: 210: SSP1CON1 = 0x28;
  1251  0005BE  0E28               	movlw	40
  1252  0005C0  6EC6               	movwf	4038,c	;volatile
  1253                           
  1254                           ;i2c1.c: 212: SSP1CON3 = 0x00;
  1255  0005C2  0E00               	movlw	0
  1256  0005C4  6ECB               	movwf	4043,c	;volatile
  1257                           
  1258                           ;i2c1.c: 214: SSP1ADD = 0x03;
  1259  0005C6  0E03               	movlw	3
  1260  0005C8  6EC8               	movwf	4040,c	;volatile
  1261                           
  1262                           ;i2c1.c: 218: PIR1bits.SSP1IF = 0;
  1263  0005CA  969E               	bcf	3998,3,c	;volatile
  1264                           
  1265                           ;i2c1.c: 220: PIE1bits.SSP1IE = 1;
  1266  0005CC  869D               	bsf	3997,3,c	;volatile
  1267  0005CE  0012               	return		;funcret
  1268  0005D0                     __end_of_I2C1_Initialize:
  1269                           	opt stack 0
  1270                           tblptru	equ	0xFF8
  1271                           tblptrh	equ	0xFF7
  1272                           tblptrl	equ	0xFF6
  1273                           tablat	equ	0xFF5
  1274                           intcon	equ	0xFF2
  1275                           intcon2	equ	0xFF1
  1276                           postinc0	equ	0xFEE
  1277                           wreg	equ	0xFE8
  1278                           
  1279 ;; *************** function _EUSART1_Initialize *****************
  1280 ;; Defined at:
  1281 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;		None
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;		None
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  1    wreg      void 
  1288 ;; Registers used:
  1289 ;;		wreg, status,2
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1299 ;;Total ram usage:        0 bytes
  1300 ;; Hardware stack levels used:    1
  1301 ;; Hardware stack levels required when called:    3
  1302 ;; This function calls:
  1303 ;;		Nothing
  1304 ;; This function is called by:
  1305 ;;		_SYSTEM_Initialize
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           	psect	text13
  1310  0006DE                     __ptext13:
  1311                           	opt stack 0
  1312  0006DE                     _EUSART1_Initialize:
  1313                           	opt stack 26
  1314                           
  1315                           ;eusart1.c: 60: BAUDCON1 = 0x08;
  1316                           
  1317                           ;incstack = 0
  1318  0006DE  0E08               	movlw	8
  1319  0006E0  6EB8               	movwf	4024,c	;volatile
  1320                           
  1321                           ;eusart1.c: 63: RCSTA1 = 0x90;
  1322  0006E2  0E90               	movlw	144
  1323  0006E4  6EAB               	movwf	4011,c	;volatile
  1324                           
  1325                           ;eusart1.c: 66: TXSTA1 = 0x24;
  1326  0006E6  0E24               	movlw	36
  1327  0006E8  6EAC               	movwf	4012,c	;volatile
  1328                           
  1329                           ;eusart1.c: 69: SPBRG1 = 0xCF;
  1330  0006EA  0ECF               	movlw	207
  1331  0006EC  6EAF               	movwf	4015,c	;volatile
  1332                           
  1333                           ;eusart1.c: 72: SPBRGH1 = 0x00;
  1334  0006EE  0E00               	movlw	0
  1335  0006F0  6EB0               	movwf	4016,c	;volatile
  1336  0006F2  0012               	return		;funcret
  1337  0006F4                     __end_of_EUSART1_Initialize:
  1338                           	opt stack 0
  1339                           tblptru	equ	0xFF8
  1340                           tblptrh	equ	0xFF7
  1341                           tblptrl	equ	0xFF6
  1342                           tablat	equ	0xFF5
  1343                           intcon	equ	0xFF2
  1344                           intcon2	equ	0xFF1
  1345                           postinc0	equ	0xFEE
  1346                           wreg	equ	0xFE8
  1347                           
  1348 ;; *************** function _KeyPadAcquire *****************
  1349 ;; Defined at:
  1350 ;;		line 189 in file "DriverTeclado.c"
  1351 ;; Parameters:    Size  Location     Type
  1352 ;;		None
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;  KeyAcquire      1   24[COMRAM] unsigned char 
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  2   22[COMRAM] int 
  1357 ;; Registers used:
  1358 ;;		wreg, status,2, status,0, cstack
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1364 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1365 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1367 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1368 ;;Total ram usage:        3 bytes
  1369 ;; Hardware stack levels used:    1
  1370 ;; Hardware stack levels required when called:    5
  1371 ;; This function calls:
  1372 ;;		_Delay
  1373 ;;		_KeyPadScan
  1374 ;; This function is called by:
  1375 ;;		_main
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           	psect	text14
  1380  0004FE                     __ptext14:
  1381                           	opt stack 0
  1382  0004FE                     _KeyPadAcquire:
  1383                           	opt stack 25
  1384                           
  1385                           ;DriverTeclado.c: 191: char KeyAcquire = 0xFF;
  1386                           
  1387                           ;incstack = 0
  1388  0004FE  6841               	setf	KeyPadAcquire@KeyAcquire,c
  1389                           
  1390                           ;DriverTeclado.c: 192: while (KeyPressed==1)
  1391  000500  D010               	goto	l2050
  1392  000502                     l2042:
  1393                           
  1394                           ;DriverTeclado.c: 193: {
  1395                           ;DriverTeclado.c: 194: KeyAcquire = KeyPadScan();
  1396  000502  EC78  F001         	call	_KeyPadScan	;wreg free
  1397  000506  6E41               	movwf	KeyPadAcquire@KeyAcquire,c
  1398                           
  1399                           ;DriverTeclado.c: 195: if (KeyAcquire!=0xFF)KeyPressed=0;
  1400  000508  2841               	incf	KeyPadAcquire@KeyAcquire,w,c
  1401  00050A  B4D8               	btfsc	status,2,c
  1402  00050C  D004               	goto	l2048
  1403  00050E  0E00               	movlw	0
  1404  000510  6E47               	movwf	_KeyPressed+1,c
  1405  000512  0E00               	movlw	0
  1406  000514  6E46               	movwf	_KeyPressed,c
  1407  000516                     l2048:
  1408                           
  1409                           ;DriverTeclado.c: 196: Delay(150);
  1410  000516  0E00               	movlw	0
  1411  000518  6E3D               	movwf	Delay@DelayCount+1,c
  1412  00051A  0E96               	movlw	150
  1413  00051C  6E3C               	movwf	Delay@DelayCount,c
  1414  00051E  ECFC  F002         	call	_Delay	;wreg free
  1415  000522                     l2050:
  1416  000522  0446               	decf	_KeyPressed,w,c
  1417  000524  1047               	iorwf	_KeyPressed+1,w,c
  1418  000526  B4D8               	btfsc	status,2,c
  1419  000528  D7EC               	goto	l2042
  1420                           
  1421                           ;DriverTeclado.c: 197: }
  1422                           ;DriverTeclado.c: 198: KeyPressed=1;
  1423  00052A  0E00               	movlw	0
  1424  00052C  6E47               	movwf	_KeyPressed+1,c
  1425  00052E  0E01               	movlw	1
  1426  000530  6E46               	movwf	_KeyPressed,c
  1427                           
  1428                           ;DriverTeclado.c: 199: return(KeyAcquire);
  1429  000532  C041  F03F         	movff	KeyPadAcquire@KeyAcquire,?_KeyPadAcquire
  1430  000536  6A40               	clrf	?_KeyPadAcquire+1,c
  1431  000538  0012               	return	
  1432  00053A                     __end_of_KeyPadAcquire:
  1433                           	opt stack 0
  1434                           tblptru	equ	0xFF8
  1435                           tblptrh	equ	0xFF7
  1436                           tblptrl	equ	0xFF6
  1437                           tablat	equ	0xFF5
  1438                           intcon	equ	0xFF2
  1439                           intcon2	equ	0xFF1
  1440                           postinc0	equ	0xFEE
  1441                           wreg	equ	0xFE8
  1442                           status	equ	0xFD8
  1443                           
  1444 ;; *************** function _KeyPadScan *****************
  1445 ;; Defined at:
  1446 ;;		line 16 in file "DriverTeclado.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;		None
  1449 ;; Auto vars:     Size  Location     Type
  1450 ;;  KeyPadKey       1   21[COMRAM] unsigned char 
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  1    wreg      unsigned char 
  1453 ;; Registers used:
  1454 ;;		wreg, status,2, status,0, cstack
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1461 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1463 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1464 ;;Total ram usage:        1 bytes
  1465 ;; Hardware stack levels used:    1
  1466 ;; Hardware stack levels required when called:    4
  1467 ;; This function calls:
  1468 ;;		_Delay
  1469 ;; This function is called by:
  1470 ;;		_KeyPadAcquire
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           	psect	text15
  1475  0002F0                     __ptext15:
  1476                           	opt stack 0
  1477  0002F0                     _KeyPadScan:
  1478                           	opt stack 25
  1479                           
  1480                           ;DriverTeclado.c: 18: char KeyPadKey = 0xFF;
  1481                           
  1482                           ;incstack = 0
  1483  0002F0  683E               	setf	KeyPadScan@KeyPadKey,c
  1484                           
  1485                           ;DriverTeclado.c: 19: static uint8_t Push = 0;
  1486                           ;DriverTeclado.c: 21: do { LATAbits.LATA3 = 0; } while(0);
  1487  0002F2  9689               	bcf	3977,3,c	;volatile
  1488                           
  1489                           ;DriverTeclado.c: 22: do { LATAbits.LATA2 = 1; } while(0);
  1490  0002F4  8489               	bsf	3977,2,c	;volatile
  1491                           
  1492                           ;DriverTeclado.c: 23: do { LATAbits.LATA1 = 1; } while(0);
  1493  0002F6  8289               	bsf	3977,1,c	;volatile
  1494                           
  1495                           ;DriverTeclado.c: 24: do { LATAbits.LATA0 = 1; } while(0);
  1496  0002F8  8089               	bsf	3977,0,c	;volatile
  1497                           
  1498                           ;DriverTeclado.c: 26: Push = PORTAbits.RA4;
  1499  0002FA  0E00               	movlw	0
  1500  0002FC  B880               	btfsc	3968,4,c	;volatile
  1501  0002FE  0E01               	movlw	1
  1502  000300  6E10               	movwf	KeyPadScan@Push,c
  1503                           
  1504                           ;DriverTeclado.c: 27: if (Push==0)
  1505  000302  5010               	movf	KeyPadScan@Push,w,c
  1506  000304  A4D8               	btfss	status,2,c
  1507  000306  D002               	goto	l1902
  1508                           
  1509                           ;DriverTeclado.c: 28: {
  1510                           ;DriverTeclado.c: 29: KeyPadKey = '*';
  1511  000308  0E2A               	movlw	42
  1512  00030A  D01A               	goto	L3
  1513  00030C                     l1902:
  1514                           
  1515                           ;DriverTeclado.c: 32: else
  1516                           ;DriverTeclado.c: 33: {
  1517                           ;DriverTeclado.c: 34: Push = PORTAbits.RA5;
  1518  00030C  0E00               	movlw	0
  1519  00030E  BA80               	btfsc	3968,5,c	;volatile
  1520  000310  0E01               	movlw	1
  1521  000312  6E10               	movwf	KeyPadScan@Push,c
  1522                           
  1523                           ;DriverTeclado.c: 35: if (Push==0)
  1524  000314  5010               	movf	KeyPadScan@Push,w,c
  1525  000316  A4D8               	btfss	status,2,c
  1526  000318  D002               	goto	l1908
  1527                           
  1528                           ;DriverTeclado.c: 36: {
  1529                           ;DriverTeclado.c: 37: KeyPadKey = '0';
  1530  00031A  0E30               	movlw	48
  1531  00031C  D011               	goto	L3
  1532  00031E                     l1908:
  1533                           
  1534                           ;DriverTeclado.c: 40: else
  1535                           ;DriverTeclado.c: 41: {
  1536                           ;DriverTeclado.c: 42: Push = PORTAbits.RA6;
  1537  00031E  0E00               	movlw	0
  1538  000320  BC80               	btfsc	3968,6,c	;volatile
  1539  000322  0E01               	movlw	1
  1540  000324  6E10               	movwf	KeyPadScan@Push,c
  1541                           
  1542                           ;DriverTeclado.c: 43: if (Push==0)
  1543  000326  5010               	movf	KeyPadScan@Push,w,c
  1544  000328  A4D8               	btfss	status,2,c
  1545  00032A  D002               	goto	l1914
  1546                           
  1547                           ;DriverTeclado.c: 44: {
  1548                           ;DriverTeclado.c: 45: KeyPadKey = '#';
  1549  00032C  0E23               	movlw	35
  1550  00032E  D008               	goto	L3
  1551  000330                     l1914:
  1552                           
  1553                           ;DriverTeclado.c: 48: else
  1554                           ;DriverTeclado.c: 49: {
  1555                           ;DriverTeclado.c: 50: Push = PORTAbits.RA7;
  1556  000330  0E00               	movlw	0
  1557  000332  BE80               	btfsc	3968,7,c	;volatile
  1558  000334  0E01               	movlw	1
  1559  000336  6E10               	movwf	KeyPadScan@Push,c
  1560                           
  1561                           ;DriverTeclado.c: 51: if (Push==0)
  1562  000338  5010               	movf	KeyPadScan@Push,w,c
  1563  00033A  A4D8               	btfss	status,2,c
  1564  00033C  D004               	goto	l1920
  1565                           
  1566                           ;DriverTeclado.c: 52: {
  1567                           ;DriverTeclado.c: 53: KeyPadKey = 'D';
  1568  00033E  0E44               	movlw	68
  1569  000340                     L3:
  1570  000340  6E3E               	movwf	KeyPadScan@KeyPadKey,c
  1571                           
  1572                           ;DriverTeclado.c: 54: Push = 1;
  1573  000342  0E01               	movlw	1
  1574  000344  6E10               	movwf	KeyPadScan@Push,c
  1575  000346                     l1920:
  1576                           
  1577                           ;DriverTeclado.c: 55: }
  1578                           ;DriverTeclado.c: 56: }
  1579                           ;DriverTeclado.c: 57: }
  1580                           ;DriverTeclado.c: 58: }
  1581                           ;DriverTeclado.c: 60: Delay(5);
  1582  000346  0E00               	movlw	0
  1583  000348  6E3D               	movwf	Delay@DelayCount+1,c
  1584  00034A  0E05               	movlw	5
  1585  00034C  6E3C               	movwf	Delay@DelayCount,c
  1586  00034E  ECFC  F002         	call	_Delay	;wreg free
  1587                           
  1588                           ;DriverTeclado.c: 62: do { LATAbits.LATA3 = 1; } while(0);
  1589  000352  8689               	bsf	3977,3,c	;volatile
  1590                           
  1591                           ;DriverTeclado.c: 63: do { LATAbits.LATA2 = 0; } while(0);
  1592  000354  9489               	bcf	3977,2,c	;volatile
  1593                           
  1594                           ;DriverTeclado.c: 65: Push = PORTAbits.RA4;
  1595  000356  0E00               	movlw	0
  1596  000358  B880               	btfsc	3968,4,c	;volatile
  1597  00035A  0E01               	movlw	1
  1598  00035C  6E10               	movwf	KeyPadScan@Push,c
  1599                           
  1600                           ;DriverTeclado.c: 66: if (Push==0)
  1601  00035E  5010               	movf	KeyPadScan@Push,w,c
  1602  000360  A4D8               	btfss	status,2,c
  1603  000362  D002               	goto	l1932
  1604                           
  1605                           ;DriverTeclado.c: 67: {
  1606                           ;DriverTeclado.c: 68: KeyPadKey = '7';
  1607  000364  0E37               	movlw	55
  1608  000366  D01A               	goto	L6
  1609  000368                     l1932:
  1610                           
  1611                           ;DriverTeclado.c: 71: else
  1612                           ;DriverTeclado.c: 72: {
  1613                           ;DriverTeclado.c: 73: Push = PORTAbits.RA5;
  1614  000368  0E00               	movlw	0
  1615  00036A  BA80               	btfsc	3968,5,c	;volatile
  1616  00036C  0E01               	movlw	1
  1617  00036E  6E10               	movwf	KeyPadScan@Push,c
  1618                           
  1619                           ;DriverTeclado.c: 74: if (Push==0)
  1620  000370  5010               	movf	KeyPadScan@Push,w,c
  1621  000372  A4D8               	btfss	status,2,c
  1622  000374  D002               	goto	l1938
  1623                           
  1624                           ;DriverTeclado.c: 75: {
  1625                           ;DriverTeclado.c: 76: KeyPadKey = '8';
  1626  000376  0E38               	movlw	56
  1627  000378  D011               	goto	L6
  1628  00037A                     l1938:
  1629                           
  1630                           ;DriverTeclado.c: 79: else
  1631                           ;DriverTeclado.c: 80: {
  1632                           ;DriverTeclado.c: 81: Push = PORTAbits.RA6;
  1633  00037A  0E00               	movlw	0
  1634  00037C  BC80               	btfsc	3968,6,c	;volatile
  1635  00037E  0E01               	movlw	1
  1636  000380  6E10               	movwf	KeyPadScan@Push,c
  1637                           
  1638                           ;DriverTeclado.c: 82: if (Push==0)
  1639  000382  5010               	movf	KeyPadScan@Push,w,c
  1640  000384  A4D8               	btfss	status,2,c
  1641  000386  D002               	goto	l1944
  1642                           
  1643                           ;DriverTeclado.c: 83: {
  1644                           ;DriverTeclado.c: 84: KeyPadKey = '9';
  1645  000388  0E39               	movlw	57
  1646  00038A  D008               	goto	L6
  1647  00038C                     l1944:
  1648                           
  1649                           ;DriverTeclado.c: 87: else
  1650                           ;DriverTeclado.c: 88: {
  1651                           ;DriverTeclado.c: 89: Push = PORTAbits.RA7;
  1652  00038C  0E00               	movlw	0
  1653  00038E  BE80               	btfsc	3968,7,c	;volatile
  1654  000390  0E01               	movlw	1
  1655  000392  6E10               	movwf	KeyPadScan@Push,c
  1656                           
  1657                           ;DriverTeclado.c: 90: if (Push==0)
  1658  000394  5010               	movf	KeyPadScan@Push,w,c
  1659  000396  A4D8               	btfss	status,2,c
  1660  000398  D004               	goto	l1950
  1661                           
  1662                           ;DriverTeclado.c: 91: {
  1663                           ;DriverTeclado.c: 92: KeyPadKey = 'C';
  1664  00039A  0E43               	movlw	67
  1665  00039C                     L6:
  1666  00039C  6E3E               	movwf	KeyPadScan@KeyPadKey,c
  1667                           
  1668                           ;DriverTeclado.c: 93: Push = 1;
  1669  00039E  0E01               	movlw	1
  1670  0003A0  6E10               	movwf	KeyPadScan@Push,c
  1671  0003A2                     l1950:
  1672                           
  1673                           ;DriverTeclado.c: 94: }
  1674                           ;DriverTeclado.c: 95: }
  1675                           ;DriverTeclado.c: 96: }
  1676                           ;DriverTeclado.c: 97: }
  1677                           ;DriverTeclado.c: 99: Delay(5);
  1678  0003A2  0E00               	movlw	0
  1679  0003A4  6E3D               	movwf	Delay@DelayCount+1,c
  1680  0003A6  0E05               	movlw	5
  1681  0003A8  6E3C               	movwf	Delay@DelayCount,c
  1682  0003AA  ECFC  F002         	call	_Delay	;wreg free
  1683                           
  1684                           ;DriverTeclado.c: 101: do { LATAbits.LATA2 = 1; } while(0);
  1685  0003AE  8489               	bsf	3977,2,c	;volatile
  1686                           
  1687                           ;DriverTeclado.c: 102: do { LATAbits.LATA1 = 0; } while(0);
  1688  0003B0  9289               	bcf	3977,1,c	;volatile
  1689                           
  1690                           ;DriverTeclado.c: 104: Push = PORTAbits.RA4;
  1691  0003B2  0E00               	movlw	0
  1692  0003B4  B880               	btfsc	3968,4,c	;volatile
  1693  0003B6  0E01               	movlw	1
  1694  0003B8  6E10               	movwf	KeyPadScan@Push,c
  1695                           
  1696                           ;DriverTeclado.c: 105: if (Push==0)
  1697  0003BA  5010               	movf	KeyPadScan@Push,w,c
  1698  0003BC  A4D8               	btfss	status,2,c
  1699  0003BE  D002               	goto	l1962
  1700                           
  1701                           ;DriverTeclado.c: 106: {
  1702                           ;DriverTeclado.c: 107: KeyPadKey = '4';
  1703  0003C0  0E34               	movlw	52
  1704  0003C2  D01A               	goto	L9
  1705  0003C4                     l1962:
  1706                           
  1707                           ;DriverTeclado.c: 110: else
  1708                           ;DriverTeclado.c: 111: {
  1709                           ;DriverTeclado.c: 112: Push = PORTAbits.RA5;
  1710  0003C4  0E00               	movlw	0
  1711  0003C6  BA80               	btfsc	3968,5,c	;volatile
  1712  0003C8  0E01               	movlw	1
  1713  0003CA  6E10               	movwf	KeyPadScan@Push,c
  1714                           
  1715                           ;DriverTeclado.c: 113: if (Push==0)
  1716  0003CC  5010               	movf	KeyPadScan@Push,w,c
  1717  0003CE  A4D8               	btfss	status,2,c
  1718  0003D0  D002               	goto	l1968
  1719                           
  1720                           ;DriverTeclado.c: 114: {
  1721                           ;DriverTeclado.c: 115: KeyPadKey = '5';
  1722  0003D2  0E35               	movlw	53
  1723  0003D4  D011               	goto	L9
  1724  0003D6                     l1968:
  1725                           
  1726                           ;DriverTeclado.c: 118: else
  1727                           ;DriverTeclado.c: 119: {
  1728                           ;DriverTeclado.c: 120: Push = PORTAbits.RA6;
  1729  0003D6  0E00               	movlw	0
  1730  0003D8  BC80               	btfsc	3968,6,c	;volatile
  1731  0003DA  0E01               	movlw	1
  1732  0003DC  6E10               	movwf	KeyPadScan@Push,c
  1733                           
  1734                           ;DriverTeclado.c: 121: if (Push==0)
  1735  0003DE  5010               	movf	KeyPadScan@Push,w,c
  1736  0003E0  A4D8               	btfss	status,2,c
  1737  0003E2  D002               	goto	l1974
  1738                           
  1739                           ;DriverTeclado.c: 122: {
  1740                           ;DriverTeclado.c: 123: KeyPadKey = '6';
  1741  0003E4  0E36               	movlw	54
  1742  0003E6  D008               	goto	L9
  1743  0003E8                     l1974:
  1744                           
  1745                           ;DriverTeclado.c: 126: else
  1746                           ;DriverTeclado.c: 127: {
  1747                           ;DriverTeclado.c: 128: Push = PORTAbits.RA7;
  1748  0003E8  0E00               	movlw	0
  1749  0003EA  BE80               	btfsc	3968,7,c	;volatile
  1750  0003EC  0E01               	movlw	1
  1751  0003EE  6E10               	movwf	KeyPadScan@Push,c
  1752                           
  1753                           ;DriverTeclado.c: 129: if (Push==0)
  1754  0003F0  5010               	movf	KeyPadScan@Push,w,c
  1755  0003F2  A4D8               	btfss	status,2,c
  1756  0003F4  D004               	goto	l1980
  1757                           
  1758                           ;DriverTeclado.c: 130: {
  1759                           ;DriverTeclado.c: 131: KeyPadKey = 'B';
  1760  0003F6  0E42               	movlw	66
  1761  0003F8                     L9:
  1762  0003F8  6E3E               	movwf	KeyPadScan@KeyPadKey,c
  1763                           
  1764                           ;DriverTeclado.c: 132: Push = 1;
  1765  0003FA  0E01               	movlw	1
  1766  0003FC  6E10               	movwf	KeyPadScan@Push,c
  1767  0003FE                     l1980:
  1768                           
  1769                           ;DriverTeclado.c: 133: }
  1770                           ;DriverTeclado.c: 134: }
  1771                           ;DriverTeclado.c: 135: }
  1772                           ;DriverTeclado.c: 136: }
  1773                           ;DriverTeclado.c: 138: Delay(5);
  1774  0003FE  0E00               	movlw	0
  1775  000400  6E3D               	movwf	Delay@DelayCount+1,c
  1776  000402  0E05               	movlw	5
  1777  000404  6E3C               	movwf	Delay@DelayCount,c
  1778  000406  ECFC  F002         	call	_Delay	;wreg free
  1779                           
  1780                           ;DriverTeclado.c: 140: do { LATAbits.LATA1 = 1; } while(0);
  1781  00040A  8289               	bsf	3977,1,c	;volatile
  1782                           
  1783                           ;DriverTeclado.c: 141: do { LATAbits.LATA0 = 0; } while(0);
  1784  00040C  9089               	bcf	3977,0,c	;volatile
  1785                           
  1786                           ;DriverTeclado.c: 143: Push = PORTAbits.RA4;
  1787  00040E  0E00               	movlw	0
  1788  000410  B880               	btfsc	3968,4,c	;volatile
  1789  000412  0E01               	movlw	1
  1790  000414  6E10               	movwf	KeyPadScan@Push,c
  1791                           
  1792                           ;DriverTeclado.c: 144: if (Push==0)
  1793  000416  5010               	movf	KeyPadScan@Push,w,c
  1794  000418  A4D8               	btfss	status,2,c
  1795  00041A  D002               	goto	l1992
  1796                           
  1797                           ;DriverTeclado.c: 145: {
  1798                           ;DriverTeclado.c: 146: KeyPadKey = '1';
  1799  00041C  0E31               	movlw	49
  1800  00041E  D01A               	goto	L12
  1801  000420                     l1992:
  1802                           
  1803                           ;DriverTeclado.c: 149: else
  1804                           ;DriverTeclado.c: 150: {
  1805                           ;DriverTeclado.c: 151: Push = PORTAbits.RA5;
  1806  000420  0E00               	movlw	0
  1807  000422  BA80               	btfsc	3968,5,c	;volatile
  1808  000424  0E01               	movlw	1
  1809  000426  6E10               	movwf	KeyPadScan@Push,c
  1810                           
  1811                           ;DriverTeclado.c: 152: if (Push==0)
  1812  000428  5010               	movf	KeyPadScan@Push,w,c
  1813  00042A  A4D8               	btfss	status,2,c
  1814  00042C  D002               	goto	l1998
  1815                           
  1816                           ;DriverTeclado.c: 153: {
  1817                           ;DriverTeclado.c: 154: KeyPadKey = '2';
  1818  00042E  0E32               	movlw	50
  1819  000430  D011               	goto	L12
  1820  000432                     l1998:
  1821                           
  1822                           ;DriverTeclado.c: 157: else
  1823                           ;DriverTeclado.c: 158: {
  1824                           ;DriverTeclado.c: 159: Push = PORTAbits.RA6;
  1825  000432  0E00               	movlw	0
  1826  000434  BC80               	btfsc	3968,6,c	;volatile
  1827  000436  0E01               	movlw	1
  1828  000438  6E10               	movwf	KeyPadScan@Push,c
  1829                           
  1830                           ;DriverTeclado.c: 160: if (Push==0)
  1831  00043A  5010               	movf	KeyPadScan@Push,w,c
  1832  00043C  A4D8               	btfss	status,2,c
  1833  00043E  D002               	goto	l2004
  1834                           
  1835                           ;DriverTeclado.c: 161: {
  1836                           ;DriverTeclado.c: 162: KeyPadKey = '3';
  1837  000440  0E33               	movlw	51
  1838  000442  D008               	goto	L12
  1839  000444                     l2004:
  1840                           
  1841                           ;DriverTeclado.c: 165: else
  1842                           ;DriverTeclado.c: 166: {
  1843                           ;DriverTeclado.c: 167: Push = PORTAbits.RA7;
  1844  000444  0E00               	movlw	0
  1845  000446  BE80               	btfsc	3968,7,c	;volatile
  1846  000448  0E01               	movlw	1
  1847  00044A  6E10               	movwf	KeyPadScan@Push,c
  1848                           
  1849                           ;DriverTeclado.c: 168: if (Push==0)
  1850  00044C  5010               	movf	KeyPadScan@Push,w,c
  1851  00044E  A4D8               	btfss	status,2,c
  1852  000450  D004               	goto	l2010
  1853                           
  1854                           ;DriverTeclado.c: 169: {
  1855                           ;DriverTeclado.c: 170: KeyPadKey = 'A';
  1856  000452  0E41               	movlw	65
  1857  000454                     L12:
  1858  000454  6E3E               	movwf	KeyPadScan@KeyPadKey,c
  1859                           
  1860                           ;DriverTeclado.c: 171: Push = 1;
  1861  000456  0E01               	movlw	1
  1862  000458  6E10               	movwf	KeyPadScan@Push,c
  1863  00045A                     l2010:
  1864                           
  1865                           ;DriverTeclado.c: 172: }
  1866                           ;DriverTeclado.c: 173: }
  1867                           ;DriverTeclado.c: 174: }
  1868                           ;DriverTeclado.c: 175: }
  1869                           ;DriverTeclado.c: 177: Delay(5);
  1870  00045A  0E00               	movlw	0
  1871  00045C  6E3D               	movwf	Delay@DelayCount+1,c
  1872  00045E  0E05               	movlw	5
  1873  000460  6E3C               	movwf	Delay@DelayCount,c
  1874  000462  ECFC  F002         	call	_Delay	;wreg free
  1875                           
  1876                           ;DriverTeclado.c: 179: do { LATAbits.LATA0 = 0; } while(0);
  1877  000466  9089               	bcf	3977,0,c	;volatile
  1878                           
  1879                           ;DriverTeclado.c: 180: do { LATAbits.LATA1 = 0; } while(0);
  1880  000468  9289               	bcf	3977,1,c	;volatile
  1881                           
  1882                           ;DriverTeclado.c: 181: do { LATAbits.LATA2 = 0; } while(0);
  1883  00046A  9489               	bcf	3977,2,c	;volatile
  1884                           
  1885                           ;DriverTeclado.c: 182: do { LATAbits.LATA3 = 0; } while(0);
  1886  00046C  9689               	bcf	3977,3,c	;volatile
  1887                           
  1888                           ;DriverTeclado.c: 184: return(KeyPadKey);
  1889  00046E  503E               	movf	KeyPadScan@KeyPadKey,w,c
  1890  000470  0012               	return	
  1891  000472                     __end_of_KeyPadScan:
  1892                           	opt stack 0
  1893                           tblptru	equ	0xFF8
  1894                           tblptrh	equ	0xFF7
  1895                           tblptrl	equ	0xFF6
  1896                           tablat	equ	0xFF5
  1897                           intcon	equ	0xFF2
  1898                           intcon2	equ	0xFF1
  1899                           postinc0	equ	0xFEE
  1900                           wreg	equ	0xFE8
  1901                           status	equ	0xFD8
  1902                           
  1903 ;; *************** function _Delay *****************
  1904 ;; Defined at:
  1905 ;;		line 7 in file "devices.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;  DelayCount      2   19[COMRAM] unsigned int 
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;		None
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  1    wreg      void 
  1912 ;; Registers used:
  1913 ;;		wreg, status,2, status,0
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1919 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1922 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1923 ;;Total ram usage:        2 bytes
  1924 ;; Hardware stack levels used:    1
  1925 ;; Hardware stack levels required when called:    3
  1926 ;; This function calls:
  1927 ;;		Nothing
  1928 ;; This function is called by:
  1929 ;;		_main
  1930 ;;		_KeyPadScan
  1931 ;;		_KeyPadAcquire
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           	psect	text16
  1936  0005F8                     __ptext16:
  1937                           	opt stack 0
  1938  0005F8                     _Delay:
  1939                           	opt stack 0
  1940                           
  1941                           ;incstack = 0
  1942  0005F8  D00A               	goto	l1870
  1943  0005FA                     l1866:
  1944                           
  1945                           ;devices.c: 11: {
  1946                           ;devices.c: 12: if (TMR4_Ticked==1)
  1947  0005FA  0408               	decf	_TMR4_Ticked,w,c
  1948  0005FC  1009               	iorwf	_TMR4_Ticked+1,w,c
  1949  0005FE  A4D8               	btfss	status,2,c
  1950  000600  D00A               	goto	l1872
  1951                           
  1952                           ;devices.c: 13: {
  1953                           ;devices.c: 15: DelayCount=DelayCount-1;
  1954  000602  0EFF               	movlw	255
  1955  000604  243C               	addwf	Delay@DelayCount,w,c
  1956  000606  6E3C               	movwf	Delay@DelayCount,c
  1957  000608  0EFF               	movlw	255
  1958  00060A  203D               	addwfc	Delay@DelayCount+1,w,c
  1959  00060C  6E3D               	movwf	Delay@DelayCount+1,c
  1960  00060E                     l1870:
  1961                           
  1962                           ;devices.c: 16: TMR4_Ticked=0;
  1963  00060E  0E00               	movlw	0
  1964  000610  6E09               	movwf	_TMR4_Ticked+1,c
  1965  000612  0E00               	movlw	0
  1966  000614  6E08               	movwf	_TMR4_Ticked,c
  1967  000616                     l1872:
  1968  000616  503C               	movf	Delay@DelayCount,w,c
  1969  000618  103D               	iorwf	Delay@DelayCount+1,w,c
  1970  00061A  B4D8               	btfsc	status,2,c
  1971  00061C  0012               	return	
  1972  00061E  D7ED               	goto	l1866
  1973  000620                     __end_of_Delay:
  1974                           	opt stack 0
  1975                           tblptru	equ	0xFF8
  1976                           tblptrh	equ	0xFF7
  1977                           tblptrl	equ	0xFF6
  1978                           tablat	equ	0xFF5
  1979                           intcon	equ	0xFF2
  1980                           intcon2	equ	0xFF1
  1981                           postinc0	equ	0xFEE
  1982                           wreg	equ	0xFE8
  1983                           status	equ	0xFD8
  1984                           
  1985 ;; *************** function _EUSART1_Write *****************
  1986 ;; Defined at:
  1987 ;;		line 96 in file "mcc_generated_files/eusart1.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;  txData          1    wreg     unsigned char 
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;  txData          1   19[COMRAM] unsigned char 
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1    wreg      void 
  1994 ;; Registers used:
  1995 ;;		wreg
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2002 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2004 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2005 ;;Total ram usage:        1 bytes
  2006 ;; Hardware stack levels used:    1
  2007 ;; Hardware stack levels required when called:    3
  2008 ;; This function calls:
  2009 ;;		Nothing
  2010 ;; This function is called by:
  2011 ;;		_main
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           	psect	text17
  2016  000702                     __ptext17:
  2017                           	opt stack 0
  2018  000702                     _EUSART1_Write:
  2019                           	opt stack 27
  2020                           
  2021                           ;incstack = 0
  2022                           ;EUSART1_Write@txData stored from wreg
  2023  000702  6E3C               	movwf	EUSART1_Write@txData,c
  2024  000704                     l452:
  2025  000704  A89E               	btfss	3998,4,c	;volatile
  2026  000706  D7FE               	goto	l452
  2027                           
  2028                           ;eusart1.c: 100: }
  2029                           ;eusart1.c: 102: TXREG1 = txData;
  2030  000708  C03C  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  2031  00070C  0012               	return		;funcret
  2032  00070E                     __end_of_EUSART1_Write:
  2033                           	opt stack 0
  2034                           tblptru	equ	0xFF8
  2035                           tblptrh	equ	0xFF7
  2036                           tblptrl	equ	0xFF6
  2037                           tablat	equ	0xFF5
  2038                           intcon	equ	0xFF2
  2039                           intcon2	equ	0xFF1
  2040                           postinc0	equ	0xFEE
  2041                           wreg	equ	0xFE8
  2042                           status	equ	0xFD8
  2043                           
  2044 ;; *************** function _INTERRUPT_InterruptManager *****************
  2045 ;; Defined at:
  2046 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;		None
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;		None
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  1    wreg      void 
  2053 ;; Registers used:
  2054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2062 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2063 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2064 ;;Total ram usage:       14 bytes
  2065 ;; Hardware stack levels used:    1
  2066 ;; Hardware stack levels required when called:    2
  2067 ;; This function calls:
  2068 ;;		_I2C1_BusCollisionISR
  2069 ;;		_I2C1_ISR
  2070 ;;		_TMR2_ISR
  2071 ;;		_TMR4_ISR
  2072 ;; This function is called by:
  2073 ;;		Interrupt level 2
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077                           	psect	intcode
  2078  000008                     __pintcode:
  2079                           	opt stack 0
  2080  000008                     _INTERRUPT_InterruptManager:
  2081                           	opt stack 25
  2082                           
  2083                           ;incstack = 0
  2084  000008  8248               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2085  00000A  CFFA F02E          	movff	pclath,??_INTERRUPT_InterruptManager
  2086  00000E  CFFB F02F          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2087  000012  CFE9 F030          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  2088  000016  CFEA F031          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  2089  00001A  CFE1 F032          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  2090  00001E  CFE2 F033          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  2091  000022  CFD9 F034          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  2092  000026  CFDA F035          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  2093  00002A  CFF3 F036          	movff	prodl,??_INTERRUPT_InterruptManager+8
  2094  00002E  CFF4 F037          	movff	prodh,??_INTERRUPT_InterruptManager+9
  2095  000032  CFF6 F038          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  2096  000036  CFF7 F039          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  2097  00003A  CFF8 F03A          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  2098  00003E  CFF5 F03B          	movff	tablat,??_INTERRUPT_InterruptManager+13
  2099                           
  2100                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE2bits.BCL1IE == 1 && PIR2bits.BC
      +                          L1IF == 1)
  2101  000042  BCF2               	btfsc	intcon,6,c	;volatile
  2102  000044  A6A0               	btfss	4000,3,c	;volatile
  2103  000046  D003               	goto	i2l1812
  2104  000048  B6A1               	btfsc	4001,3,c	;volatile
  2105                           
  2106                           ;interrupt_manager.c: 61: {
  2107                           ;interrupt_manager.c: 62: I2C1_BusCollisionISR();
  2108  00004A  ECA0  F003         	call	_I2C1_BusCollisionISR	;wreg free
  2109  00004E                     i2l1812:
  2110                           
  2111                           ;interrupt_manager.c: 63: }
  2112                           ;interrupt_manager.c: 64: if(INTCONbits.PEIE == 1 && PIE1bits.SSP1IE == 1 && PIR1bits.SS
      +                          P1IF == 1)
  2113  00004E  BCF2               	btfsc	intcon,6,c	;volatile
  2114  000050  A69D               	btfss	3997,3,c	;volatile
  2115  000052  D003               	goto	i2l1820
  2116  000054  B69E               	btfsc	3998,3,c	;volatile
  2117                           
  2118                           ;interrupt_manager.c: 65: {
  2119                           ;interrupt_manager.c: 66: I2C1_ISR();
  2120  000056  EC59  F000         	call	_I2C1_ISR	;wreg free
  2121  00005A                     i2l1820:
  2122                           
  2123                           ;interrupt_manager.c: 67: }
  2124                           ;interrupt_manager.c: 68: if(INTCONbits.PEIE == 1 && PIE5bits.TMR4IE == 1 && PIR5bits.TM
      +                          R4IF == 1)
  2125  00005A  BCF2               	btfsc	intcon,6,c	;volatile
  2126  00005C  A07D               	btfss	3965,0,c	;volatile
  2127  00005E  D003               	goto	i2l1828
  2128  000060  B07E               	btfsc	3966,0,c	;volatile
  2129                           
  2130                           ;interrupt_manager.c: 69: {
  2131                           ;interrupt_manager.c: 70: TMR4_ISR();
  2132  000062  EC32  F003         	call	_TMR4_ISR	;wreg free
  2133  000066                     i2l1828:
  2134                           
  2135                           ;interrupt_manager.c: 71: }
  2136                           ;interrupt_manager.c: 72: if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bits.TM
      +                          R2IF == 1)
  2137  000066  BCF2               	btfsc	intcon,6,c	;volatile
  2138  000068  A29D               	btfss	3997,1,c	;volatile
  2139  00006A  D003               	goto	i2l407
  2140  00006C  B29E               	btfsc	3998,1,c	;volatile
  2141                           
  2142                           ;interrupt_manager.c: 73: {
  2143                           ;interrupt_manager.c: 74: TMR2_ISR();
  2144  00006E  EC43  F003         	call	_TMR2_ISR	;wreg free
  2145  000072                     i2l407:
  2146  000072  C03B  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  2147  000076  C03A  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  2148  00007A  C039  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  2149  00007E  C038  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  2150  000082  C037  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  2151  000086  C036  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  2152  00008A  C035  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  2153  00008E  C034  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  2154  000092  C033  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  2155  000096  C032  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  2156  00009A  C031  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  2157  00009E  C030  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  2158  0000A2  C02F  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2159  0000A6  C02E  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2160  0000AA  9248               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2161  0000AC  0011               	retfie		f
  2162  0000AE                     __end_of_INTERRUPT_InterruptManager:
  2163                           	opt stack 0
  2164                           pclatu	equ	0xFFB
  2165                           pclath	equ	0xFFA
  2166                           tblptru	equ	0xFF8
  2167                           tblptrh	equ	0xFF7
  2168                           tblptrl	equ	0xFF6
  2169                           tablat	equ	0xFF5
  2170                           prodh	equ	0xFF4
  2171                           prodl	equ	0xFF3
  2172                           intcon	equ	0xFF2
  2173                           intcon2	equ	0xFF1
  2174                           postinc0	equ	0xFEE
  2175                           fsr0h	equ	0xFEA
  2176                           fsr0l	equ	0xFE9
  2177                           wreg	equ	0xFE8
  2178                           fsr1h	equ	0xFE2
  2179                           fsr1l	equ	0xFE1
  2180                           fsr2h	equ	0xFDA
  2181                           fsr2l	equ	0xFD9
  2182                           status	equ	0xFD8
  2183                           
  2184 ;; *************** function _TMR4_ISR *****************
  2185 ;; Defined at:
  2186 ;;		line 121 in file "mcc_generated_files/tmr4.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;		None
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;		None
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  1    wreg      void 
  2193 ;; Registers used:
  2194 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2204 ;;Total ram usage:        0 bytes
  2205 ;; Hardware stack levels used:    1
  2206 ;; Hardware stack levels required when called:    1
  2207 ;; This function calls:
  2208 ;;		Absolute function
  2209 ;;		_TMR4_DefaultInterruptHandler
  2210 ;;		_TMR4_Interrupt
  2211 ;; This function is called by:
  2212 ;;		_INTERRUPT_InterruptManager
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           	psect	text19
  2217  000664                     __ptext19:
  2218                           	opt stack 0
  2219  000664                     _TMR4_ISR:
  2220                           	opt stack 25
  2221                           
  2222                           ;tmr4.c: 125: PIR5bits.TMR4IF = 0;
  2223                           
  2224                           ;incstack = 0
  2225  000664  907E               	bcf	3966,0,c	;volatile
  2226                           
  2227                           ;tmr4.c: 127: if(TMR4_InterruptHandler)
  2228  000666  5042               	movf	_TMR4_InterruptHandler,w,c
  2229  000668  1043               	iorwf	_TMR4_InterruptHandler+1,w,c
  2230  00066A  B4D8               	btfsc	status,2,c
  2231  00066C  0012               	return	
  2232                           
  2233                           ;tmr4.c: 128: {
  2234                           ;tmr4.c: 129: TMR4_InterruptHandler();
  2235  00066E  D801               	call	i2u38_48
  2236  000670  0012               	return	
  2237  000672                     i2u38_48:
  2238  000672  0005               	push	
  2239  000674  6EFA               	movwf	pclath,c
  2240  000676  5042               	movf	_TMR4_InterruptHandler,w,c
  2241  000678  6EFD               	movwf	tosl,c
  2242  00067A  5043               	movf	_TMR4_InterruptHandler+1,w,c
  2243  00067C  6EFE               	movwf	tosh,c
  2244  00067E  50F8               	movf	tblptru,w,c
  2245  000680  6EFF               	movwf	tosu,c
  2246  000682  50FA               	movf	pclath,w,c
  2247  000684  0012               	return		;indir
  2248  000686                     __end_of_TMR4_ISR:
  2249                           	opt stack 0
  2250                           tosu	equ	0xFFF
  2251                           tosh	equ	0xFFE
  2252                           tosl	equ	0xFFD
  2253                           pclatu	equ	0xFFB
  2254                           pclath	equ	0xFFA
  2255                           tblptru	equ	0xFF8
  2256                           tblptrh	equ	0xFF7
  2257                           tblptrl	equ	0xFF6
  2258                           tablat	equ	0xFF5
  2259                           prodh	equ	0xFF4
  2260                           prodl	equ	0xFF3
  2261                           intcon	equ	0xFF2
  2262                           intcon2	equ	0xFF1
  2263                           postinc0	equ	0xFEE
  2264                           fsr0h	equ	0xFEA
  2265                           fsr0l	equ	0xFE9
  2266                           wreg	equ	0xFE8
  2267                           fsr1h	equ	0xFE2
  2268                           fsr1l	equ	0xFE1
  2269                           fsr2h	equ	0xFDA
  2270                           fsr2l	equ	0xFD9
  2271                           status	equ	0xFD8
  2272                           
  2273 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  2274 ;; Defined at:
  2275 ;;		line 138 in file "mcc_generated_files/tmr4.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;		None
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;		None
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  1    wreg      void 
  2282 ;; Registers used:
  2283 ;;		None
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2293 ;;Total ram usage:        0 bytes
  2294 ;; Hardware stack levels used:    1
  2295 ;; This function calls:
  2296 ;;		Nothing
  2297 ;; This function is called by:
  2298 ;;		_TMR4_Initialize
  2299 ;;		_TMR4_ISR
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	text20
  2304  00073C                     __ptext20:
  2305                           	opt stack 0
  2306  00073C                     _TMR4_DefaultInterruptHandler:
  2307                           	opt stack 25
  2308                           
  2309                           ;incstack = 0
  2310  00073C  0012               	return		;funcret
  2311  00073E                     __end_of_TMR4_DefaultInterruptHandler:
  2312                           	opt stack 0
  2313                           tosu	equ	0xFFF
  2314                           tosh	equ	0xFFE
  2315                           tosl	equ	0xFFD
  2316                           pclatu	equ	0xFFB
  2317                           pclath	equ	0xFFA
  2318                           tblptru	equ	0xFF8
  2319                           tblptrh	equ	0xFF7
  2320                           tblptrl	equ	0xFF6
  2321                           tablat	equ	0xFF5
  2322                           prodh	equ	0xFF4
  2323                           prodl	equ	0xFF3
  2324                           intcon	equ	0xFF2
  2325                           intcon2	equ	0xFF1
  2326                           postinc0	equ	0xFEE
  2327                           fsr0h	equ	0xFEA
  2328                           fsr0l	equ	0xFE9
  2329                           wreg	equ	0xFE8
  2330                           fsr1h	equ	0xFE2
  2331                           fsr1l	equ	0xFE1
  2332                           fsr2h	equ	0xFDA
  2333                           fsr2l	equ	0xFD9
  2334                           status	equ	0xFD8
  2335                           
  2336 ;; *************** function _TMR4_Interrupt *****************
  2337 ;; Defined at:
  2338 ;;		line 22 in file "devices.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;		None
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;		None
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  1    wreg      void 
  2345 ;; Registers used:
  2346 ;;		wreg, status,2
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2356 ;;Total ram usage:        0 bytes
  2357 ;; Hardware stack levels used:    1
  2358 ;; This function calls:
  2359 ;;		Nothing
  2360 ;; This function is called by:
  2361 ;;		_main
  2362 ;;		_TMR4_ISR
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           	psect	text21
  2367  000722                     __ptext21:
  2368                           	opt stack 0
  2369  000722                     _TMR4_Interrupt:
  2370                           	opt stack 25
  2371                           
  2372                           ;devices.c: 24: TMR4_Ticked = 1;
  2373                           
  2374                           ;incstack = 0
  2375  000722  0E00               	movlw	0
  2376  000724  6E09               	movwf	_TMR4_Ticked+1,c
  2377  000726  0E01               	movlw	1
  2378  000728  6E08               	movwf	_TMR4_Ticked,c
  2379  00072A  0012               	return		;funcret
  2380  00072C                     __end_of_TMR4_Interrupt:
  2381                           	opt stack 0
  2382                           tosu	equ	0xFFF
  2383                           tosh	equ	0xFFE
  2384                           tosl	equ	0xFFD
  2385                           pclatu	equ	0xFFB
  2386                           pclath	equ	0xFFA
  2387                           tblptru	equ	0xFF8
  2388                           tblptrh	equ	0xFF7
  2389                           tblptrl	equ	0xFF6
  2390                           tablat	equ	0xFF5
  2391                           prodh	equ	0xFF4
  2392                           prodl	equ	0xFF3
  2393                           intcon	equ	0xFF2
  2394                           intcon2	equ	0xFF1
  2395                           postinc0	equ	0xFEE
  2396                           fsr0h	equ	0xFEA
  2397                           fsr0l	equ	0xFE9
  2398                           wreg	equ	0xFE8
  2399                           fsr1h	equ	0xFE2
  2400                           fsr1l	equ	0xFE1
  2401                           fsr2h	equ	0xFDA
  2402                           fsr2l	equ	0xFD9
  2403                           status	equ	0xFD8
  2404                           
  2405 ;; *************** function _TMR2_ISR *****************
  2406 ;; Defined at:
  2407 ;;		line 121 in file "mcc_generated_files/tmr2.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;		None
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;		None
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  1    wreg      void 
  2414 ;; Registers used:
  2415 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2425 ;;Total ram usage:        0 bytes
  2426 ;; Hardware stack levels used:    1
  2427 ;; Hardware stack levels required when called:    1
  2428 ;; This function calls:
  2429 ;;		Absolute function
  2430 ;;		_TMR2_DefaultInterruptHandler
  2431 ;; This function is called by:
  2432 ;;		_INTERRUPT_InterruptManager
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           	psect	text22
  2437  000686                     __ptext22:
  2438                           	opt stack 0
  2439  000686                     _TMR2_ISR:
  2440                           	opt stack 25
  2441                           
  2442                           ;tmr2.c: 125: PIR1bits.TMR2IF = 0;
  2443                           
  2444                           ;incstack = 0
  2445  000686  929E               	bcf	3998,1,c	;volatile
  2446                           
  2447                           ;tmr2.c: 127: if(TMR2_InterruptHandler)
  2448  000688  5044               	movf	_TMR2_InterruptHandler,w,c
  2449  00068A  1045               	iorwf	_TMR2_InterruptHandler+1,w,c
  2450  00068C  B4D8               	btfsc	status,2,c
  2451  00068E  0012               	return	
  2452                           
  2453                           ;tmr2.c: 128: {
  2454                           ;tmr2.c: 129: TMR2_InterruptHandler();
  2455  000690  D801               	call	i2u36_48
  2456  000692  0012               	return	
  2457  000694                     i2u36_48:
  2458  000694  0005               	push	
  2459  000696  6EFA               	movwf	pclath,c
  2460  000698  5044               	movf	_TMR2_InterruptHandler,w,c
  2461  00069A  6EFD               	movwf	tosl,c
  2462  00069C  5045               	movf	_TMR2_InterruptHandler+1,w,c
  2463  00069E  6EFE               	movwf	tosh,c
  2464  0006A0  50F8               	movf	tblptru,w,c
  2465  0006A2  6EFF               	movwf	tosu,c
  2466  0006A4  50FA               	movf	pclath,w,c
  2467  0006A6  0012               	return		;indir
  2468  0006A8                     __end_of_TMR2_ISR:
  2469                           	opt stack 0
  2470                           tosu	equ	0xFFF
  2471                           tosh	equ	0xFFE
  2472                           tosl	equ	0xFFD
  2473                           pclatu	equ	0xFFB
  2474                           pclath	equ	0xFFA
  2475                           tblptru	equ	0xFF8
  2476                           tblptrh	equ	0xFF7
  2477                           tblptrl	equ	0xFF6
  2478                           tablat	equ	0xFF5
  2479                           prodh	equ	0xFF4
  2480                           prodl	equ	0xFF3
  2481                           intcon	equ	0xFF2
  2482                           intcon2	equ	0xFF1
  2483                           postinc0	equ	0xFEE
  2484                           fsr0h	equ	0xFEA
  2485                           fsr0l	equ	0xFE9
  2486                           wreg	equ	0xFE8
  2487                           fsr1h	equ	0xFE2
  2488                           fsr1l	equ	0xFE1
  2489                           fsr2h	equ	0xFDA
  2490                           fsr2l	equ	0xFD9
  2491                           status	equ	0xFD8
  2492                           
  2493 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  2494 ;; Defined at:
  2495 ;;		line 138 in file "mcc_generated_files/tmr2.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;		None
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;		None
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  1    wreg      void 
  2502 ;; Registers used:
  2503 ;;		None
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;Total ram usage:        0 bytes
  2514 ;; Hardware stack levels used:    1
  2515 ;; This function calls:
  2516 ;;		Nothing
  2517 ;; This function is called by:
  2518 ;;		_TMR2_Initialize
  2519 ;;		_TMR2_ISR
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           	psect	text23
  2524  00073E                     __ptext23:
  2525                           	opt stack 0
  2526  00073E                     _TMR2_DefaultInterruptHandler:
  2527                           	opt stack 25
  2528                           
  2529                           ;incstack = 0
  2530  00073E  0012               	return		;funcret
  2531  000740                     __end_of_TMR2_DefaultInterruptHandler:
  2532                           	opt stack 0
  2533                           tosu	equ	0xFFF
  2534                           tosh	equ	0xFFE
  2535                           tosl	equ	0xFFD
  2536                           pclatu	equ	0xFFB
  2537                           pclath	equ	0xFFA
  2538                           tblptru	equ	0xFF8
  2539                           tblptrh	equ	0xFF7
  2540                           tblptrl	equ	0xFF6
  2541                           tablat	equ	0xFF5
  2542                           prodh	equ	0xFF4
  2543                           prodl	equ	0xFF3
  2544                           intcon	equ	0xFF2
  2545                           intcon2	equ	0xFF1
  2546                           postinc0	equ	0xFEE
  2547                           fsr0h	equ	0xFEA
  2548                           fsr0l	equ	0xFE9
  2549                           wreg	equ	0xFE8
  2550                           fsr1h	equ	0xFE2
  2551                           fsr1l	equ	0xFE1
  2552                           fsr2h	equ	0xFDA
  2553                           fsr2l	equ	0xFD9
  2554                           status	equ	0xFD8
  2555                           
  2556 ;; *************** function _I2C1_ISR *****************
  2557 ;; Defined at:
  2558 ;;		line 233 in file "mcc_generated_files/i2c1.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;		None
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;		None
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  1    wreg      void 
  2565 ;; Registers used:
  2566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2574 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2575 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2576 ;;Total ram usage:        2 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; Hardware stack levels required when called:    1
  2579 ;; This function calls:
  2580 ;;		_I2C1_FunctionComplete
  2581 ;;		_I2C1_Stop
  2582 ;; This function is called by:
  2583 ;;		_INTERRUPT_InterruptManager
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           	psect	text24
  2588  0000B2                     __ptext24:
  2589                           	opt stack 0
  2590  0000B2                     _I2C1_ISR:
  2591                           	opt stack 25
  2592                           
  2593                           ;i2c1.c: 236: static uint8_t *pi2c_buf_ptr;
  2594                           ;i2c1.c: 237: static uint16_t i2c_address = 0;
  2595                           ;i2c1.c: 238: static uint8_t i2c_bytes_left = 0;
  2596                           ;i2c1.c: 239: static uint8_t i2c_10bit_address_restart = 0;
  2597                           ;i2c1.c: 241: PIR1bits.SSP1IF = 0;
  2598                           
  2599                           ;incstack = 0
  2600  0000B2  969E               	bcf	3998,3,c	;volatile
  2601                           
  2602                           ;i2c1.c: 245: if(SSP1CON1bits.WCOL)
  2603  0000B4  AEC6               	btfss	4038,7,c	;volatile
  2604  0000B6  D0F9               	goto	i2l1560
  2605                           
  2606                           ;i2c1.c: 246: {
  2607                           ;i2c1.c: 248: SSP1CON1bits.WCOL = 0;
  2608  0000B8  9EC6               	bcf	4038,7,c	;volatile
  2609                           
  2610                           ;i2c1.c: 249: i2c1_state = S_MASTER_IDLE;
  2611  0000BA  0E00               	movlw	0
  2612  0000BC  6E14               	movwf	_i2c1_state,c
  2613                           
  2614                           ;i2c1.c: 250: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
  2615  0000BE  EE20 F003          	lfsr	2,3
  2616  0000C2  500C               	movf	_p_i2c1_current,w,c
  2617  0000C4  26D9               	addwf	fsr2l,f,c
  2618  0000C6  500D               	movf	_p_i2c1_current+1,w,c
  2619  0000C8  22DA               	addwfc	fsr2h,f,c
  2620  0000CA  CFDE F02C          	movff	postinc2,??_I2C1_ISR
  2621  0000CE  CFDD F02D          	movff	postdec2,??_I2C1_ISR+1
  2622  0000D2  C02C  FFD9         	movff	??_I2C1_ISR,fsr2l
  2623  0000D6  C02D  FFDA         	movff	??_I2C1_ISR+1,fsr2h
  2624  0000DA  0E01               	movlw	1
  2625  0000DC  6EDF               	movwf	indf2,c
  2626                           
  2627                           ;i2c1.c: 253: p_i2c1_current = (0);
  2628  0000DE  0E00               	movlw	0
  2629  0000E0  6E0C               	movwf	_p_i2c1_current,c
  2630  0000E2  0E00               	movlw	0
  2631  0000E4  6E0D               	movwf	_p_i2c1_current+1,c
  2632                           
  2633                           ;i2c1.c: 255: return;
  2634  0000E6  0012               	return	
  2635  0000E8                     i2l128:
  2636                           
  2637                           ;i2c1.c: 263: if(i2c1_object.trStatus.s.empty != 1)
  2638  0000E8  B205               	btfsc	_i2c1_object+4,1,c
  2639  0000EA  0012               	return	
  2640                           
  2641                           ;i2c1.c: 264: {
  2642                           ;i2c1.c: 266: p_i2c1_current = i2c1_object.pTrHead;
  2643  0000EC  C003  F00C         	movff	_i2c1_object+2,_p_i2c1_current
  2644  0000F0  C004  F00D         	movff	_i2c1_object+3,_p_i2c1_current+1
  2645                           
  2646                           ;i2c1.c: 267: i2c1_trb_count = i2c1_object.pTrHead->count;
  2647  0000F4  C003  FFD9         	movff	_i2c1_object+2,fsr2l
  2648  0000F8  C004  FFDA         	movff	_i2c1_object+3,fsr2h
  2649  0000FC  50DF               	movf	indf2,w,c
  2650  0000FE  6E13               	movwf	_i2c1_trb_count,c
  2651                           
  2652                           ;i2c1.c: 268: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
  2653  000100  EE20 F001          	lfsr	2,1
  2654  000104  5003               	movf	_i2c1_object+2,w,c
  2655  000106  26D9               	addwf	fsr2l,f,c
  2656  000108  5004               	movf	_i2c1_object+3,w,c
  2657  00010A  22DA               	addwfc	fsr2h,f,c
  2658  00010C  CFDE F00E          	movff	postinc2,_p_i2c1_trb_current
  2659  000110  CFDD F00F          	movff	postdec2,_p_i2c1_trb_current+1
  2660                           
  2661                           ;i2c1.c: 270: i2c1_object.pTrHead++;
  2662  000114  0E06               	movlw	6
  2663  000116  2603               	addwf	_i2c1_object+2,f,c
  2664  000118  0E00               	movlw	0
  2665  00011A  2204               	addwfc	_i2c1_object+3,f,c
  2666                           
  2667                           ;i2c1.c: 273: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
  2668  00011C  0E27               	movlw	low (_i2c1_tr_queue+6)
  2669  00011E  1803               	xorwf	_i2c1_object+2,w,c
  2670  000120  E108               	bnz	i2l1452
  2671  000122  0E00               	movlw	high (_i2c1_tr_queue+6)
  2672  000124  1804               	xorwf	_i2c1_object+3,w,c
  2673  000126  A4D8               	btfss	status,2,c
  2674  000128  D004               	goto	i2l1452
  2675                           
  2676                           ;i2c1.c: 274: {
  2677                           ;i2c1.c: 276: i2c1_object.pTrHead = i2c1_tr_queue;
  2678  00012A  0E21               	movlw	low _i2c1_tr_queue
  2679  00012C  6E03               	movwf	_i2c1_object+2,c
  2680  00012E  0E00               	movlw	high _i2c1_tr_queue
  2681  000130  6E04               	movwf	_i2c1_object+3,c
  2682  000132                     i2l1452:
  2683                           
  2684                           ;i2c1.c: 277: }
  2685                           ;i2c1.c: 281: i2c1_object.trStatus.s.full = 0;
  2686  000132  9005               	bcf	_i2c1_object+4,0,c
  2687                           
  2688                           ;i2c1.c: 284: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
  2689  000134  5001               	movf	_i2c1_object,w,c
  2690  000136  1803               	xorwf	_i2c1_object+2,w,c
  2691  000138  E104               	bnz	i2l131
  2692  00013A  5002               	movf	_i2c1_object+1,w,c
  2693  00013C  1804               	xorwf	_i2c1_object+3,w,c
  2694  00013E  B4D8               	btfsc	status,2,c
  2695                           
  2696                           ;i2c1.c: 285: {
  2697                           ;i2c1.c: 287: i2c1_object.trStatus.s.empty = 1;
  2698  000140  8205               	bsf	_i2c1_object+4,1,c
  2699  000142                     i2l131:
  2700                           
  2701                           ;i2c1.c: 288: }
  2702                           ;i2c1.c: 291: SSP1CON2bits.SEN = 1;
  2703  000142  80C5               	bsf	4037,0,c	;volatile
  2704                           
  2705                           ;i2c1.c: 294: i2c1_state = S_MASTER_SEND_ADDR;
  2706  000144  0E02               	movlw	2
  2707  000146  6E14               	movwf	_i2c1_state,c
  2708                           
  2709                           ;i2c1.c: 295: }
  2710                           ;i2c1.c: 297: break;
  2711  000148  0012               	return	
  2712  00014A                     i2l133:
  2713                           
  2714                           ;i2c1.c: 304: SSP1CON2bits.RSEN = 1;
  2715  00014A  82C5               	bsf	4037,1,c	;volatile
  2716                           
  2717                           ;i2c1.c: 307: i2c1_state = S_MASTER_SEND_ADDR;
  2718  00014C  0E02               	movlw	2
  2719  00014E  6E14               	movwf	_i2c1_state,c
  2720                           
  2721                           ;i2c1.c: 309: break;
  2722  000150  0012               	return	
  2723  000152                     i2l134:
  2724                           
  2725                           ;i2c1.c: 313: if(SSP1CON2bits.ACKSTAT)
  2726  000152  ACC5               	btfss	4037,6,c	;volatile
  2727  000154  D005               	goto	i2l1464
  2728                           
  2729                           ;i2c1.c: 314: {
  2730                           ;i2c1.c: 315: i2c1_object.i2cErrors++;
  2731  000156  2A07               	incf	_i2c1_object+6,f,c
  2732                           
  2733                           ;i2c1.c: 316: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  2734  000158  0E04               	movlw	4
  2735  00015A  EC60  F002         	call	_I2C1_Stop
  2736                           
  2737                           ;i2c1.c: 317: }
  2738  00015E  0012               	return	
  2739  000160                     i2l1464:
  2740                           
  2741                           ;i2c1.c: 318: else
  2742                           ;i2c1.c: 319: {
  2743                           ;i2c1.c: 321: SSP1BUF = (i2c_address >> 1) & 0x00FF;
  2744  000160  90D8               	bcf	status,0,c
  2745  000162  3028               	rrcf	I2C1_ISR@i2c_address+1,w,c
  2746  000164  6E2D               	movwf	(??_I2C1_ISR+1)& (0+255),c
  2747  000166  3027               	rrcf	I2C1_ISR@i2c_address,w,c
  2748  000168  6E2C               	movwf	??_I2C1_ISR& (0+255),c
  2749  00016A  502C               	movf	??_I2C1_ISR,w,c
  2750  00016C  6EC9               	movwf	4041,c	;volatile
  2751                           
  2752                           ;i2c1.c: 324: if(i2c_address & 0x01)
  2753  00016E  A027               	btfss	I2C1_ISR@i2c_address,0,c
  2754  000170  D003               	goto	i2l1470
  2755                           
  2756                           ;i2c1.c: 325: {
  2757                           ;i2c1.c: 328: i2c1_state = S_MASTER_10BIT_RESTART;
  2758  000172  0E0B               	movlw	11
  2759  000174  6E14               	movwf	_i2c1_state,c
  2760                           
  2761                           ;i2c1.c: 329: }
  2762  000176  0012               	return	
  2763  000178                     i2l1470:
  2764                           
  2765                           ;i2c1.c: 330: else
  2766                           ;i2c1.c: 331: {
  2767                           ;i2c1.c: 333: i2c1_state = S_MASTER_SEND_DATA;
  2768  000178  0E03               	movlw	3
  2769  00017A  6E14               	movwf	_i2c1_state,c
  2770                           
  2771                           ;i2c1.c: 334: }
  2772                           ;i2c1.c: 335: }
  2773                           ;i2c1.c: 337: break;
  2774  00017C  0012               	return	
  2775  00017E                     i2l139:
  2776                           
  2777                           ;i2c1.c: 341: if(SSP1CON2bits.ACKSTAT)
  2778  00017E  ACC5               	btfss	4037,6,c	;volatile
  2779  000180  D005               	goto	i2l140
  2780                           
  2781                           ;i2c1.c: 342: {
  2782                           ;i2c1.c: 343: i2c1_object.i2cErrors++;
  2783  000182  2A07               	incf	_i2c1_object+6,f,c
  2784                           
  2785                           ;i2c1.c: 344: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  2786  000184  0E04               	movlw	4
  2787  000186  EC60  F002         	call	_I2C1_Stop
  2788                           
  2789                           ;i2c1.c: 345: }
  2790  00018A  0012               	return	
  2791  00018C                     i2l140:
  2792                           
  2793                           ;i2c1.c: 346: else
  2794                           ;i2c1.c: 347: {
  2795                           ;i2c1.c: 350: SSP1CON2bits.RSEN = 1;
  2796  00018C  82C5               	bsf	4037,1,c	;volatile
  2797                           
  2798                           ;i2c1.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  2799  00018E  C027  F02C         	movff	I2C1_ISR@i2c_address,??_I2C1_ISR
  2800  000192  C028  F02D         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR+1
  2801  000196  C02D  F02C         	movff	??_I2C1_ISR+1,??_I2C1_ISR
  2802  00019A  6A2D               	clrf	??_I2C1_ISR+1,c
  2803  00019C  0E06               	movlw	6
  2804  00019E  162C               	andwf	??_I2C1_ISR,f,c
  2805  0001A0  0E00               	movlw	0
  2806  0001A2  162D               	andwf	??_I2C1_ISR+1,f,c
  2807  0001A4  0EF0               	movlw	240
  2808  0001A6  102C               	iorwf	??_I2C1_ISR,w,c
  2809  0001A8  6E27               	movwf	I2C1_ISR@i2c_address,c
  2810  0001AA  502D               	movf	??_I2C1_ISR+1,w,c
  2811  0001AC  6E28               	movwf	I2C1_ISR@i2c_address+1,c
  2812                           
  2813                           ;i2c1.c: 357: i2c_address |= 0x0001;
  2814  0001AE  8027               	bsf	I2C1_ISR@i2c_address,0,c
  2815                           
  2816                           ;i2c1.c: 360: i2c_10bit_address_restart = 1;
  2817  0001B0  0E01               	movlw	1
  2818  0001B2  6E11               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
  2819                           
  2820                           ;i2c1.c: 363: i2c1_state = S_MASTER_SEND_ADDR;
  2821  0001B4  0E02               	movlw	2
  2822  0001B6  6E14               	movwf	_i2c1_state,c
  2823                           
  2824                           ;i2c1.c: 364: }
  2825                           ;i2c1.c: 366: break;
  2826  0001B8  0012               	return	
  2827  0001BA                     i2l1484:
  2828                           
  2829                           ;i2c1.c: 381: if(i2c_10bit_address_restart != 1)
  2830  0001BA  0411               	decf	I2C1_ISR@i2c_10bit_address_restart,w,c
  2831  0001BC  B4D8               	btfsc	status,2,c
  2832  0001BE  D01A               	goto	i2l144
  2833                           
  2834                           ;i2c1.c: 382: {
  2835                           ;i2c1.c: 384: i2c_address = p_i2c1_trb_current->address;
  2836  0001C0  C00E  FFD9         	movff	_p_i2c1_trb_current,fsr2l
  2837  0001C4  C00F  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
  2838  0001C8  CFDE F027          	movff	postinc2,I2C1_ISR@i2c_address
  2839  0001CC  CFDD F028          	movff	postdec2,I2C1_ISR@i2c_address+1
  2840                           
  2841                           ;i2c1.c: 385: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
  2842  0001D0  EE20 F003          	lfsr	2,3
  2843  0001D4  500E               	movf	_p_i2c1_trb_current,w,c
  2844  0001D6  26D9               	addwf	fsr2l,f,c
  2845  0001D8  500F               	movf	_p_i2c1_trb_current+1,w,c
  2846  0001DA  22DA               	addwfc	fsr2h,f,c
  2847  0001DC  CFDE F00A          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
  2848  0001E0  CFDD F00B          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
  2849                           
  2850                           ;i2c1.c: 386: i2c_bytes_left = p_i2c1_trb_current->length;
  2851  0001E4  EE20 F002          	lfsr	2,2
  2852  0001E8  500E               	movf	_p_i2c1_trb_current,w,c
  2853  0001EA  26D9               	addwf	fsr2l,f,c
  2854  0001EC  500F               	movf	_p_i2c1_trb_current+1,w,c
  2855  0001EE  22DA               	addwfc	fsr2h,f,c
  2856  0001F0  50DF               	movf	indf2,w,c
  2857  0001F2  6E12               	movwf	I2C1_ISR@i2c_bytes_left,c
  2858  0001F4                     i2l144:
  2859                           
  2860                           ;i2c1.c: 409: else
  2861                           ;i2c1.c: 410: {
  2862                           ;i2c1.c: 412: SSP1BUF = i2c_address;
  2863  0001F4  C027  FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
  2864                           
  2865                           ;i2c1.c: 413: if(i2c_address & 0x01)
  2866  0001F8  A027               	btfss	I2C1_ISR@i2c_address,0,c
  2867  0001FA  D003               	goto	i2l1504
  2868                           
  2869                           ;i2c1.c: 414: {
  2870                           ;i2c1.c: 416: i2c1_state = S_MASTER_ACK_ADDR;
  2871  0001FC  0E05               	movlw	5
  2872  0001FE  6E14               	movwf	_i2c1_state,c
  2873                           
  2874                           ;i2c1.c: 417: }
  2875  000200  0012               	return	
  2876  000202                     i2l1504:
  2877                           
  2878                           ;i2c1.c: 418: else
  2879                           ;i2c1.c: 419: {
  2880                           ;i2c1.c: 421: i2c1_state = S_MASTER_SEND_DATA;
  2881  000202  0E03               	movlw	3
  2882  000204  6E14               	movwf	_i2c1_state,c
  2883                           
  2884                           ;i2c1.c: 422: }
  2885                           ;i2c1.c: 423: }
  2886                           ;i2c1.c: 424: break;
  2887  000206  0012               	return	
  2888  000208                     i2l150:
  2889                           
  2890                           ;i2c1.c: 429: if(SSP1CON2bits.ACKSTAT)
  2891  000208  ACC5               	btfss	4037,6,c	;volatile
  2892  00020A  D006               	goto	i2l1512
  2893                           
  2894                           ;i2c1.c: 430: {
  2895                           ;i2c1.c: 432: i2c1_object.i2cErrors++;
  2896  00020C  2A07               	incf	_i2c1_object+6,f,c
  2897                           
  2898                           ;i2c1.c: 435: SSP1CON2bits.ACKSTAT = 0;
  2899  00020E  9CC5               	bcf	4037,6,c	;volatile
  2900                           
  2901                           ;i2c1.c: 438: I2C1_Stop(I2C1_DATA_NO_ACK);
  2902  000210  0E05               	movlw	5
  2903  000212  EC60  F002         	call	_I2C1_Stop
  2904                           
  2905                           ;i2c1.c: 440: }
  2906  000216  0012               	return	
  2907  000218                     i2l1512:
  2908                           
  2909                           ;i2c1.c: 441: else
  2910                           ;i2c1.c: 442: {
  2911                           ;i2c1.c: 444: if(i2c_bytes_left-- == 0U)
  2912  000218  0612               	decf	I2C1_ISR@i2c_bytes_left,f,c
  2913  00021A  2812               	incf	I2C1_ISR@i2c_bytes_left,w,c
  2914  00021C  A4D8               	btfss	status,2,c
  2915  00021E  D00E               	goto	i2l1522
  2916                           
  2917                           ;i2c1.c: 445: {
  2918                           ;i2c1.c: 449: p_i2c1_trb_current++;
  2919  000220  0E06               	movlw	6
  2920  000222  260E               	addwf	_p_i2c1_trb_current,f,c
  2921  000224  0E00               	movlw	0
  2922  000226  220F               	addwfc	_p_i2c1_trb_current+1,f,c
  2923                           
  2924                           ;i2c1.c: 452: if(--i2c1_trb_count == 0)
  2925  000228  2E13               	decfsz	_i2c1_trb_count,f,c
  2926  00022A  D004               	goto	i2l154
  2927                           
  2928                           ;i2c1.c: 453: {
  2929                           ;i2c1.c: 454: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  2930  00022C  0E00               	movlw	0
  2931  00022E  EC60  F002         	call	_I2C1_Stop
  2932                           
  2933                           ;i2c1.c: 455: }
  2934  000232  0012               	return	
  2935  000234                     i2l154:
  2936                           
  2937                           ;i2c1.c: 456: else
  2938                           ;i2c1.c: 457: {
  2939                           ;i2c1.c: 464: SSP1CON2bits.RSEN = 1;
  2940  000234  82C5               	bsf	4037,1,c	;volatile
  2941                           
  2942                           ;i2c1.c: 467: i2c1_state = S_MASTER_SEND_ADDR;
  2943  000236  0E02               	movlw	2
  2944  000238  6E14               	movwf	_i2c1_state,c
  2945                           
  2946                           ;i2c1.c: 469: }
  2947                           ;i2c1.c: 470: }
  2948  00023A  0012               	return	
  2949  00023C                     i2l1522:
  2950                           
  2951                           ;i2c1.c: 471: else
  2952                           ;i2c1.c: 472: {
  2953                           ;i2c1.c: 474: SSP1BUF = *pi2c_buf_ptr++;
  2954  00023C  C00A  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
  2955  000240  C00B  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
  2956  000244  50DF               	movf	indf2,w,c
  2957  000246  6EC9               	movwf	4041,c	;volatile
  2958  000248  4A0A               	infsnz	I2C1_ISR@pi2c_buf_ptr,f,c
  2959  00024A  2A0B               	incf	I2C1_ISR@pi2c_buf_ptr+1,f,c
  2960                           
  2961                           ;i2c1.c: 475: }
  2962                           ;i2c1.c: 476: }
  2963                           ;i2c1.c: 477: break;
  2964  00024C  0012               	return	
  2965  00024E                     i2l157:
  2966                           
  2967                           ;i2c1.c: 482: if(SSP1CON2bits.ACKSTAT)
  2968  00024E  ACC5               	btfss	4037,6,c	;volatile
  2969  000250  D006               	goto	i2l158
  2970                           
  2971                           ;i2c1.c: 483: {
  2972                           ;i2c1.c: 486: i2c1_object.i2cErrors++;
  2973  000252  2A07               	incf	_i2c1_object+6,f,c
  2974                           
  2975                           ;i2c1.c: 489: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  2976  000254  0E04               	movlw	4
  2977  000256  EC60  F002         	call	_I2C1_Stop
  2978                           
  2979                           ;i2c1.c: 492: SSP1CON2bits.ACKSTAT = 0;
  2980  00025A  9CC5               	bcf	4037,6,c	;volatile
  2981                           
  2982                           ;i2c1.c: 493: }
  2983  00025C  0012               	return	
  2984  00025E                     i2l158:
  2985                           
  2986                           ;i2c1.c: 494: else
  2987                           ;i2c1.c: 495: {
  2988                           ;i2c1.c: 496: SSP1CON2bits.RCEN = 1;
  2989  00025E  86C5               	bsf	4037,3,c	;volatile
  2990                           
  2991                           ;i2c1.c: 497: i2c1_state = S_MASTER_ACK_RCV_DATA;
  2992  000260  0E08               	movlw	8
  2993  000262  6E14               	movwf	_i2c1_state,c
  2994                           
  2995                           ;i2c1.c: 498: }
  2996                           ;i2c1.c: 499: break;
  2997  000264  0012               	return	
  2998  000266                     i2l1534:
  2999                           
  3000                           ;i2c1.c: 506: i2c1_state = S_MASTER_ACK_RCV_DATA;
  3001  000266  0E08               	movlw	8
  3002  000268  6E14               	movwf	_i2c1_state,c
  3003                           
  3004                           ;i2c1.c: 509: SSP1CON2bits.RCEN = 1;
  3005  00026A  86C5               	bsf	4037,3,c	;volatile
  3006                           
  3007                           ;i2c1.c: 511: break;
  3008  00026C  0012               	return	
  3009  00026E                     i2l1538:
  3010                           
  3011                           ;i2c1.c: 516: *pi2c_buf_ptr++ = SSP1BUF;
  3012  00026E  C00A  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
  3013  000272  C00B  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
  3014  000276  CFC9 FFDF          	movff	4041,indf2	;volatile
  3015  00027A  4A0A               	infsnz	I2C1_ISR@pi2c_buf_ptr,f,c
  3016  00027C  2A0B               	incf	I2C1_ISR@pi2c_buf_ptr+1,f,c
  3017                           
  3018                           ;i2c1.c: 519: if(--i2c_bytes_left)
  3019  00027E  0E01               	movlw	1
  3020  000280  5E12               	subwf	I2C1_ISR@i2c_bytes_left,f,c
  3021  000282  B4D8               	btfsc	status,2,c
  3022  000284  D004               	goto	i2l162
  3023                           
  3024                           ;i2c1.c: 520: {
  3025                           ;i2c1.c: 526: SSP1CON2bits.ACKDT = 0;
  3026  000286  9AC5               	bcf	4037,5,c	;volatile
  3027                           
  3028                           ;i2c1.c: 529: i2c1_state = S_MASTER_RCV_DATA;
  3029  000288  0E06               	movlw	6
  3030  00028A  6E14               	movwf	_i2c1_state,c
  3031                           
  3032                           ;i2c1.c: 530: }
  3033  00028C  D003               	goto	i2l1550
  3034  00028E                     i2l162:
  3035                           
  3036                           ;i2c1.c: 531: else
  3037                           ;i2c1.c: 532: {
  3038                           ;i2c1.c: 536: SSP1CON2bits.ACKDT = 1;
  3039  00028E  8AC5               	bsf	4037,5,c	;volatile
  3040                           
  3041                           ;i2c1.c: 538: I2C1_FunctionComplete();
  3042  000290  EC63  F003         	call	_I2C1_FunctionComplete	;wreg free
  3043  000294                     i2l1550:
  3044                           
  3045                           ;i2c1.c: 539: }
  3046                           ;i2c1.c: 542: SSP1CON2bits.ACKEN = 1;
  3047  000294  88C5               	bsf	4037,4,c	;volatile
  3048                           
  3049                           ;i2c1.c: 543: break;
  3050  000296  0012               	return	
  3051  000298                     i2l1552:
  3052                           
  3053                           ;i2c1.c: 546: case S_MASTER_SEND_STOP:
  3054                           ;i2c1.c: 549: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  3055  000298  0E00               	movlw	0
  3056  00029A  EC60  F002         	call	_I2C1_Stop
  3057                           
  3058                           ;i2c1.c: 550: break;
  3059  00029E  0012               	return	
  3060  0002A0                     i2l1554:
  3061                           
  3062                           ;i2c1.c: 556: i2c1_object.i2cErrors++;
  3063  0002A0  2A07               	incf	_i2c1_object+6,f,c
  3064                           
  3065                           ;i2c1.c: 557: I2C1_Stop(I2C1_LOST_STATE);
  3066  0002A2  0E06               	movlw	6
  3067  0002A4  EC60  F002         	call	_I2C1_Stop
  3068                           
  3069                           ;i2c1.c: 560: }
  3070                           
  3071                           ;i2c1.c: 558: break;
  3072  0002A8  0012               	return	
  3073  0002AA                     i2l1560:
  3074  0002AA  5014               	movf	_i2c1_state,w,c
  3075                           
  3076                           ; Switch size 1, requested type "space"
  3077                           ; Number of cases is 11, Range of values is 0 to 11
  3078                           ; switch strategies available:
  3079                           ; Name         Instructions Cycles
  3080                           ; simple_byte           34    18 (average)
  3081                           ;	Chosen strategy is simple_byte
  3082  0002AC  0A00               	xorlw	0	; case 0
  3083  0002AE  B4D8               	btfsc	status,2,c
  3084  0002B0  D71B               	goto	i2l128
  3085  0002B2  0A01               	xorlw	1	; case 1
  3086  0002B4  B4D8               	btfsc	status,2,c
  3087  0002B6  D749               	goto	i2l133
  3088  0002B8  0A03               	xorlw	3	; case 2
  3089  0002BA  B4D8               	btfsc	status,2,c
  3090  0002BC  D77E               	goto	i2l1484
  3091  0002BE  0A01               	xorlw	1	; case 3
  3092  0002C0  B4D8               	btfsc	status,2,c
  3093  0002C2  D7A2               	goto	i2l150
  3094  0002C4  0A07               	xorlw	7	; case 4
  3095  0002C6  B4D8               	btfsc	status,2,c
  3096  0002C8  D7E7               	goto	i2l1552
  3097  0002CA  0A01               	xorlw	1	; case 5
  3098  0002CC  B4D8               	btfsc	status,2,c
  3099  0002CE  D7BF               	goto	i2l157
  3100  0002D0  0A03               	xorlw	3	; case 6
  3101  0002D2  B4D8               	btfsc	status,2,c
  3102  0002D4  D7C8               	goto	i2l1534
  3103  0002D6  0A01               	xorlw	1	; case 7
  3104  0002D8  B4D8               	btfsc	status,2,c
  3105  0002DA  D7DE               	goto	i2l1552
  3106  0002DC  0A0F               	xorlw	15	; case 8
  3107  0002DE  B4D8               	btfsc	status,2,c
  3108  0002E0  D7C6               	goto	i2l1538
  3109  0002E2  0A02               	xorlw	2	; case 10
  3110  0002E4  B4D8               	btfsc	status,2,c
  3111  0002E6  D735               	goto	i2l134
  3112  0002E8  0A01               	xorlw	1	; case 11
  3113  0002EA  B4D8               	btfsc	status,2,c
  3114  0002EC  D748               	goto	i2l139
  3115  0002EE  D7D8               	goto	i2l1554
  3116  0002F0                     __end_of_I2C1_ISR:
  3117                           	opt stack 0
  3118                           tosu	equ	0xFFF
  3119                           tosh	equ	0xFFE
  3120                           tosl	equ	0xFFD
  3121                           pclatu	equ	0xFFB
  3122                           pclath	equ	0xFFA
  3123                           tblptru	equ	0xFF8
  3124                           tblptrh	equ	0xFF7
  3125                           tblptrl	equ	0xFF6
  3126                           tablat	equ	0xFF5
  3127                           prodh	equ	0xFF4
  3128                           prodl	equ	0xFF3
  3129                           intcon	equ	0xFF2
  3130                           intcon2	equ	0xFF1
  3131                           postinc0	equ	0xFEE
  3132                           fsr0h	equ	0xFEA
  3133                           fsr0l	equ	0xFE9
  3134                           wreg	equ	0xFE8
  3135                           fsr1h	equ	0xFE2
  3136                           fsr1l	equ	0xFE1
  3137                           indf2	equ	0xFDF
  3138                           postinc2	equ	0xFDE
  3139                           postdec2	equ	0xFDD
  3140                           fsr2h	equ	0xFDA
  3141                           fsr2l	equ	0xFD9
  3142                           status	equ	0xFD8
  3143                           
  3144 ;; *************** function _I2C1_Stop *****************
  3145 ;; Defined at:
  3146 ;;		line 581 in file "mcc_generated_files/i2c1.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;  completion_c    1    wreg     enum E6983
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;  completion_c    1    2[COMRAM] enum E6983
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  1    wreg      void 
  3153 ;; Registers used:
  3154 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3161 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3162 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3163 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3164 ;;Total ram usage:        3 bytes
  3165 ;; Hardware stack levels used:    1
  3166 ;; This function calls:
  3167 ;;		Nothing
  3168 ;; This function is called by:
  3169 ;;		_I2C1_ISR
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           	psect	text25
  3174  0004C0                     __ptext25:
  3175                           	opt stack 0
  3176  0004C0                     _I2C1_Stop:
  3177                           	opt stack 25
  3178                           
  3179                           ;incstack = 0
  3180                           ;I2C1_Stop@completion_code stored from wreg
  3181  0004C0  6E2B               	movwf	I2C1_Stop@completion_code,c
  3182                           
  3183                           ;i2c1.c: 584: SSP1CON2bits.PEN = 1;
  3184  0004C2  84C5               	bsf	4037,2,c	;volatile
  3185                           
  3186                           ;i2c1.c: 587: if (p_i2c1_current->pTrFlag != (0))
  3187  0004C4  EE20 F003          	lfsr	2,3
  3188  0004C8  500C               	movf	_p_i2c1_current,w,c
  3189  0004CA  26D9               	addwf	fsr2l,f,c
  3190  0004CC  500D               	movf	_p_i2c1_current+1,w,c
  3191  0004CE  22DA               	addwfc	fsr2h,f,c
  3192  0004D0  50DE               	movf	postinc2,w,c
  3193  0004D2  10DE               	iorwf	postinc2,w,c
  3194  0004D4  B4D8               	btfsc	status,2,c
  3195  0004D6  D010               	goto	i2l1270
  3196                           
  3197                           ;i2c1.c: 588: {
  3198                           ;i2c1.c: 590: *(p_i2c1_current->pTrFlag) = completion_code;
  3199  0004D8  EE20 F003          	lfsr	2,3
  3200  0004DC  500C               	movf	_p_i2c1_current,w,c
  3201  0004DE  26D9               	addwf	fsr2l,f,c
  3202  0004E0  500D               	movf	_p_i2c1_current+1,w,c
  3203  0004E2  22DA               	addwfc	fsr2h,f,c
  3204  0004E4  CFDE F029          	movff	postinc2,??_I2C1_Stop
  3205  0004E8  CFDD F02A          	movff	postdec2,??_I2C1_Stop+1
  3206  0004EC  C029  FFD9         	movff	??_I2C1_Stop,fsr2l
  3207  0004F0  C02A  FFDA         	movff	??_I2C1_Stop+1,fsr2h
  3208  0004F4  C02B  FFDF         	movff	I2C1_Stop@completion_code,indf2
  3209  0004F8                     i2l1270:
  3210                           
  3211                           ;i2c1.c: 591: }
  3212                           ;i2c1.c: 594: i2c1_state = S_MASTER_IDLE;
  3213  0004F8  0E00               	movlw	0
  3214  0004FA  6E14               	movwf	_i2c1_state,c
  3215  0004FC  0012               	return		;funcret
  3216  0004FE                     __end_of_I2C1_Stop:
  3217                           	opt stack 0
  3218                           tosu	equ	0xFFF
  3219                           tosh	equ	0xFFE
  3220                           tosl	equ	0xFFD
  3221                           pclatu	equ	0xFFB
  3222                           pclath	equ	0xFFA
  3223                           tblptru	equ	0xFF8
  3224                           tblptrh	equ	0xFF7
  3225                           tblptrl	equ	0xFF6
  3226                           tablat	equ	0xFF5
  3227                           prodh	equ	0xFF4
  3228                           prodl	equ	0xFF3
  3229                           intcon	equ	0xFF2
  3230                           intcon2	equ	0xFF1
  3231                           postinc0	equ	0xFEE
  3232                           fsr0h	equ	0xFEA
  3233                           fsr0l	equ	0xFE9
  3234                           wreg	equ	0xFE8
  3235                           fsr1h	equ	0xFE2
  3236                           fsr1l	equ	0xFE1
  3237                           indf2	equ	0xFDF
  3238                           postinc2	equ	0xFDE
  3239                           postdec2	equ	0xFDD
  3240                           fsr2h	equ	0xFDA
  3241                           fsr2l	equ	0xFD9
  3242                           status	equ	0xFD8
  3243                           
  3244 ;; *************** function _I2C1_FunctionComplete *****************
  3245 ;; Defined at:
  3246 ;;		line 563 in file "mcc_generated_files/i2c1.c"
  3247 ;; Parameters:    Size  Location     Type
  3248 ;;		None
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;		None
  3251 ;; Return value:  Size  Location     Type
  3252 ;;                  1    wreg      void 
  3253 ;; Registers used:
  3254 ;;		wreg, status,2, status,0
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3264 ;;Total ram usage:        0 bytes
  3265 ;; Hardware stack levels used:    1
  3266 ;; This function calls:
  3267 ;;		Nothing
  3268 ;; This function is called by:
  3269 ;;		_I2C1_ISR
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           	psect	text26
  3274  0006C6                     __ptext26:
  3275                           	opt stack 0
  3276  0006C6                     _I2C1_FunctionComplete:
  3277                           	opt stack 25
  3278                           
  3279                           ;i2c1.c: 567: p_i2c1_trb_current++;
  3280                           
  3281                           ;incstack = 0
  3282  0006C6  0E06               	movlw	6
  3283  0006C8  260E               	addwf	_p_i2c1_trb_current,f,c
  3284  0006CA  0E00               	movlw	0
  3285  0006CC  220F               	addwfc	_p_i2c1_trb_current+1,f,c
  3286                           
  3287                           ;i2c1.c: 570: if(--i2c1_trb_count == 0)
  3288  0006CE  2E13               	decfsz	_i2c1_trb_count,f,c
  3289  0006D0  D003               	goto	i2l1278
  3290                           
  3291                           ;i2c1.c: 571: {
  3292                           ;i2c1.c: 572: i2c1_state = S_MASTER_SEND_STOP;
  3293  0006D2  0E04               	movlw	4
  3294  0006D4  6E14               	movwf	_i2c1_state,c
  3295                           
  3296                           ;i2c1.c: 573: }
  3297  0006D6  0012               	return	
  3298  0006D8                     i2l1278:
  3299                           
  3300                           ;i2c1.c: 574: else
  3301                           ;i2c1.c: 575: {
  3302                           ;i2c1.c: 576: i2c1_state = S_MASTER_RESTART;
  3303  0006D8  0E01               	movlw	1
  3304  0006DA  6E14               	movwf	_i2c1_state,c
  3305  0006DC  0012               	return	
  3306  0006DE                     __end_of_I2C1_FunctionComplete:
  3307                           	opt stack 0
  3308                           tosu	equ	0xFFF
  3309                           tosh	equ	0xFFE
  3310                           tosl	equ	0xFFD
  3311                           pclatu	equ	0xFFB
  3312                           pclath	equ	0xFFA
  3313                           tblptru	equ	0xFF8
  3314                           tblptrh	equ	0xFF7
  3315                           tblptrl	equ	0xFF6
  3316                           tablat	equ	0xFF5
  3317                           prodh	equ	0xFF4
  3318                           prodl	equ	0xFF3
  3319                           intcon	equ	0xFF2
  3320                           intcon2	equ	0xFF1
  3321                           postinc0	equ	0xFEE
  3322                           fsr0h	equ	0xFEA
  3323                           fsr0l	equ	0xFE9
  3324                           wreg	equ	0xFE8
  3325                           fsr1h	equ	0xFE2
  3326                           fsr1l	equ	0xFE1
  3327                           indf2	equ	0xFDF
  3328                           postinc2	equ	0xFDE
  3329                           postdec2	equ	0xFDD
  3330                           fsr2h	equ	0xFDA
  3331                           fsr2l	equ	0xFD9
  3332                           status	equ	0xFD8
  3333                           
  3334 ;; *************** function _I2C1_BusCollisionISR *****************
  3335 ;; Defined at:
  3336 ;;		line 728 in file "mcc_generated_files/i2c1.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;		None
  3339 ;; Auto vars:     Size  Location     Type
  3340 ;;		None
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  1    wreg      void 
  3343 ;; Registers used:
  3344 ;;		None
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3354 ;;Total ram usage:        0 bytes
  3355 ;; Hardware stack levels used:    1
  3356 ;; This function calls:
  3357 ;;		Nothing
  3358 ;; This function is called by:
  3359 ;;		_INTERRUPT_InterruptManager
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           	psect	text27
  3364  000740                     __ptext27:
  3365                           	opt stack 0
  3366  000740                     _I2C1_BusCollisionISR:
  3367                           	opt stack 26
  3368                           
  3369                           ;incstack = 0
  3370  000740  0012               	return		;funcret
  3371  000742                     __end_of_I2C1_BusCollisionISR:
  3372                           	opt stack 0
  3373  0000                     tosu	equ	0xFFF
  3374                           tosh	equ	0xFFE
  3375                           tosl	equ	0xFFD
  3376                           pclatu	equ	0xFFB
  3377                           pclath	equ	0xFFA
  3378                           tblptru	equ	0xFF8
  3379                           tblptrh	equ	0xFF7
  3380                           tblptrl	equ	0xFF6
  3381                           tablat	equ	0xFF5
  3382                           prodh	equ	0xFF4
  3383                           prodl	equ	0xFF3
  3384                           intcon	equ	0xFF2
  3385                           intcon2	equ	0xFF1
  3386                           postinc0	equ	0xFEE
  3387                           fsr0h	equ	0xFEA
  3388                           fsr0l	equ	0xFE9
  3389                           wreg	equ	0xFE8
  3390                           fsr1h	equ	0xFE2
  3391                           fsr1l	equ	0xFE1
  3392                           indf2	equ	0xFDF
  3393                           postinc2	equ	0xFDE
  3394                           postdec2	equ	0xFDD
  3395                           fsr2h	equ	0xFDA
  3396                           fsr2l	equ	0xFD9
  3397                           status	equ	0xFD8
  3398                           tosu	equ	0xFFF
  3399                           tosh	equ	0xFFE
  3400                           tosl	equ	0xFFD
  3401                           pclatu	equ	0xFFB
  3402                           pclath	equ	0xFFA
  3403                           tblptru	equ	0xFF8
  3404                           tblptrh	equ	0xFF7
  3405                           tblptrl	equ	0xFF6
  3406                           tablat	equ	0xFF5
  3407                           prodh	equ	0xFF4
  3408                           prodl	equ	0xFF3
  3409                           intcon	equ	0xFF2
  3410                           intcon2	equ	0xFF1
  3411                           postinc0	equ	0xFEE
  3412                           fsr0h	equ	0xFEA
  3413                           fsr0l	equ	0xFE9
  3414                           wreg	equ	0xFE8
  3415                           fsr1h	equ	0xFE2
  3416                           fsr1l	equ	0xFE1
  3417                           indf2	equ	0xFDF
  3418                           postinc2	equ	0xFDE
  3419                           postdec2	equ	0xFDD
  3420                           fsr2h	equ	0xFDA
  3421                           fsr2l	equ	0xFD9
  3422                           status	equ	0xFD8
  3423                           
  3424                           	psect	text28
  3425  000000                     __ptext28:
  3426                           	opt stack 0
  3427                           tosu	equ	0xFFF
  3428                           tosh	equ	0xFFE
  3429                           tosl	equ	0xFFD
  3430                           pclatu	equ	0xFFB
  3431                           pclath	equ	0xFFA
  3432                           tblptru	equ	0xFF8
  3433                           tblptrh	equ	0xFF7
  3434                           tblptrl	equ	0xFF6
  3435                           tablat	equ	0xFF5
  3436                           prodh	equ	0xFF4
  3437                           prodl	equ	0xFF3
  3438                           intcon	equ	0xFF2
  3439                           intcon2	equ	0xFF1
  3440                           postinc0	equ	0xFEE
  3441                           fsr0h	equ	0xFEA
  3442                           fsr0l	equ	0xFE9
  3443                           wreg	equ	0xFE8
  3444                           fsr1h	equ	0xFE2
  3445                           fsr1l	equ	0xFE1
  3446                           indf2	equ	0xFDF
  3447                           postinc2	equ	0xFDE
  3448                           postdec2	equ	0xFDD
  3449                           fsr2h	equ	0xFDA
  3450                           fsr2l	equ	0xFD9
  3451                           status	equ	0xFD8
  3452                           
  3453                           	psect	rparam
  3454  0000                     tosu	equ	0xFFF
  3455                           tosh	equ	0xFFE
  3456                           tosl	equ	0xFFD
  3457                           pclatu	equ	0xFFB
  3458                           pclath	equ	0xFFA
  3459                           tblptru	equ	0xFF8
  3460                           tblptrh	equ	0xFF7
  3461                           tblptrl	equ	0xFF6
  3462                           tablat	equ	0xFF5
  3463                           prodh	equ	0xFF4
  3464                           prodl	equ	0xFF3
  3465                           intcon	equ	0xFF2
  3466                           intcon2	equ	0xFF1
  3467                           postinc0	equ	0xFEE
  3468                           fsr0h	equ	0xFEA
  3469                           fsr0l	equ	0xFE9
  3470                           wreg	equ	0xFE8
  3471                           fsr1h	equ	0xFE2
  3472                           fsr1l	equ	0xFE1
  3473                           indf2	equ	0xFDF
  3474                           postinc2	equ	0xFDE
  3475                           postdec2	equ	0xFDD
  3476                           fsr2h	equ	0xFDA
  3477                           fsr2l	equ	0xFD9
  3478                           status	equ	0xFD8
  3479                           
  3480                           	psect	temp
  3481  000048                     btemp:
  3482                           	opt stack 0
  3483  000048                     	ds	1
  3484  0000                     int$flags	set	btemp
  3485                           tosu	equ	0xFFF
  3486                           tosh	equ	0xFFE
  3487                           tosl	equ	0xFFD
  3488                           pclatu	equ	0xFFB
  3489                           pclath	equ	0xFFA
  3490                           tblptru	equ	0xFF8
  3491                           tblptrh	equ	0xFF7
  3492                           tblptrl	equ	0xFF6
  3493                           tablat	equ	0xFF5
  3494                           prodh	equ	0xFF4
  3495                           prodl	equ	0xFF3
  3496                           intcon	equ	0xFF2
  3497                           intcon2	equ	0xFF1
  3498                           postinc0	equ	0xFEE
  3499                           fsr0h	equ	0xFEA
  3500                           fsr0l	equ	0xFE9
  3501                           wreg	equ	0xFE8
  3502                           fsr1h	equ	0xFE2
  3503                           fsr1l	equ	0xFE1
  3504                           indf2	equ	0xFDF
  3505                           postinc2	equ	0xFDE
  3506                           postdec2	equ	0xFDD
  3507                           fsr2h	equ	0xFDA
  3508                           fsr2l	equ	0xFD9
  3509                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         40
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     25      71
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c1_tr_queue.pTrFlag	PTR enum E6983 size(2) Largest target is 0

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(COMRAM[6]), I2C1_MasterWrite@trBlock(COMRAM[6]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR4_Interrupt(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_Interrupt(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR2_DefaultInterruptHandler(), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 0

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c1_object.pTrTail.pTrFlag	PTR enum E6983 size(2) Largest target is 0

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(COMRAM[6]), I2C1_MasterWrite@trBlock(COMRAM[6]), 

    F7095.pbuffer	PTR unsigned char  size(2) Largest target is 0

    F7090.pbuffer	PTR unsigned char  size(2) Largest target is 0

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 0
		 -> I2C1_ISR@i2c_address(COMRAM[2]), NULL(NULL[0]), 

    S119$pbuffer	PTR unsigned char  size(2) Largest target is 0

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 0

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(COMRAM[6]), I2C1_MasterWrite@trBlock(COMRAM[6]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E6983 size(2) Largest target is 0

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(COMRAM[6]), I2C1_MasterWrite@trBlock(COMRAM[6]), 

    S131$pTrFlag	PTR enum E6983 size(2) Largest target is 0

    p_i2c1_current.pTrFlag	PTR enum E6983 size(2) Largest target is 0

    S131$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(COMRAM[6]), I2C1_MasterWrite@trBlock(COMRAM[6]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(COMRAM[6]), I2C1_MasterWrite@trBlock(COMRAM[6]), 

    p_i2c1_current	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[6]), NULL(NULL[0]), 

    S142$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[6]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[6]), 

    S142$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[6]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _main->_KeyPadAcquire
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _KeyPadAcquire->_KeyPadScan
    _KeyPadScan->_Delay

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1773
                              _Delay
                      _EUSART1_Write
                      _KeyPadAcquire
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     236
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM4_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     150
           _TMR4_SetInterruptHandler
                    _TMR4_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     150
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _KeyPadAcquire                                        3     1      2     943
                                             22 COMRAM     3     1      2
                              _Delay
                         _KeyPadScan
 ---------------------------------------------------------------------------------
 (2) _KeyPadScan                                           1     1      0     468
                                             21 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (3) _Delay                                                2     0      2     429
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write                                        1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0      15
                                              5 COMRAM    14    14      0
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR2_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR4_ISR                                             0     0      0       0
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
                     _TMR4_Interrupt *
 ---------------------------------------------------------------------------------
 (6) _TMR4_Interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_ISR                                             2     2      0      15
                                              3 COMRAM     2     2      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C1_Stop                                            3     3      0      15
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (6) _I2C1_FunctionComplete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay
   _EUSART1_Write
   _KeyPadAcquire
     _Delay
     _KeyPadScan
       _Delay
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM4_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
       _TMR4_StartTimer
   _TMR4_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
   _TMR4_ISR
     Absolute function(Fake) *
     _TMR4_DefaultInterruptHandler *
     _TMR4_Interrupt *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     19      47       1       75.5%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      47      12        0.0%
DATA                 0      0      47       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Dec 05 20:06:07 2017

        __end_of_TMR2_SetInterruptHandler 0722                           Delay@DelayCount 003C  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                                     l452 0704                              __CFG_CPB$OFF 000000  
                                     _PR2 000FBB                                       _PR4 000F52  
                            __CFG_CPD$OFF 000000                           _TMR2_Initialize 0642  
                         _PWM4_Initialize 06A8                                       tosl 000FFD  
                                     wreg 000FE8                              __CFG_LVP$OFF 000000  
                        __end_of_I2C1_ISR 02F0                                      l2010 045A  
                                    l2004 0444                                      l2042 0502  
                                    l2050 0522                                      l2070 0564  
                                    l2048 0516                                      l1902 030C  
                                    l1920 0346                                      l1914 0330  
                                    l1932 0368                                      l1908 031E  
                                    l1870 060E                                      l1950 03A2  
                                    l1872 0616                                      l1944 038C  
                                    l1866 05FA                                      l1962 03C4  
                                    l1938 037A                                      l1980 03FE  
                                    l1974 03E8                                      l1992 0420  
                                    l1968 03D6                                      l1998 0432  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      _TMR2 000FBC  
                                    _TMR4 000F53                                      _WPUB 000F61  
                           _EUSART1_Write 0702                                      _main 053A  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0048  
                           __CFG_BORV$190 000000                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00AE  
                           __CFG_IESO$OFF 000000                ??_TMR4_SetInterruptHandler 003E  
                            ___param_bank 000000                                _i2c1_state 0014  
                         ??_KeyPadAcquire 0041            __size_of_OSCILLATOR_Initialize 000E  
           __end_of_OSCILLATOR_Initialize 0702                                     ?_main 0029  
                       __end_of_I2C1_Stop 04FE                                     _EEADR 000FA9  
                                   _T2CON 000FBA                                     _T4CON 000F51  
                          __CFG_DEBUG$OFF 000000                                     i2l131 0142  
                                   i2l140 018C                                     i2l133 014A  
                                   i2l150 0208                                     i2l134 0152  
                                   i2l144 01F4                                     i2l128 00E8  
                                   i2l162 028E                                     i2l154 0234  
                                   i2l139 017E                                     i2l157 024E  
                                   i2l158 025E                                     i2l407 0072  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                                     _Delay 05F8  
            __end_of_I2C1_BusCollisionISR 0742                             __CFG_WRT0$OFF 000000  
                         _TMR4_Initialize 05D0                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                         ??_I2C1_Initialize 003C  
                        __end_of_TMR2_ISR 06A8                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                          __end_of_TMR4_ISR 0686  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
                      __CFG_MCLRE$EXTMCLR 000000                            ?_EUSART1_Write 0029  
                              _KeyPadScan 02F0                                     pclath 000FFA  
                                   tablat 000FF5                                     status 000FD8  
                          __CFG_HFOFST$ON 000000                           _TMR2_StartTimer 0732  
                              _KeyPressed 0046                           __initialization 0570  
              __end_of_EUSART1_Initialize 06F4                              __end_of_main 0570  
                          KeyPadScan@Push 0010                   __end_of_PWM4_Initialize 06C6  
                 __end_of_TMR2_Initialize 0664               ?_INTERRUPT_InterruptManager 0029  
                             _i2c1_object 0001                  _TMR2_SetInterruptHandler 0718  
                                  ??_main 0042                             __activetblptr 000002  
                                  ?_Delay 003C                                    _EEADRH 000FAA  
                                  _EEDATA 000FA8                                    _CCPR4H 000F59  
                                  _CCPR4L 000F58                                    _EECON2 000FA7  
                                  _ANSELA 000F38                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                                    _ANSELD 000F3B  
                                  _ANSELE 000F3C                                    i2l1270 04F8  
                                  i2l1512 0218                                    i2l1504 0202  
                                  i2l1522 023C                                    i2l1452 0132  
                                  i2l1278 06D8                                    i2l1550 0294  
                                  i2l1534 0266                                    i2l1470 0178  
                                  i2l1552 0298                                    i2l1464 0160  
                                  i2l1560 02AA                                    i2l1554 02A0  
                                  i2l1538 026E                                    i2l1484 01BA  
                                  i2l1820 005A                                    i2l1812 004E  
                          __CFG_WDTEN$OFF 000000                                    i2l1828 0066  
                                  _TABLAT 000FF5                                    _RCREG1 000FAE  
                                  _RCSTA1 000FAB                                    _OSCCON 000FD3  
                                  _SPBRG1 000FAF                                    _TXREG1 000FAD  
                                  _TXSTA1 000FAC                           _TMR4_StartTimer 072C  
                          __CFG_XINST$OFF 000000                              _CCPTMRS1bits 000F48  
                          _p_i2c1_current 000C                            __CFG_STVREN$ON 000000  
                 __end_of_TMR4_Initialize 05F8                                 ?_I2C1_ISR 0029  
                                  clear_0 058E      __end_of_TMR4_DefaultInterruptHandler 073E  
   __size_of_TMR4_DefaultInterruptHandler 0002              _TMR4_DefaultInterruptHandler 073C  
                            __pdataCOMRAM 0046                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                         ??_EUSART1_Write 003C                   __end_of_TMR2_StartTimer 0736  
TMR4_SetInterruptHandler@InterruptHandler 003C  TMR2_SetInterruptHandler@InterruptHandler 003C  
           __size_of_INTERRUPT_Initialize 0004                               ?_KeyPadScan 0029  
                       _SYSTEM_Initialize 0620                                __accesstop 0060  
                 __end_of__initialization 0594                           __CFG_PBADEN$OFF 000000  
                      ?_SYSTEM_Initialize 0029                             ___rparam_used 000001  
                          _i2c1_trb_count 0013                             __end_of_Delay 0620  
                   _I2C1_FunctionComplete 06C6                      _I2C1_BusCollisionISR 0740  
                          __pcstackCOMRAM 0029                       ??_SYSTEM_Initialize 003E  
                               ?_TMR2_ISR 0029                                 ?_TMR4_ISR 0029  
                              ??_I2C1_ISR 002C                          ?_TMR2_Initialize 0029  
                        ?_PWM4_Initialize 0029                                   ??_Delay 003E  
           ?_TMR4_DefaultInterruptHandler 0029                   __end_of_TMR4_StartTimer 0732  
               __end_of_SYSTEM_Initialize 0642                           __CFG_PLLCFG$OFF 000000  
                              __pnvCOMRAM 0042                     _TMR4_InterruptHandler 0042  
                   ?_I2C1_BusCollisionISR 0029                        __CFG_CCP2MX$PORTC1 000000  
                              ??_TMR2_ISR 0029                                ??_TMR4_ISR 0029  
                      __CFG_CCP3MX$PORTE0 000000                           _I2C1_Initialize 05A2  
                                 _CCP4CON 000F57                          ?_TMR4_Initialize 0029  
                     __size_of_KeyPadScan 0182                   __size_of_TMR4_Interrupt 000A  
                                 _OSCCON2 000FD2                                 _I2C1_Stop 04C0  
                                 _TBLPTRH 000FF7                                   _TBLPTRL 000FF6  
                                 _TBLPTRU 000FF8                                   i2u36_48 0694  
                                 _OSCTUNE 000F9B                                   i2u38_48 0672  
                                 _SPBRGH1 000FB0                                   _SSP1ADD 000FC8  
                                 _SSP1BUF 000FC9                          ?_TMR2_StartTimer 0029  
                         __CFG_PWRTEN$OFF 000000                    ?_I2C1_FunctionComplete 0029  
                                 __Hparam 0000                                   __Lparam 0000  
              ??_TMR2_SetInterruptHandler 003E                        _p_i2c1_trb_current 000E  
                                 __pcinit 0570                                   __ramtop 1000  
                                 __ptext0 053A                                   __ptext1 0620  
                                 __ptext2 05D0                                   __ptext3 072C  
                                 __ptext4 070E                                   __ptext5 0642  
                                 __ptext6 0732                                   __ptext7 0718  
                                 __ptext8 06A8                                   __ptext9 0472  
                   __end_of_KeyPadAcquire 053A                     _OSCILLATOR_Initialize 06F4  
                               _T2CONbits 000FBA                                 _T4CONbits 000F51  
                      _EUSART1_Initialize 06DE                  ??_PIN_MANAGER_Initialize 003C  
       __size_of_TMR4_SetInterruptHandler 000A                 ?_TMR4_SetInterruptHandler 003C  
                              ?_I2C1_Stop 0029                __size_of_SYSTEM_Initialize 0022  
                    I2C1_ISR@pi2c_buf_ptr 000A                          ?_TMR4_StartTimer 0029  
                    end_of_initialization 0594            ??_TMR4_DefaultInterruptHandler 0029  
                     ?_EUSART1_Initialize 0029                             __Lmediumconst 0000  
                  ??_I2C1_BusCollisionISR 0029                   __end_of_I2C1_Initialize 05D0  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                      ??_EUSART1_Initialize 003C  
                               _PORTAbits 000F80                         __size_of_I2C1_ISR 023E  
                     EUSART1_Write@txData 003C         I2C1_ISR@i2c_10bit_address_restart 0011  
                            ??_KeyPadScan 003E              __end_of_INTERRUPT_Initialize 073A  
    __end_of_TMR2_DefaultInterruptHandler 0740     __size_of_TMR2_DefaultInterruptHandler 0002  
            _TMR2_DefaultInterruptHandler 073E                   I2C1_MasterWrite@trBlock 001B  
                           __pidataCOMRAM 073A                  I2C1_Stop@completion_code 002B  
                       __size_of_TMR2_ISR 0022                         __size_of_TMR4_ISR 0022  
                     KeyPadScan@KeyPadKey 003E                    ?_OSCILLATOR_Initialize 0029  
                      __end_of_KeyPadScan 0472                            _TMR4_Interrupt 0722  
                     start_initialization 0570                               ??_I2C1_Stop 0029  
         __size_of_PIN_MANAGER_Initialize 004E                     __end_of_EUSART1_Write 070E  
                        ?_I2C1_Initialize 0029             ?_TMR2_DefaultInterruptHandler 0029  
                  __end_of_TMR4_Interrupt 072C                               __pbssCOMRAM 0001  
                __size_of_PWM4_Initialize 001E                  __size_of_TMR2_Initialize 0022  
                           _i2c1_tr_queue 0021                   KeyPadAcquire@KeyAcquire 0041  
                 ??_I2C1_FunctionComplete 0029                    _PIN_MANAGER_Initialize 0472  
                               __pintcode 0008          __end_of_TMR4_SetInterruptHandler 0718  
                                _I2C1_ISR 00B2                           ?_TMR4_Interrupt 0029  
            ??_INTERRUPT_InterruptManager 002E                          __CFG_PRICLKEN$ON 000000  
                                _BAUDCON1 000FB8                            __size_of_Delay 0028  
                __size_of_TMR4_Initialize 0028                      _INTERRUPT_Initialize 0736  
                  I2C1_MasterRead@trBlock 0015                                  _LATAbits 000F89  
                                _LATDbits 000F8C                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  _PIE5bits 000F7D  
                __size_of_TMR2_StartTimer 0004       __size_of_INTERRUPT_InterruptManager 00A6  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                _PIR5bits 000F7E                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                                  _SSP1CON1 000FC6  
                                _SSP1CON3 000FCB                                  _TMR2_ISR 0686  
                                _TMR4_ISR 0664                                  _SSP1STAT 000FC7  
          ??_TMR2_DefaultInterruptHandler 0029         __size_of_TMR2_SetInterruptHandler 000A  
               ?_TMR2_SetInterruptHandler 003C                               _INTCON2bits 000FF1  
                   ?_INTERRUPT_Initialize 0029                         ??_TMR2_Initialize 003E  
                       ??_PWM4_Initialize 003C                                _EECON1bits 000FA6  
                  __size_of_KeyPadAcquire 003C                  __size_of_TMR4_StartTimer 0006  
                                __Hrparam 0000             __size_of_I2C1_BusCollisionISR 0002  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                  I2C1_ISR@i2c_bytes_left 0012                         __CFG_P2BMX$PORTD2 000000  
                 ??_OSCILLATOR_Initialize 003C               __size_of_EUSART1_Initialize 0016  
                _TMR4_SetInterruptHandler 070E                       I2C1_ISR@i2c_address 0027  
                                __ptext10 06F4                                  __ptext11 0736  
                                __ptext20 073C                                  __ptext12 05A2  
                                __ptext21 0722                                  __ptext13 06DE  
                                __ptext22 0686                                  __ptext14 04FE  
                                __ptext23 073E                                  __ptext15 02F0  
                                __ptext24 00B2                                  __ptext16 05F8  
                                __ptext25 04C0                                  __ptext17 0702  
                                __ptext26 06C6                                  __ptext27 0740  
                                __ptext19 0664                                  __ptext28 0000  
                            _SSP1CON1bits 000FC6                              _SSP1CON2bits 000FC5  
                       ??_TMR4_Initialize 003E                             __size_of_main 0036  
                                int$flags 0048                         ??_TMR2_StartTimer 003C  
      __end_of_INTERRUPT_InterruptManager 00AE                _INTERRUPT_InterruptManager 0008  
                           _KeyPadAcquire 04FE                                _INTCONbits 000FF2  
                  ??_INTERRUPT_Initialize 003C                                  intlevel2 0000  
                 ?_PIN_MANAGER_Initialize 0029            __size_of_I2C1_FunctionComplete 0018  
                              _RCSTA1bits 000FAB             __end_of_I2C1_FunctionComplete 06DE  
                        ??_TMR4_Interrupt 0029                         ??_TMR4_StartTimer 003C  
                             _TMR4_Ticked 0008                  __size_of_I2C1_Initialize 002E  
                  __size_of_EUSART1_Write 000C                            ?_KeyPadAcquire 003F  
                       __CFG_T3CMX$PORTC0 000000            __end_of_PIN_MANAGER_Initialize 04C0  
                      __size_of_I2C1_Stop 003E                         __CFG_FOSC$INTIO67 000000  
                   _TMR2_InterruptHandler 0044  
