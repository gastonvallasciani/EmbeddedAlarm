

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sun Dec 10 18:09:18 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54  0000                     
    55                           ; Version 1.41
    56                           ; Generated 25/01/2017 GMT
    57                           ; 
    58                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F46K22 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90                           	psect	idataCOMRAM
    91  0018B0                     __pidataCOMRAM:
    92                           	opt stack 0
    93                           
    94                           ;initializer for _KeyPressed
    95  0018B0  0001               	dw	1
    96                           
    97                           	psect	nvCOMRAM
    98  000045                     __pnvCOMRAM:
    99                           	opt stack 0
   100  000045                     _TMR4_InterruptHandler:
   101                           	opt stack 0
   102  000045                     	ds	2
   103  000047                     _TMR2_InterruptHandler:
   104                           	opt stack 0
   105  000047                     	ds	2
   106  0000                     _CCPTMRS1bits	set	3912
   107  0000                     _CCPR4H	set	3929
   108  0000                     _CCPR4L	set	3928
   109  0000                     _CCP4CON	set	3927
   110  0000                     _T4CONbits	set	3921
   111  0000                     _TMR4	set	3923
   112  0000                     _PR4	set	3922
   113  0000                     _T4CON	set	3921
   114  0000                     _ANSELA	set	3896
   115  0000                     _ANSELE	set	3900
   116  0000                     _ANSELD	set	3899
   117  0000                     _ANSELB	set	3897
   118  0000                     _ANSELC	set	3898
   119  0000                     _PORTB	set	3969
   120  0000                     _PORTBbits	set	3969
   121  0000                     _PORTAbits	set	3968
   122  0000                     _LATAbits	set	3977
   123  0000                     _LATDbits	set	3980
   124  0000                     _LATBbits	set	3978
   125  0000                     _TXREG1	set	4013
   126  0000                     _RCREG1	set	4014
   127  0000                     _RCSTA1bits	set	4011
   128  0000                     _SPBRGH1	set	4016
   129  0000                     _SPBRG1	set	4015
   130  0000                     _TXSTA1	set	4012
   131  0000                     _RCSTA1	set	4011
   132  0000                     _BAUDCON1	set	4024
   133  0000                     _PIE2bits	set	4000
   134  0000                     _RCONbits	set	4048
   135  0000                     _PIE5bits	set	3965
   136  0000                     _PIR5bits	set	3966
   137  0000                     _T2CONbits	set	4026
   138  0000                     _TMR2	set	4028
   139  0000                     _PR2	set	4027
   140  0000                     _T2CON	set	4026
   141  0000                     _PIR2bits	set	4001
   142  0000                     _EEDATA	set	4008
   143  0000                     _EEADR	set	4009
   144  0000                     _EEADRH	set	4010
   145  0000                     _EECON2	set	4007
   146  0000                     _EECON1bits	set	4006
   147  0000                     _INTCONbits	set	4082
   148  0000                     _TABLAT	set	4085
   149  0000                     _TBLPTRL	set	4086
   150  0000                     _TBLPTRH	set	4087
   151  0000                     _TBLPTRU	set	4088
   152  0000                     _SSP1BUF	set	4041
   153  0000                     _SSP1CON2bits	set	4037
   154  0000                     _SSP1CON1bits	set	4038
   155  0000                     _PIE1bits	set	3997
   156  0000                     _PIR1bits	set	3998
   157  0000                     _SSP1ADD	set	4040
   158  0000                     _SSP1CON3	set	4043
   159  0000                     _SSP1CON1	set	4038
   160  0000                     _SSP1STAT	set	4039
   161  0000                     _INTCON2bits	set	4081
   162  0000                     _WPUB	set	3937
   163  0000                     _TRISD	set	3989
   164  0000                     _TRISC	set	3988
   165  0000                     _TRISB	set	3987
   166  0000                     _TRISA	set	3986
   167  0000                     _TRISE	set	3990
   168  0000                     _LATC	set	3979
   169  0000                     _LATB	set	3978
   170  0000                     _LATA	set	3977
   171  0000                     _LATD	set	3980
   172  0000                     _LATE	set	3981
   173  0000                     _OSCTUNE	set	3995
   174  0000                     _OSCCON2	set	4050
   175  0000                     _OSCCON	set	4051
   176                           
   177                           	psect	smallconst
   178  001000                     __psmallconst:
   179                           	opt stack 0
   180  001000  00                 	db	0
   181  001001                     STR_1:
   182  001001  70                 	db	112	;'p'
   183  001002  75                 	db	117	;'u'
   184  001003  74                 	db	116	;'t'
   185  001004  6F                 	db	111	;'o'
   186  001005  20                 	db	32
   187  001006  65                 	db	101	;'e'
   188  001007  6C                 	db	108	;'l'
   189  001008  20                 	db	32
   190  001009  71                 	db	113	;'q'
   191  00100A  20                 	db	32
   192  00100B  6C                 	db	108	;'l'
   193  00100C  65                 	db	101	;'e'
   194  00100D  65                 	db	101	;'e'
   195  00100E  00                 	db	0
   196                           
   197                           ; #config settings
   198  00100F  00                 	db	0	; dummy byte at the end
   199  0000                     
   200                           	psect	cinit
   201  001632                     __pcinit:
   202                           	opt stack 0
   203  001632                     start_initialization:
   204                           	opt stack 0
   205  001632                     __initialization:
   206                           	opt stack 0
   207                           
   208                           ; Initialize objects allocated to COMRAM (2 bytes)
   209                           ; load TBLPTR registers with __pidataCOMRAM
   210  001632  0EB0               	movlw	low __pidataCOMRAM
   211  001634  6EF6               	movwf	tblptrl,c
   212  001636  0E18               	movlw	high __pidataCOMRAM
   213  001638  6EF7               	movwf	tblptrh,c
   214  00163A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   215  00163C  6EF8               	movwf	tblptru,c
   216  00163E  0009               	tblrd		*+	;fetch initializer
   217  001640  CFF5 F049          	movff	tablat,__pdataCOMRAM
   218  001644  0009               	tblrd		*+	;fetch initializer
   219  001646  CFF5 F04A          	movff	tablat,__pdataCOMRAM+1
   220                           
   221                           ; Clear objects allocated to COMRAM (40 bytes)
   222  00164A  EE00  F001         	lfsr	0,__pbssCOMRAM
   223  00164E  0E28               	movlw	40
   224  001650                     clear_0:
   225  001650  6AEE               	clrf	postinc0,c
   226  001652  06E8               	decf	wreg,f,c
   227  001654  E1FD               	bnz	clear_0
   228  001656                     end_of_initialization:
   229                           	opt stack 0
   230  001656                     __end_of__initialization:
   231                           	opt stack 0
   232  001656  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   233  001658  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   234  00165A  0100               	movlb	0
   235  00165C  EF77  F00A         	goto	_main	;jump to C main() function
   236                           tblptru	equ	0xFF8
   237                           tblptrh	equ	0xFF7
   238                           tblptrl	equ	0xFF6
   239                           tablat	equ	0xFF5
   240                           postinc0	equ	0xFEE
   241                           wreg	equ	0xFE8
   242                           
   243                           	psect	bssCOMRAM
   244  000001                     __pbssCOMRAM:
   245                           	opt stack 0
   246  000001                     _i2c1_object:
   247                           	opt stack 0
   248  000001                     	ds	7
   249  000008                     _TMR4_Ticked:
   250                           	opt stack 0
   251  000008                     	ds	2
   252  00000A                     I2C1_ISR@pi2c_buf_ptr:
   253                           	opt stack 0
   254  00000A                     	ds	2
   255  00000C                     _p_i2c1_current:
   256                           	opt stack 0
   257  00000C                     	ds	2
   258  00000E                     _p_i2c1_trb_current:
   259                           	opt stack 0
   260  00000E                     	ds	2
   261  000010                     KeyPadScan@Push:
   262                           	opt stack 0
   263  000010                     	ds	1
   264  000011                     I2C1_ISR@i2c_10bit_address_restart:
   265                           	opt stack 0
   266  000011                     	ds	1
   267  000012                     I2C1_ISR@i2c_bytes_left:
   268                           	opt stack 0
   269  000012                     	ds	1
   270  000013                     _i2c1_trb_count:
   271                           	opt stack 0
   272  000013                     	ds	1
   273  000014                     _i2c1_state:
   274                           	opt stack 0
   275  000014                     	ds	1
   276  000015                     I2C1_MasterRead@trBlock:
   277                           	opt stack 0
   278  000015                     	ds	6
   279  00001B                     I2C1_MasterWrite@trBlock:
   280                           	opt stack 0
   281  00001B                     	ds	6
   282  000021                     _i2c1_tr_queue:
   283                           	opt stack 0
   284  000021                     	ds	6
   285  000027                     I2C1_ISR@i2c_address:
   286                           	opt stack 0
   287  000027                     	ds	2
   288                           tblptru	equ	0xFF8
   289                           tblptrh	equ	0xFF7
   290                           tblptrl	equ	0xFF6
   291                           tablat	equ	0xFF5
   292                           postinc0	equ	0xFEE
   293                           wreg	equ	0xFE8
   294                           
   295                           	psect	dataCOMRAM
   296  000049                     __pdataCOMRAM:
   297                           	opt stack 0
   298  000049                     _KeyPressed:
   299                           	opt stack 0
   300  000049                     	ds	2
   301                           tblptru	equ	0xFF8
   302                           tblptrh	equ	0xFF7
   303                           tblptrl	equ	0xFF6
   304                           tablat	equ	0xFF5
   305                           postinc0	equ	0xFEE
   306                           wreg	equ	0xFE8
   307                           
   308                           	psect	cstackBANK0
   309  000060                     __pcstackBANK0:
   310                           	opt stack 0
   311  000060                     ??_CursorGOTOxy:
   312                           
   313                           ; 1 bytes @ 0x0
   314  000060                     	ds	5
   315                           tblptru	equ	0xFF8
   316                           tblptrh	equ	0xFF7
   317                           tblptrl	equ	0xFF6
   318                           tablat	equ	0xFF5
   319                           postinc0	equ	0xFEE
   320                           wreg	equ	0xFE8
   321                           
   322                           	psect	cstackCOMRAM
   323  000029                     __pcstackCOMRAM:
   324                           	opt stack 0
   325  000029                     ??_I2C1_Stop:
   326  000029                     
   327                           ; 1 bytes @ 0x0
   328  000029                     	ds	2
   329  00002B                     I2C1_Stop@completion_code:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0x2
   333  00002B                     	ds	1
   334  00002C                     ??_I2C1_ISR:
   335                           
   336                           ; 1 bytes @ 0x3
   337  00002C                     	ds	2
   338  00002E                     ??_INTERRUPT_InterruptManager:
   339                           
   340                           ; 1 bytes @ 0x5
   341  00002E                     	ds	14
   342  00003C                     EUSART1_Write@txData:
   343                           	opt stack 0
   344  00003C                     TMR2_SetInterruptHandler@InterruptHandler:
   345                           	opt stack 0
   346  00003C                     TMR4_SetInterruptHandler@InterruptHandler:
   347                           	opt stack 0
   348  00003C                     Delay@DelayCount:
   349                           	opt stack 0
   350                           
   351                           ; 2 bytes @ 0x13
   352  00003C                     	ds	2
   353  00003E                     KeyPadScan@KeyPadKey:
   354                           	opt stack 0
   355  00003E                     lcd_cmd@x:
   356                           	opt stack 0
   357  00003E                     lcd_cmd_hf@x:
   358                           	opt stack 0
   359  00003E                     lcd_dwr@x:
   360                           	opt stack 0
   361                           
   362                           ; 1 bytes @ 0x15
   363  00003E                     	ds	1
   364  00003F                     ?_KeyPadAcquire:
   365                           	opt stack 0
   366  00003F                     lcd_msg@c:
   367                           	opt stack 0
   368  00003F                     CursorGOTOxy@x:
   369                           	opt stack 0
   370                           
   371                           ; 2 bytes @ 0x16
   372  00003F                     	ds	2
   373  000041                     KeyPadAcquire@KeyAcquire:
   374                           	opt stack 0
   375  000041                     CursorGOTOxy@y:
   376                           	opt stack 0
   377                           
   378                           ; 2 bytes @ 0x18
   379  000041                     	ds	2
   380  000043                     CursorGOTOxy@i:
   381                           	opt stack 0
   382                           
   383                           ; 2 bytes @ 0x1A
   384  000043                     	ds	2
   385  000045                     tblptru	equ	0xFF8
   386                           tblptrh	equ	0xFF7
   387                           tblptrl	equ	0xFF6
   388                           tablat	equ	0xFF5
   389                           postinc0	equ	0xFEE
   390                           wreg	equ	0xFE8
   391                           
   392                           ; 1 bytes @ 0x1C
   393 ;;
   394 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   395 ;;
   396 ;; *************** function _main *****************
   397 ;; Defined at:
   398 ;;		line 55 in file "main.c"
   399 ;; Parameters:    Size  Location     Type
   400 ;;		None
   401 ;; Auto vars:     Size  Location     Type
   402 ;;		None
   403 ;; Return value:  Size  Location     Type
   404 ;;                  1    wreg      void 
   405 ;; Registers used:
   406 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   407 ;; Tracked objects:
   408 ;;		On entry : 0/0
   409 ;;		On exit  : 0/0
   410 ;;		Unchanged: 0/0
   411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   416 ;;Total ram usage:        0 bytes
   417 ;; Hardware stack levels required when called:    7
   418 ;; This function calls:
   419 ;;		_CursorGOTOxy
   420 ;;		_Delay
   421 ;;		_DisplayONCursorONToggleON
   422 ;;		_EUSART1_Write
   423 ;;		_KeyPadAcquire
   424 ;;		_KeyPadInit
   425 ;;		_SYSTEM_Initialize
   426 ;;		_TMR4_SetInterruptHandler
   427 ;;		_lcd_init
   428 ;;		_lcd_msg
   429 ;; This function is called by:
   430 ;;		Startup code after reset
   431 ;; This function uses a non-reentrant model
   432 ;;
   433                           
   434                           	psect	text0
   435  0014EE                     __ptext0:
   436                           	opt stack 0
   437  0014EE                     _main:
   438                           	opt stack 24
   439                           
   440                           ;main.c: 58: SYSTEM_Initialize();
   441                           
   442                           ;incstack = 0
   443  0014EE  ECAA  F00B         	call	_SYSTEM_Initialize	;wreg free
   444                           
   445                           ;main.c: 77: (INTCONbits.GIE = 1);
   446  0014F2  8EF2               	bsf	intcon,7,c	;volatile
   447                           
   448                           ;main.c: 79: (INTCONbits.PEIE = 1);
   449  0014F4  8CF2               	bsf	intcon,6,c	;volatile
   450                           
   451                           ;main.c: 82: TMR4_SetInterruptHandler(TMR4_Interrupt);
   452  0014F6  0E98               	movlw	low _TMR4_Interrupt
   453  0014F8  6E3C               	movwf	TMR4_SetInterruptHandler@InterruptHandler,c
   454  0014FA  0E18               	movlw	high _TMR4_Interrupt
   455  0014FC  6E3D               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1,c
   456  0014FE  EC3D  F00C         	call	_TMR4_SetInterruptHandler	;wreg free
   457                           
   458                           ;main.c: 84: KeyPadInit();
   459  001502  EC47  F00C         	call	_KeyPadInit	;wreg free
   460                           
   461                           ;main.c: 86: do { LATBbits.LATB4 = 1; } while(0);
   462  001506  888A               	bsf	3978,4,c	;volatile
   463                           
   464                           ;main.c: 99: Delay(10*10*10);
   465  001508  0E03               	movlw	3
   466  00150A  6E3D               	movwf	Delay@DelayCount+1,c
   467  00150C  0EE8               	movlw	232
   468  00150E  6E3C               	movwf	Delay@DelayCount,c
   469  001510  EC72  F00B         	call	_Delay	;wreg free
   470                           
   471                           ;main.c: 100: do { LATDbits.LATD0 = 0; } while(0);
   472  001514  908C               	bcf	3980,0,c	;volatile
   473                           
   474                           ;main.c: 102: do { LATDbits.LATD2 = 1; } while(0);
   475  001516  848C               	bsf	3980,2,c	;volatile
   476                           
   477                           ;main.c: 103: EUSART1_Write(1);
   478  001518  0E01               	movlw	1
   479  00151A  EC37  F00C         	call	_EUSART1_Write
   480                           
   481                           ;main.c: 105: lcd_init();
   482  00151E  EC35  F00A         	call	_lcd_init	;wreg free
   483                           
   484                           ;main.c: 106: lcd_msg("puto el q lee");
   485  001522  0E01               	movlw	low STR_1
   486  001524  6E3F               	movwf	lcd_msg@c,c
   487  001526  0E10               	movlw	high STR_1
   488  001528  6E40               	movwf	lcd_msg@c+1,c
   489  00152A  EC30  F00B         	call	_lcd_msg	;wreg free
   490                           
   491                           ;main.c: 107: DisplayONCursorONToggleON();
   492  00152E  EC1D  F00C         	call	_DisplayONCursorONToggleON	;wreg free
   493                           
   494                           ;main.c: 108: Delay(10*10*10);
   495  001532  0E03               	movlw	3
   496  001534  6E3D               	movwf	Delay@DelayCount+1,c
   497  001536  0EE8               	movlw	232
   498  001538  6E3C               	movwf	Delay@DelayCount,c
   499  00153A  EC72  F00B         	call	_Delay	;wreg free
   500                           
   501                           ;main.c: 111: CursorGOTOxy(5,2);
   502  00153E  0E00               	movlw	0
   503  001540  6E40               	movwf	CursorGOTOxy@x+1,c
   504  001542  0E05               	movlw	5
   505  001544  6E3F               	movwf	CursorGOTOxy@x,c
   506  001546  0E00               	movlw	0
   507  001548  6E42               	movwf	CursorGOTOxy@y+1,c
   508  00154A  0E02               	movlw	2
   509  00154C  6E41               	movwf	CursorGOTOxy@y,c
   510  00154E  ECE8  F009         	call	_CursorGOTOxy	;wreg free
   511  001552                     l2365:
   512                           
   513                           ;main.c: 113: {
   514                           ;main.c: 114: EUSART1_Write(KeyPadAcquire());
   515  001552  ECFB  F00A         	call	_KeyPadAcquire	;wreg free
   516  001556  503F               	movf	?_KeyPadAcquire,w,c
   517  001558  EC37  F00C         	call	_EUSART1_Write
   518                           
   519                           ;main.c: 116: Delay(10*10*10);
   520  00155C  0E03               	movlw	3
   521  00155E  6E3D               	movwf	Delay@DelayCount+1,c
   522  001560  0EE8               	movlw	232
   523  001562  6E3C               	movwf	Delay@DelayCount,c
   524  001564  EC72  F00B         	call	_Delay	;wreg free
   525  001568  D7F4               	goto	l2365
   526  00156A                     __end_of_main:
   527                           	opt stack 0
   528                           tblptru	equ	0xFF8
   529                           tblptrh	equ	0xFF7
   530                           tblptrl	equ	0xFF6
   531                           tablat	equ	0xFF5
   532                           intcon	equ	0xFF2
   533                           postinc0	equ	0xFEE
   534                           wreg	equ	0xFE8
   535                           
   536 ;; *************** function _lcd_msg *****************
   537 ;; Defined at:
   538 ;;		line 56 in file "DriverLCD16x2.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;  c               2   22[COMRAM] PTR unsigned char 
   541 ;;		 -> STR_1(14), 
   542 ;; Auto vars:     Size  Location     Type
   543 ;;		None
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   553 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   556 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   557 ;;Total ram usage:        2 bytes
   558 ;; Hardware stack levels used:    1
   559 ;; Hardware stack levels required when called:    6
   560 ;; This function calls:
   561 ;;		_lcd_dwr
   562 ;; This function is called by:
   563 ;;		_main
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567                           	psect	text1
   568  001660                     __ptext1:
   569                           	opt stack 0
   570  001660                     _lcd_msg:
   571                           	opt stack 24
   572                           
   573                           ;DriverLCD16x2.c: 58: while (*c != 0)
   574                           
   575                           ;incstack = 0
   576  001660  D00B               	goto	l2243
   577  001662                     l2239:
   578                           
   579                           ;DriverLCD16x2.c: 59: {
   580                           ;DriverLCD16x2.c: 60: lcd_dwr(*c++);
   581  001662  C03F  FFF6         	movff	lcd_msg@c,tblptrl
   582  001666  C040  FFF7         	movff	lcd_msg@c+1,tblptrh
   583  00166A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   584  00166A  6AF8               	clrf	tblptru,c
   585  00166C                     	endif
   586  00166C                     	if	0	;tblptru may be non-zero
   587  00166C                     	endif
   588  00166C  0008               	tblrd		*
   589  00166E  50F5               	movf	tablat,w,c
   590  001670  EC86  F00B         	call	_lcd_dwr
   591  001674  4A3F               	infsnz	lcd_msg@c,f,c
   592  001676  2A40               	incf	lcd_msg@c+1,f,c
   593  001678                     l2243:
   594  001678  C03F  FFF6         	movff	lcd_msg@c,tblptrl
   595  00167C  C040  FFF7         	movff	lcd_msg@c+1,tblptrh
   596  001680                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   597  001680  6AF8               	clrf	tblptru,c
   598  001682                     	endif
   599  001682                     	if	0	;tblptru may be non-zero
   600  001682                     	endif
   601  001682  0008               	tblrd		*
   602  001684  50F5               	movf	tablat,w,c
   603  001686  0900               	iorlw	0
   604  001688  B4D8               	btfsc	status,2,c
   605  00168A  0012               	return	
   606  00168C  D7EA               	goto	l2239
   607  00168E                     __end_of_lcd_msg:
   608                           	opt stack 0
   609                           tblptru	equ	0xFF8
   610                           tblptrh	equ	0xFF7
   611                           tblptrl	equ	0xFF6
   612                           tablat	equ	0xFF5
   613                           intcon	equ	0xFF2
   614                           postinc0	equ	0xFEE
   615                           wreg	equ	0xFE8
   616                           status	equ	0xFD8
   617                           
   618 ;; *************** function _lcd_dwr *****************
   619 ;; Defined at:
   620 ;;		line 43 in file "DriverLCD16x2.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;  x               1    wreg     unsigned char 
   623 ;; Auto vars:     Size  Location     Type
   624 ;;  x               1   21[COMRAM] unsigned char 
   625 ;; Return value:  Size  Location     Type
   626 ;;                  1    wreg      void 
   627 ;; Registers used:
   628 ;;		wreg, status,2, status,0, cstack
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   635 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   637 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   638 ;;Total ram usage:        1 bytes
   639 ;; Hardware stack levels used:    1
   640 ;; Hardware stack levels required when called:    5
   641 ;; This function calls:
   642 ;;		_lcd_lat
   643 ;; This function is called by:
   644 ;;		_lcd_msg
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           	psect	text2
   649  00170C                     __ptext2:
   650                           	opt stack 0
   651  00170C                     _lcd_dwr:
   652                           	opt stack 24
   653                           
   654                           ;incstack = 0
   655                           ;lcd_dwr@x stored from wreg
   656  00170C  6E3E               	movwf	lcd_dwr@x,c
   657                           
   658                           ;DriverLCD16x2.c: 45: PORTBbits.RB6 = 1;
   659  00170E  8C81               	bsf	3969,6,c	;volatile
   660                           
   661                           ;DriverLCD16x2.c: 46: PORTB &= 0xF0;
   662  001710  0EF0               	movlw	240
   663  001712  1681               	andwf	3969,f,c	;volatile
   664                           
   665                           ;DriverLCD16x2.c: 47: PORTB |= ((x & 0xF0)>>4);
   666  001714  383E               	swapf	lcd_dwr@x,w,c
   667  001716  0B0F               	andlw	15
   668  001718  0B0F               	andlw	15
   669  00171A  1281               	iorwf	3969,f,c	;volatile
   670                           
   671                           ;DriverLCD16x2.c: 48: lcd_lat();
   672  00171C  EC27  F00C         	call	_lcd_lat	;wreg free
   673                           
   674                           ;DriverLCD16x2.c: 50: PORTB &= 0xF0;
   675  001720  0EF0               	movlw	240
   676  001722  1681               	andwf	3969,f,c	;volatile
   677                           
   678                           ;DriverLCD16x2.c: 51: PORTB |= ((x & 0x0F));
   679  001724  503E               	movf	lcd_dwr@x,w,c
   680  001726  0B0F               	andlw	15
   681  001728  1281               	iorwf	3969,f,c	;volatile
   682                           
   683                           ;DriverLCD16x2.c: 52: lcd_lat();
   684  00172A  EC27  F00C         	call	_lcd_lat	;wreg free
   685  00172E  0012               	return		;funcret
   686  001730                     __end_of_lcd_dwr:
   687                           	opt stack 0
   688                           tblptru	equ	0xFF8
   689                           tblptrh	equ	0xFF7
   690                           tblptrl	equ	0xFF6
   691                           tablat	equ	0xFF5
   692                           intcon	equ	0xFF2
   693                           postinc0	equ	0xFEE
   694                           wreg	equ	0xFE8
   695                           status	equ	0xFD8
   696                           
   697 ;; *************** function _lcd_init *****************
   698 ;; Defined at:
   699 ;;		line 64 in file "DriverLCD16x2.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;		None
   702 ;; Auto vars:     Size  Location     Type
   703 ;;		None
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      void 
   706 ;; Registers used:
   707 ;;		wreg, status,2, status,0, cstack
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   717 ;;Total ram usage:        0 bytes
   718 ;; Hardware stack levels used:    1
   719 ;; Hardware stack levels required when called:    6
   720 ;; This function calls:
   721 ;;		_Delay
   722 ;;		_lcd_cmd
   723 ;;		_lcd_cmd_hf
   724 ;; This function is called by:
   725 ;;		_main
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           	psect	text3
   730  00146A                     __ptext3:
   731                           	opt stack 0
   732  00146A                     _lcd_init:
   733                           	opt stack 24
   734                           
   735                           ;DriverLCD16x2.c: 66: PORTBbits.RB5 = 0;
   736                           
   737                           ;incstack = 0
   738  00146A  9A81               	bcf	3969,5,c	;volatile
   739                           
   740                           ;DriverLCD16x2.c: 67: PORTBbits.RB4 = 1;
   741  00146C  8881               	bsf	3969,4,c	;volatile
   742                           
   743                           ;DriverLCD16x2.c: 68: lcd_cmd_hf(0x30);
   744  00146E  0E30               	movlw	48
   745  001470  EC07  F00C         	call	_lcd_cmd_hf
   746                           
   747                           ;DriverLCD16x2.c: 69: Delay(10);
   748  001474  0E00               	movlw	0
   749  001476  6E3D               	movwf	Delay@DelayCount+1,c
   750  001478  0E0A               	movlw	10
   751  00147A  6E3C               	movwf	Delay@DelayCount,c
   752  00147C  EC72  F00B         	call	_Delay	;wreg free
   753                           
   754                           ;DriverLCD16x2.c: 70: lcd_cmd_hf(0x20);
   755  001480  0E20               	movlw	32
   756  001482  EC07  F00C         	call	_lcd_cmd_hf
   757                           
   758                           ;DriverLCD16x2.c: 71: Delay(1);
   759  001486  0E00               	movlw	0
   760  001488  6E3D               	movwf	Delay@DelayCount+1,c
   761  00148A  0E01               	movlw	1
   762  00148C  6E3C               	movwf	Delay@DelayCount,c
   763  00148E  EC72  F00B         	call	_Delay	;wreg free
   764                           
   765                           ;DriverLCD16x2.c: 72: lcd_cmd(0x28);
   766  001492  0E28               	movlw	40
   767  001494  EC98  F00B         	call	_lcd_cmd
   768                           
   769                           ;DriverLCD16x2.c: 73: Delay(1);
   770  001498  0E00               	movlw	0
   771  00149A  6E3D               	movwf	Delay@DelayCount+1,c
   772  00149C  0E01               	movlw	1
   773  00149E  6E3C               	movwf	Delay@DelayCount,c
   774  0014A0  EC72  F00B         	call	_Delay	;wreg free
   775                           
   776                           ;DriverLCD16x2.c: 74: lcd_cmd(0x0E);
   777  0014A4  0E0E               	movlw	14
   778  0014A6  EC98  F00B         	call	_lcd_cmd
   779                           
   780                           ;DriverLCD16x2.c: 75: Delay(1);
   781  0014AA  0E00               	movlw	0
   782  0014AC  6E3D               	movwf	Delay@DelayCount+1,c
   783  0014AE  0E01               	movlw	1
   784  0014B0  6E3C               	movwf	Delay@DelayCount,c
   785  0014B2  EC72  F00B         	call	_Delay	;wreg free
   786                           
   787                           ;DriverLCD16x2.c: 76: lcd_cmd(0x01);
   788  0014B6  0E01               	movlw	1
   789  0014B8  EC98  F00B         	call	_lcd_cmd
   790                           
   791                           ;DriverLCD16x2.c: 77: Delay(1);
   792  0014BC  0E00               	movlw	0
   793  0014BE  6E3D               	movwf	Delay@DelayCount+1,c
   794  0014C0  0E01               	movlw	1
   795  0014C2  6E3C               	movwf	Delay@DelayCount,c
   796  0014C4  EC72  F00B         	call	_Delay	;wreg free
   797                           
   798                           ;DriverLCD16x2.c: 78: lcd_cmd(0x06);
   799  0014C8  0E06               	movlw	6
   800  0014CA  EC98  F00B         	call	_lcd_cmd
   801                           
   802                           ;DriverLCD16x2.c: 79: Delay(1);
   803  0014CE  0E00               	movlw	0
   804  0014D0  6E3D               	movwf	Delay@DelayCount+1,c
   805  0014D2  0E01               	movlw	1
   806  0014D4  6E3C               	movwf	Delay@DelayCount,c
   807  0014D6  EC72  F00B         	call	_Delay	;wreg free
   808                           
   809                           ;DriverLCD16x2.c: 80: lcd_cmd(0x80);
   810  0014DA  0E80               	movlw	128
   811  0014DC  EC98  F00B         	call	_lcd_cmd
   812                           
   813                           ;DriverLCD16x2.c: 81: Delay(1);
   814  0014E0  0E00               	movlw	0
   815  0014E2  6E3D               	movwf	Delay@DelayCount+1,c
   816  0014E4  0E01               	movlw	1
   817  0014E6  6E3C               	movwf	Delay@DelayCount,c
   818  0014E8  EC72  F00B         	call	_Delay	;wreg free
   819  0014EC  0012               	return		;funcret
   820  0014EE                     __end_of_lcd_init:
   821                           	opt stack 0
   822                           tblptru	equ	0xFF8
   823                           tblptrh	equ	0xFF7
   824                           tblptrl	equ	0xFF6
   825                           tablat	equ	0xFF5
   826                           intcon	equ	0xFF2
   827                           postinc0	equ	0xFEE
   828                           wreg	equ	0xFE8
   829                           status	equ	0xFD8
   830                           
   831 ;; *************** function _lcd_cmd_hf *****************
   832 ;; Defined at:
   833 ;;		line 35 in file "DriverLCD16x2.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;  x               1    wreg     unsigned char 
   836 ;; Auto vars:     Size  Location     Type
   837 ;;  x               1   21[COMRAM] unsigned char 
   838 ;; Return value:  Size  Location     Type
   839 ;;                  1    wreg      void 
   840 ;; Registers used:
   841 ;;		wreg, status,2, status,0, cstack
   842 ;; Tracked objects:
   843 ;;		On entry : 0/0
   844 ;;		On exit  : 0/0
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   848 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   850 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   851 ;;Total ram usage:        1 bytes
   852 ;; Hardware stack levels used:    1
   853 ;; Hardware stack levels required when called:    5
   854 ;; This function calls:
   855 ;;		_lcd_lat
   856 ;; This function is called by:
   857 ;;		_lcd_init
   858 ;; This function uses a non-reentrant model
   859 ;;
   860                           
   861                           	psect	text4
   862  00180E                     __ptext4:
   863                           	opt stack 0
   864  00180E                     _lcd_cmd_hf:
   865                           	opt stack 24
   866                           
   867                           ;incstack = 0
   868                           ;lcd_cmd_hf@x stored from wreg
   869  00180E  6E3E               	movwf	lcd_cmd_hf@x,c
   870                           
   871                           ;DriverLCD16x2.c: 37: PORTBbits.RB6 = 0;
   872  001810  9C81               	bcf	3969,6,c	;volatile
   873                           
   874                           ;DriverLCD16x2.c: 38: PORTB &= 0xF0;
   875  001812  0EF0               	movlw	240
   876  001814  1681               	andwf	3969,f,c	;volatile
   877                           
   878                           ;DriverLCD16x2.c: 39: PORTB |= ((x & 0xF0)>>4);
   879  001816  383E               	swapf	lcd_cmd_hf@x,w,c
   880  001818  0B0F               	andlw	15
   881  00181A  0B0F               	andlw	15
   882  00181C  1281               	iorwf	3969,f,c	;volatile
   883                           
   884                           ;DriverLCD16x2.c: 40: lcd_lat();
   885  00181E  EC27  F00C         	call	_lcd_lat	;wreg free
   886  001822  0012               	return		;funcret
   887  001824                     __end_of_lcd_cmd_hf:
   888                           	opt stack 0
   889                           tblptru	equ	0xFF8
   890                           tblptrh	equ	0xFF7
   891                           tblptrl	equ	0xFF6
   892                           tablat	equ	0xFF5
   893                           intcon	equ	0xFF2
   894                           postinc0	equ	0xFEE
   895                           wreg	equ	0xFE8
   896                           status	equ	0xFD8
   897                           
   898 ;; *************** function _SYSTEM_Initialize *****************
   899 ;; Defined at:
   900 ;;		line 111 in file "mcc_generated_files/mcc.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;		None
   903 ;; Auto vars:     Size  Location     Type
   904 ;;		None
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		wreg, status,2, status,0, cstack
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   918 ;;Total ram usage:        0 bytes
   919 ;; Hardware stack levels used:    1
   920 ;; Hardware stack levels required when called:    5
   921 ;; This function calls:
   922 ;;		_EUSART1_Initialize
   923 ;;		_I2C1_Initialize
   924 ;;		_INTERRUPT_Initialize
   925 ;;		_OSCILLATOR_Initialize
   926 ;;		_PIN_MANAGER_Initialize
   927 ;;		_PWM4_Initialize
   928 ;;		_TMR2_Initialize
   929 ;;		_TMR4_Initialize
   930 ;; This function is called by:
   931 ;;		_main
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           	psect	text5
   936  001754                     __ptext5:
   937                           	opt stack 0
   938  001754                     _SYSTEM_Initialize:
   939                           	opt stack 25
   940                           
   941                           ;mcc.c: 114: INTERRUPT_Initialize();
   942                           
   943                           ;incstack = 0
   944  001754  EC56  F00C         	call	_INTERRUPT_Initialize	;wreg free
   945                           
   946                           ;mcc.c: 115: PIN_MANAGER_Initialize();
   947  001758  ECB5  F00A         	call	_PIN_MANAGER_Initialize	;wreg free
   948                           
   949                           ;mcc.c: 116: OSCILLATOR_Initialize();
   950  00175C  EC30  F00C         	call	_OSCILLATOR_Initialize	;wreg free
   951                           
   952                           ;mcc.c: 117: I2C1_Initialize();
   953  001760  EC47  F00B         	call	_I2C1_Initialize	;wreg free
   954                           
   955                           ;mcc.c: 118: TMR4_Initialize();
   956  001764  EC5E  F00B         	call	_TMR4_Initialize	;wreg free
   957                           
   958                           ;mcc.c: 119: PWM4_Initialize();
   959  001768  ECEC  F00B         	call	_PWM4_Initialize	;wreg free
   960                           
   961                           ;mcc.c: 120: TMR2_Initialize();
   962  00176C  ECBB  F00B         	call	_TMR2_Initialize	;wreg free
   963                           
   964                           ;mcc.c: 121: EUSART1_Initialize();
   965  001770  EC12  F00C         	call	_EUSART1_Initialize	;wreg free
   966  001774  0012               	return		;funcret
   967  001776                     __end_of_SYSTEM_Initialize:
   968                           	opt stack 0
   969                           tblptru	equ	0xFF8
   970                           tblptrh	equ	0xFF7
   971                           tblptrl	equ	0xFF6
   972                           tablat	equ	0xFF5
   973                           intcon	equ	0xFF2
   974                           postinc0	equ	0xFEE
   975                           wreg	equ	0xFE8
   976                           status	equ	0xFD8
   977                           
   978 ;; *************** function _TMR4_Initialize *****************
   979 ;; Defined at:
   980 ;;		line 63 in file "mcc_generated_files/tmr4.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;		None
   983 ;; Auto vars:     Size  Location     Type
   984 ;;		None
   985 ;; Return value:  Size  Location     Type
   986 ;;                  1    wreg      void 
   987 ;; Registers used:
   988 ;;		wreg, status,2, status,0, cstack
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   998 ;;Total ram usage:        0 bytes
   999 ;; Hardware stack levels used:    1
  1000 ;; Hardware stack levels required when called:    4
  1001 ;; This function calls:
  1002 ;;		_TMR4_SetInterruptHandler
  1003 ;;		_TMR4_StartTimer
  1004 ;; This function is called by:
  1005 ;;		_SYSTEM_Initialize
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009                           	psect	text6
  1010  0016BC                     __ptext6:
  1011                           	opt stack 0
  1012  0016BC                     _TMR4_Initialize:
  1013                           	opt stack 25
  1014                           
  1015                           ;tmr4.c: 68: T4CON = 0x02;
  1016                           
  1017                           ;incstack = 0
  1018  0016BC  0E02               	movlw	2
  1019  0016BE  010F               	movlb	15	; () banked
  1020  0016C0  6F51               	movwf	81,b	;volatile
  1021                           
  1022                           ;tmr4.c: 71: PR4 = 0x7C;
  1023  0016C2  0E7C               	movlw	124
  1024  0016C4  010F               	movlb	15	; () banked
  1025  0016C6  6F52               	movwf	82,b	;volatile
  1026                           
  1027                           ;tmr4.c: 74: TMR4 = 0x00;
  1028  0016C8  0E00               	movlw	0
  1029  0016CA  010F               	movlb	15	; () banked
  1030  0016CC  6F53               	movwf	83,b	;volatile
  1031                           
  1032                           ; BSR set to: 15
  1033                           ;tmr4.c: 77: PIR5bits.TMR4IF = 0;
  1034  0016CE  907E               	bcf	3966,0,c	;volatile
  1035                           
  1036                           ; BSR set to: 15
  1037                           ;tmr4.c: 80: PIE5bits.TMR4IE = 1;
  1038  0016D0  807D               	bsf	3965,0,c	;volatile
  1039                           
  1040                           ; BSR set to: 15
  1041                           ;tmr4.c: 83: TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandler);
  1042  0016D2  0EB2               	movlw	low _TMR4_DefaultInterruptHandler
  1043  0016D4  6E3C               	movwf	TMR4_SetInterruptHandler@InterruptHandler,c
  1044  0016D6  0E18               	movlw	high _TMR4_DefaultInterruptHandler
  1045  0016D8  6E3D               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1,c
  1046  0016DA  EC3D  F00C         	call	_TMR4_SetInterruptHandler	;wreg free
  1047                           
  1048                           ;tmr4.c: 86: TMR4_StartTimer();
  1049  0016DE  EC51  F00C         	call	_TMR4_StartTimer	;wreg free
  1050  0016E2  0012               	return		;funcret
  1051  0016E4                     __end_of_TMR4_Initialize:
  1052                           	opt stack 0
  1053                           tblptru	equ	0xFF8
  1054                           tblptrh	equ	0xFF7
  1055                           tblptrl	equ	0xFF6
  1056                           tablat	equ	0xFF5
  1057                           intcon	equ	0xFF2
  1058                           postinc0	equ	0xFEE
  1059                           wreg	equ	0xFE8
  1060                           status	equ	0xFD8
  1061                           
  1062 ;; *************** function _TMR4_StartTimer *****************
  1063 ;; Defined at:
  1064 ;;		line 89 in file "mcc_generated_files/tmr4.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;		None
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;		None
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		None
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1082 ;;Total ram usage:        0 bytes
  1083 ;; Hardware stack levels used:    1
  1084 ;; Hardware stack levels required when called:    3
  1085 ;; This function calls:
  1086 ;;		Nothing
  1087 ;; This function is called by:
  1088 ;;		_TMR4_Initialize
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092                           	psect	text7
  1093  0018A2                     __ptext7:
  1094                           	opt stack 0
  1095  0018A2                     _TMR4_StartTimer:
  1096                           	opt stack 25
  1097                           
  1098                           ;tmr4.c: 92: T4CONbits.TMR4ON = 1;
  1099                           
  1100                           ;incstack = 0
  1101  0018A2  010F               	movlb	15	; () banked
  1102  0018A4  8551               	bsf	81,2,b	;volatile
  1103                           
  1104                           ; BSR set to: 15
  1105  0018A6  0012               	return		;funcret
  1106  0018A8                     __end_of_TMR4_StartTimer:
  1107                           	opt stack 0
  1108                           tblptru	equ	0xFF8
  1109                           tblptrh	equ	0xFF7
  1110                           tblptrl	equ	0xFF6
  1111                           tablat	equ	0xFF5
  1112                           intcon	equ	0xFF2
  1113                           postinc0	equ	0xFEE
  1114                           wreg	equ	0xFE8
  1115                           status	equ	0xFD8
  1116                           
  1117 ;; *************** function _TMR4_SetInterruptHandler *****************
  1118 ;; Defined at:
  1119 ;;		line 134 in file "mcc_generated_files/tmr4.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;  InterruptHan    2   19[COMRAM] PTR void 
  1122 ;;		 -> TMR4_Interrupt(1), TMR4_DefaultInterruptHandler(1), 
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;		None
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      void 
  1127 ;; Registers used:
  1128 ;;		wreg, status,2, status,0
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1134 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1137 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1138 ;;Total ram usage:        2 bytes
  1139 ;; Hardware stack levels used:    1
  1140 ;; Hardware stack levels required when called:    3
  1141 ;; This function calls:
  1142 ;;		Nothing
  1143 ;; This function is called by:
  1144 ;;		_TMR4_Initialize
  1145 ;;		_main
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           	psect	text8
  1150  00187A                     __ptext8:
  1151                           	opt stack 0
  1152  00187A                     _TMR4_SetInterruptHandler:
  1153                           	opt stack 27
  1154                           
  1155                           ;tmr4.c: 135: TMR4_InterruptHandler = InterruptHandler;
  1156                           
  1157                           ; BSR set to: 15
  1158                           ;incstack = 0
  1159  00187A  C03C  F045         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
  1160  00187E  C03D  F046         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
  1161  001882  0012               	return		;funcret
  1162  001884                     __end_of_TMR4_SetInterruptHandler:
  1163                           	opt stack 0
  1164                           tblptru	equ	0xFF8
  1165                           tblptrh	equ	0xFF7
  1166                           tblptrl	equ	0xFF6
  1167                           tablat	equ	0xFF5
  1168                           intcon	equ	0xFF2
  1169                           postinc0	equ	0xFEE
  1170                           wreg	equ	0xFE8
  1171                           status	equ	0xFD8
  1172                           
  1173 ;; *************** function _TMR2_Initialize *****************
  1174 ;; Defined at:
  1175 ;;		line 63 in file "mcc_generated_files/tmr2.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;		None
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;		None
  1180 ;; Return value:  Size  Location     Type
  1181 ;;                  1    wreg      void 
  1182 ;; Registers used:
  1183 ;;		wreg, status,2, status,0, cstack
  1184 ;; Tracked objects:
  1185 ;;		On entry : 0/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1193 ;;Total ram usage:        0 bytes
  1194 ;; Hardware stack levels used:    1
  1195 ;; Hardware stack levels required when called:    4
  1196 ;; This function calls:
  1197 ;;		_TMR2_SetInterruptHandler
  1198 ;;		_TMR2_StartTimer
  1199 ;; This function is called by:
  1200 ;;		_SYSTEM_Initialize
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           	psect	text9
  1205  001776                     __ptext9:
  1206                           	opt stack 0
  1207  001776                     _TMR2_Initialize:
  1208                           	opt stack 25
  1209                           
  1210                           ;tmr2.c: 68: T2CON = 0x02;
  1211                           
  1212                           ;incstack = 0
  1213  001776  0E02               	movlw	2
  1214  001778  6EBA               	movwf	4026,c	;volatile
  1215                           
  1216                           ;tmr2.c: 71: PR2 = 0x0C;
  1217  00177A  0E0C               	movlw	12
  1218  00177C  6EBB               	movwf	4027,c	;volatile
  1219                           
  1220                           ;tmr2.c: 74: TMR2 = 0x00;
  1221  00177E  0E00               	movlw	0
  1222  001780  6EBC               	movwf	4028,c	;volatile
  1223                           
  1224                           ;tmr2.c: 77: PIR1bits.TMR2IF = 0;
  1225  001782  929E               	bcf	3998,1,c	;volatile
  1226                           
  1227                           ;tmr2.c: 80: PIE1bits.TMR2IE = 1;
  1228  001784  829D               	bsf	3997,1,c	;volatile
  1229                           
  1230                           ;tmr2.c: 83: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  1231  001786  0EB4               	movlw	low _TMR2_DefaultInterruptHandler
  1232  001788  6E3C               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  1233  00178A  0E18               	movlw	high _TMR2_DefaultInterruptHandler
  1234  00178C  6E3D               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  1235  00178E  EC42  F00C         	call	_TMR2_SetInterruptHandler	;wreg free
  1236                           
  1237                           ;tmr2.c: 86: TMR2_StartTimer();
  1238  001792  EC54  F00C         	call	_TMR2_StartTimer	;wreg free
  1239  001796  0012               	return		;funcret
  1240  001798                     __end_of_TMR2_Initialize:
  1241                           	opt stack 0
  1242                           tblptru	equ	0xFF8
  1243                           tblptrh	equ	0xFF7
  1244                           tblptrl	equ	0xFF6
  1245                           tablat	equ	0xFF5
  1246                           intcon	equ	0xFF2
  1247                           postinc0	equ	0xFEE
  1248                           wreg	equ	0xFE8
  1249                           status	equ	0xFD8
  1250                           
  1251 ;; *************** function _TMR2_StartTimer *****************
  1252 ;; Defined at:
  1253 ;;		line 89 in file "mcc_generated_files/tmr2.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;		None
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;		None
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  1    wreg      void 
  1260 ;; Registers used:
  1261 ;;		None
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1271 ;;Total ram usage:        0 bytes
  1272 ;; Hardware stack levels used:    1
  1273 ;; Hardware stack levels required when called:    3
  1274 ;; This function calls:
  1275 ;;		Nothing
  1276 ;; This function is called by:
  1277 ;;		_TMR2_Initialize
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281                           	psect	text10
  1282  0018A8                     __ptext10:
  1283                           	opt stack 0
  1284  0018A8                     _TMR2_StartTimer:
  1285                           	opt stack 25
  1286                           
  1287                           ;tmr2.c: 92: T2CONbits.TMR2ON = 1;
  1288                           
  1289                           ;incstack = 0
  1290  0018A8  84BA               	bsf	4026,2,c	;volatile
  1291  0018AA  0012               	return		;funcret
  1292  0018AC                     __end_of_TMR2_StartTimer:
  1293                           	opt stack 0
  1294                           tblptru	equ	0xFF8
  1295                           tblptrh	equ	0xFF7
  1296                           tblptrl	equ	0xFF6
  1297                           tablat	equ	0xFF5
  1298                           intcon	equ	0xFF2
  1299                           postinc0	equ	0xFEE
  1300                           wreg	equ	0xFE8
  1301                           status	equ	0xFD8
  1302                           
  1303 ;; *************** function _TMR2_SetInterruptHandler *****************
  1304 ;; Defined at:
  1305 ;;		line 134 in file "mcc_generated_files/tmr2.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;  InterruptHan    2   19[COMRAM] PTR void 
  1308 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  1309 ;; Auto vars:     Size  Location     Type
  1310 ;;		None
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  1    wreg      void 
  1313 ;; Registers used:
  1314 ;;		wreg, status,2, status,0
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1320 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1323 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1324 ;;Total ram usage:        2 bytes
  1325 ;; Hardware stack levels used:    1
  1326 ;; Hardware stack levels required when called:    3
  1327 ;; This function calls:
  1328 ;;		Nothing
  1329 ;; This function is called by:
  1330 ;;		_TMR2_Initialize
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334                           	psect	text11
  1335  001884                     __ptext11:
  1336                           	opt stack 0
  1337  001884                     _TMR2_SetInterruptHandler:
  1338                           	opt stack 25
  1339                           
  1340                           ;tmr2.c: 135: TMR2_InterruptHandler = InterruptHandler;
  1341                           
  1342                           ;incstack = 0
  1343  001884  C03C  F047         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  1344  001888  C03D  F048         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  1345  00188C  0012               	return		;funcret
  1346  00188E                     __end_of_TMR2_SetInterruptHandler:
  1347                           	opt stack 0
  1348                           tblptru	equ	0xFF8
  1349                           tblptrh	equ	0xFF7
  1350                           tblptrl	equ	0xFF6
  1351                           tablat	equ	0xFF5
  1352                           intcon	equ	0xFF2
  1353                           postinc0	equ	0xFEE
  1354                           wreg	equ	0xFE8
  1355                           status	equ	0xFD8
  1356                           
  1357 ;; *************** function _PWM4_Initialize *****************
  1358 ;; Defined at:
  1359 ;;		line 63 in file "mcc_generated_files/pwm4.c"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;		None
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;		None
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  1    wreg      void 
  1366 ;; Registers used:
  1367 ;;		wreg, status,2
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1377 ;;Total ram usage:        0 bytes
  1378 ;; Hardware stack levels used:    1
  1379 ;; Hardware stack levels required when called:    3
  1380 ;; This function calls:
  1381 ;;		Nothing
  1382 ;; This function is called by:
  1383 ;;		_SYSTEM_Initialize
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           	psect	text12
  1388  0017D8                     __ptext12:
  1389                           	opt stack 0
  1390  0017D8                     _PWM4_Initialize:
  1391                           	opt stack 26
  1392                           
  1393                           ;pwm4.c: 68: CCP4CON = 0x0C;
  1394                           
  1395                           ;incstack = 0
  1396  0017D8  0E0C               	movlw	12
  1397  0017DA  010F               	movlb	15	; () banked
  1398  0017DC  6F57               	movwf	87,b	;volatile
  1399                           
  1400                           ;pwm4.c: 71: CCPR4L = 0x00;
  1401  0017DE  0E00               	movlw	0
  1402  0017E0  010F               	movlb	15	; () banked
  1403  0017E2  6F58               	movwf	88,b	;volatile
  1404                           
  1405                           ;pwm4.c: 74: CCPR4H = 0x00;
  1406  0017E4  0E00               	movlw	0
  1407  0017E6  010F               	movlb	15	; () banked
  1408  0017E8  6F59               	movwf	89,b	;volatile
  1409                           
  1410                           ;pwm4.c: 77: CCPTMRS1bits.C4TSEL = 0x1;
  1411  0017EA  010F               	movlb	15	; () banked
  1412  0017EC  5148               	movf	72,w,b	;volatile
  1413  0017EE  0BFC               	andlw	-4
  1414  0017F0  0901               	iorlw	1
  1415  0017F2  6F48               	movwf	72,b	;volatile
  1416                           
  1417                           ; BSR set to: 15
  1418  0017F4  0012               	return		;funcret
  1419  0017F6                     __end_of_PWM4_Initialize:
  1420                           	opt stack 0
  1421                           tblptru	equ	0xFF8
  1422                           tblptrh	equ	0xFF7
  1423                           tblptrl	equ	0xFF6
  1424                           tablat	equ	0xFF5
  1425                           intcon	equ	0xFF2
  1426                           postinc0	equ	0xFEE
  1427                           wreg	equ	0xFE8
  1428                           status	equ	0xFD8
  1429                           
  1430 ;; *************** function _PIN_MANAGER_Initialize *****************
  1431 ;; Defined at:
  1432 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;		None
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;		None
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      void 
  1439 ;; Registers used:
  1440 ;;		wreg, status,2
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1450 ;;Total ram usage:        0 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; Hardware stack levels required when called:    3
  1453 ;; This function calls:
  1454 ;;		Nothing
  1455 ;; This function is called by:
  1456 ;;		_SYSTEM_Initialize
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text13
  1461  00156A                     __ptext13:
  1462                           	opt stack 0
  1463  00156A                     _PIN_MANAGER_Initialize:
  1464                           	opt stack 26
  1465                           
  1466                           ;pin_manager.c: 56: LATE = 0x00;
  1467                           
  1468                           ; BSR set to: 15
  1469                           ;incstack = 0
  1470  00156A  0E00               	movlw	0
  1471  00156C  6E8D               	movwf	3981,c	;volatile
  1472                           
  1473                           ;pin_manager.c: 57: LATD = 0x00;
  1474  00156E  0E00               	movlw	0
  1475  001570  6E8C               	movwf	3980,c	;volatile
  1476                           
  1477                           ;pin_manager.c: 58: LATA = 0x00;
  1478  001572  0E00               	movlw	0
  1479  001574  6E89               	movwf	3977,c	;volatile
  1480                           
  1481                           ;pin_manager.c: 59: LATB = 0x00;
  1482  001576  0E00               	movlw	0
  1483  001578  6E8A               	movwf	3978,c	;volatile
  1484                           
  1485                           ;pin_manager.c: 60: LATC = 0x00;
  1486  00157A  0E00               	movlw	0
  1487  00157C  6E8B               	movwf	3979,c	;volatile
  1488                           
  1489                           ;pin_manager.c: 65: TRISE = 0x07;
  1490  00157E  0E07               	movlw	7
  1491  001580  6E96               	movwf	3990,c	;volatile
  1492                           
  1493                           ;pin_manager.c: 66: TRISA = 0xF0;
  1494  001582  0EF0               	movlw	240
  1495  001584  6E92               	movwf	3986,c	;volatile
  1496                           
  1497                           ;pin_manager.c: 67: TRISB = 0x00;
  1498  001586  0E00               	movlw	0
  1499  001588  6E93               	movwf	3987,c	;volatile
  1500                           
  1501                           ;pin_manager.c: 68: TRISC = 0x9B;
  1502  00158A  0E9B               	movlw	155
  1503  00158C  6E94               	movwf	3988,c	;volatile
  1504                           
  1505                           ;pin_manager.c: 69: TRISD = 0x08;
  1506  00158E  0E08               	movlw	8
  1507  001590  6E95               	movwf	3989,c	;volatile
  1508                           
  1509                           ;pin_manager.c: 74: ANSELC = 0x24;
  1510  001592  0E24               	movlw	36
  1511  001594  010F               	movlb	15	; () banked
  1512  001596  6F3A               	movwf	58,b	;volatile
  1513                           
  1514                           ;pin_manager.c: 75: ANSELB = 0x00;
  1515  001598  0E00               	movlw	0
  1516  00159A  010F               	movlb	15	; () banked
  1517  00159C  6F39               	movwf	57,b	;volatile
  1518                           
  1519                           ;pin_manager.c: 76: ANSELD = 0xFC;
  1520  00159E  0EFC               	movlw	252
  1521  0015A0  010F               	movlb	15	; () banked
  1522  0015A2  6F3B               	movwf	59,b	;volatile
  1523                           
  1524                           ;pin_manager.c: 77: ANSELE = 0x07;
  1525  0015A4  0E07               	movlw	7
  1526  0015A6  010F               	movlb	15	; () banked
  1527  0015A8  6F3C               	movwf	60,b	;volatile
  1528                           
  1529                           ;pin_manager.c: 78: ANSELA = 0x00;
  1530  0015AA  0E00               	movlw	0
  1531  0015AC  010F               	movlb	15	; () banked
  1532  0015AE  6F38               	movwf	56,b	;volatile
  1533                           
  1534                           ;pin_manager.c: 83: WPUB = 0x00;
  1535  0015B0  0E00               	movlw	0
  1536  0015B2  6E61               	movwf	3937,c	;volatile
  1537                           
  1538                           ; BSR set to: 15
  1539                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 0;
  1540  0015B4  9EF1               	bcf	intcon2,7,c	;volatile
  1541                           
  1542                           ; BSR set to: 15
  1543  0015B6  0012               	return		;funcret
  1544  0015B8                     __end_of_PIN_MANAGER_Initialize:
  1545                           	opt stack 0
  1546                           tblptru	equ	0xFF8
  1547                           tblptrh	equ	0xFF7
  1548                           tblptrl	equ	0xFF6
  1549                           tablat	equ	0xFF5
  1550                           intcon	equ	0xFF2
  1551                           intcon2	equ	0xFF1
  1552                           postinc0	equ	0xFEE
  1553                           wreg	equ	0xFE8
  1554                           status	equ	0xFD8
  1555                           
  1556 ;; *************** function _OSCILLATOR_Initialize *****************
  1557 ;; Defined at:
  1558 ;;		line 124 in file "mcc_generated_files/mcc.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;		None
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;		None
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  1    wreg      void 
  1565 ;; Registers used:
  1566 ;;		wreg, status,2
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1576 ;;Total ram usage:        0 bytes
  1577 ;; Hardware stack levels used:    1
  1578 ;; Hardware stack levels required when called:    3
  1579 ;; This function calls:
  1580 ;;		Nothing
  1581 ;; This function is called by:
  1582 ;;		_SYSTEM_Initialize
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           	psect	text14
  1587  001860                     __ptext14:
  1588                           	opt stack 0
  1589  001860                     _OSCILLATOR_Initialize:
  1590                           	opt stack 26
  1591                           
  1592                           ;mcc.c: 127: OSCCON = 0x60;
  1593                           
  1594                           ; BSR set to: 15
  1595                           ;incstack = 0
  1596  001860  0E60               	movlw	96
  1597  001862  6ED3               	movwf	4051,c	;volatile
  1598                           
  1599                           ;mcc.c: 129: OSCCON2 = 0x04;
  1600  001864  0E04               	movlw	4
  1601  001866  6ED2               	movwf	4050,c	;volatile
  1602                           
  1603                           ;mcc.c: 131: OSCTUNE = 0x00;
  1604  001868  0E00               	movlw	0
  1605  00186A  6E9B               	movwf	3995,c	;volatile
  1606  00186C  0012               	return		;funcret
  1607  00186E                     __end_of_OSCILLATOR_Initialize:
  1608                           	opt stack 0
  1609                           tblptru	equ	0xFF8
  1610                           tblptrh	equ	0xFF7
  1611                           tblptrl	equ	0xFF6
  1612                           tablat	equ	0xFF5
  1613                           intcon	equ	0xFF2
  1614                           intcon2	equ	0xFF1
  1615                           postinc0	equ	0xFEE
  1616                           wreg	equ	0xFE8
  1617                           status	equ	0xFD8
  1618                           
  1619 ;; *************** function _INTERRUPT_Initialize *****************
  1620 ;; Defined at:
  1621 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;		None
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;		None
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  1    wreg      void 
  1628 ;; Registers used:
  1629 ;;		None
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1639 ;;Total ram usage:        0 bytes
  1640 ;; Hardware stack levels used:    1
  1641 ;; Hardware stack levels required when called:    3
  1642 ;; This function calls:
  1643 ;;		Nothing
  1644 ;; This function is called by:
  1645 ;;		_SYSTEM_Initialize
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           	psect	text15
  1650  0018AC                     __ptext15:
  1651                           	opt stack 0
  1652  0018AC                     _INTERRUPT_Initialize:
  1653                           	opt stack 26
  1654                           
  1655                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1656                           
  1657                           ;incstack = 0
  1658  0018AC  9ED0               	bcf	4048,7,c	;volatile
  1659  0018AE  0012               	return		;funcret
  1660  0018B0                     __end_of_INTERRUPT_Initialize:
  1661                           	opt stack 0
  1662                           tblptru	equ	0xFF8
  1663                           tblptrh	equ	0xFF7
  1664                           tblptrl	equ	0xFF6
  1665                           tablat	equ	0xFF5
  1666                           intcon	equ	0xFF2
  1667                           intcon2	equ	0xFF1
  1668                           postinc0	equ	0xFEE
  1669                           wreg	equ	0xFE8
  1670                           status	equ	0xFD8
  1671                           
  1672 ;; *************** function _I2C1_Initialize *****************
  1673 ;; Defined at:
  1674 ;;		line 198 in file "mcc_generated_files/i2c1.c"
  1675 ;; Parameters:    Size  Location     Type
  1676 ;;		None
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;		None
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  1    wreg      void 
  1681 ;; Registers used:
  1682 ;;		wreg, status,2, status,0
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1692 ;;Total ram usage:        0 bytes
  1693 ;; Hardware stack levels used:    1
  1694 ;; Hardware stack levels required when called:    3
  1695 ;; This function calls:
  1696 ;;		Nothing
  1697 ;; This function is called by:
  1698 ;;		_SYSTEM_Initialize
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           	psect	text16
  1703  00168E                     __ptext16:
  1704                           	opt stack 0
  1705  00168E                     _I2C1_Initialize:
  1706                           	opt stack 26
  1707                           
  1708                           ;i2c1.c: 200: i2c1_object.pTrHead = i2c1_tr_queue;
  1709                           
  1710                           ;incstack = 0
  1711  00168E  0E21               	movlw	low _i2c1_tr_queue
  1712  001690  6E03               	movwf	_i2c1_object+2,c
  1713  001692  0E00               	movlw	high _i2c1_tr_queue
  1714  001694  6E04               	movwf	_i2c1_object+3,c
  1715                           
  1716                           ;i2c1.c: 201: i2c1_object.pTrTail = i2c1_tr_queue;
  1717  001696  0E21               	movlw	low _i2c1_tr_queue
  1718  001698  6E01               	movwf	_i2c1_object,c
  1719  00169A  0E00               	movlw	high _i2c1_tr_queue
  1720  00169C  6E02               	movwf	_i2c1_object+1,c
  1721                           
  1722                           ;i2c1.c: 202: i2c1_object.trStatus.s.empty = 1;
  1723  00169E  8205               	bsf	_i2c1_object+4,1,c
  1724                           
  1725                           ;i2c1.c: 203: i2c1_object.trStatus.s.full = 0;
  1726  0016A0  9005               	bcf	_i2c1_object+4,0,c
  1727                           
  1728                           ;i2c1.c: 205: i2c1_object.i2cErrors = 0;
  1729  0016A2  0E00               	movlw	0
  1730  0016A4  6E07               	movwf	_i2c1_object+6,c
  1731                           
  1732                           ;i2c1.c: 208: SSP1STAT = 0x00;
  1733  0016A6  0E00               	movlw	0
  1734  0016A8  6EC7               	movwf	4039,c	;volatile
  1735                           
  1736                           ;i2c1.c: 210: SSP1CON1 = 0x28;
  1737  0016AA  0E28               	movlw	40
  1738  0016AC  6EC6               	movwf	4038,c	;volatile
  1739                           
  1740                           ;i2c1.c: 212: SSP1CON3 = 0x00;
  1741  0016AE  0E00               	movlw	0
  1742  0016B0  6ECB               	movwf	4043,c	;volatile
  1743                           
  1744                           ;i2c1.c: 214: SSP1ADD = 0x03;
  1745  0016B2  0E03               	movlw	3
  1746  0016B4  6EC8               	movwf	4040,c	;volatile
  1747                           
  1748                           ;i2c1.c: 218: PIR1bits.SSP1IF = 0;
  1749  0016B6  969E               	bcf	3998,3,c	;volatile
  1750                           
  1751                           ;i2c1.c: 220: PIE1bits.SSP1IE = 1;
  1752  0016B8  869D               	bsf	3997,3,c	;volatile
  1753  0016BA  0012               	return		;funcret
  1754  0016BC                     __end_of_I2C1_Initialize:
  1755                           	opt stack 0
  1756                           tblptru	equ	0xFF8
  1757                           tblptrh	equ	0xFF7
  1758                           tblptrl	equ	0xFF6
  1759                           tablat	equ	0xFF5
  1760                           intcon	equ	0xFF2
  1761                           intcon2	equ	0xFF1
  1762                           postinc0	equ	0xFEE
  1763                           wreg	equ	0xFE8
  1764                           status	equ	0xFD8
  1765                           
  1766 ;; *************** function _EUSART1_Initialize *****************
  1767 ;; Defined at:
  1768 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;		None
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;		None
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  1    wreg      void 
  1775 ;; Registers used:
  1776 ;;		wreg, status,2
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1786 ;;Total ram usage:        0 bytes
  1787 ;; Hardware stack levels used:    1
  1788 ;; Hardware stack levels required when called:    3
  1789 ;; This function calls:
  1790 ;;		Nothing
  1791 ;; This function is called by:
  1792 ;;		_SYSTEM_Initialize
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           	psect	text17
  1797  001824                     __ptext17:
  1798                           	opt stack 0
  1799  001824                     _EUSART1_Initialize:
  1800                           	opt stack 26
  1801                           
  1802                           ;eusart1.c: 60: BAUDCON1 = 0x08;
  1803                           
  1804                           ;incstack = 0
  1805  001824  0E08               	movlw	8
  1806  001826  6EB8               	movwf	4024,c	;volatile
  1807                           
  1808                           ;eusart1.c: 63: RCSTA1 = 0x90;
  1809  001828  0E90               	movlw	144
  1810  00182A  6EAB               	movwf	4011,c	;volatile
  1811                           
  1812                           ;eusart1.c: 66: TXSTA1 = 0x24;
  1813  00182C  0E24               	movlw	36
  1814  00182E  6EAC               	movwf	4012,c	;volatile
  1815                           
  1816                           ;eusart1.c: 69: SPBRG1 = 0xCF;
  1817  001830  0ECF               	movlw	207
  1818  001832  6EAF               	movwf	4015,c	;volatile
  1819                           
  1820                           ;eusart1.c: 72: SPBRGH1 = 0x00;
  1821  001834  0E00               	movlw	0
  1822  001836  6EB0               	movwf	4016,c	;volatile
  1823  001838  0012               	return		;funcret
  1824  00183A                     __end_of_EUSART1_Initialize:
  1825                           	opt stack 0
  1826                           tblptru	equ	0xFF8
  1827                           tblptrh	equ	0xFF7
  1828                           tblptrl	equ	0xFF6
  1829                           tablat	equ	0xFF5
  1830                           intcon	equ	0xFF2
  1831                           intcon2	equ	0xFF1
  1832                           postinc0	equ	0xFEE
  1833                           wreg	equ	0xFE8
  1834                           status	equ	0xFD8
  1835                           
  1836 ;; *************** function _KeyPadInit *****************
  1837 ;; Defined at:
  1838 ;;		line 7 in file "DriverTeclado.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;		None
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;		None
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  1    wreg      void 
  1845 ;; Registers used:
  1846 ;;		None
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1856 ;;Total ram usage:        0 bytes
  1857 ;; Hardware stack levels used:    1
  1858 ;; Hardware stack levels required when called:    3
  1859 ;; This function calls:
  1860 ;;		Nothing
  1861 ;; This function is called by:
  1862 ;;		_main
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866                           	psect	text18
  1867  00188E                     __ptext18:
  1868                           	opt stack 0
  1869  00188E                     _KeyPadInit:
  1870                           	opt stack 27
  1871                           
  1872                           ;incstack = 0
  1873                           ;DriverTeclado.c: 9: do { LATAbits.LATA0 = 0; } while(0);
  1874  00188E  9089               	bcf	3977,0,c	;volatile
  1875                           
  1876                           ;DriverTeclado.c: 10: do { LATAbits.LATA1 = 0; } while(0);
  1877  001890  9289               	bcf	3977,1,c	;volatile
  1878                           
  1879                           ;DriverTeclado.c: 11: do { LATAbits.LATA2 = 0; } while(0);
  1880  001892  9489               	bcf	3977,2,c	;volatile
  1881                           
  1882                           ;DriverTeclado.c: 12: do { LATAbits.LATA3 = 0; } while(0);
  1883  001894  9689               	bcf	3977,3,c	;volatile
  1884  001896  0012               	return	
  1885  001898                     __end_of_KeyPadInit:
  1886                           	opt stack 0
  1887                           tblptru	equ	0xFF8
  1888                           tblptrh	equ	0xFF7
  1889                           tblptrl	equ	0xFF6
  1890                           tablat	equ	0xFF5
  1891                           intcon	equ	0xFF2
  1892                           intcon2	equ	0xFF1
  1893                           postinc0	equ	0xFEE
  1894                           wreg	equ	0xFE8
  1895                           status	equ	0xFD8
  1896                           
  1897 ;; *************** function _KeyPadAcquire *****************
  1898 ;; Defined at:
  1899 ;;		line 189 in file "DriverTeclado.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;		None
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;  KeyAcquire      1   24[COMRAM] unsigned char 
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  2   22[COMRAM] int 
  1906 ;; Registers used:
  1907 ;;		wreg, status,2, status,0, cstack
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1913 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1914 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1916 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1917 ;;Total ram usage:        3 bytes
  1918 ;; Hardware stack levels used:    1
  1919 ;; Hardware stack levels required when called:    5
  1920 ;; This function calls:
  1921 ;;		_Delay
  1922 ;;		_KeyPadScan
  1923 ;; This function is called by:
  1924 ;;		_main
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           	psect	text19
  1929  0015F6                     __ptext19:
  1930                           	opt stack 0
  1931  0015F6                     _KeyPadAcquire:
  1932                           	opt stack 25
  1933                           
  1934                           ;DriverTeclado.c: 191: char KeyAcquire = 0xFF;
  1935                           
  1936                           ;incstack = 0
  1937  0015F6  6841               	setf	KeyPadAcquire@KeyAcquire,c
  1938                           
  1939                           ;DriverTeclado.c: 192: while (KeyPressed==1)
  1940  0015F8  D010               	goto	l2273
  1941  0015FA                     l2265:
  1942                           
  1943                           ;DriverTeclado.c: 193: {
  1944                           ;DriverTeclado.c: 194: KeyAcquire = KeyPadScan();
  1945  0015FA  EC27  F009         	call	_KeyPadScan	;wreg free
  1946  0015FE  6E41               	movwf	KeyPadAcquire@KeyAcquire,c
  1947                           
  1948                           ;DriverTeclado.c: 195: if (KeyAcquire!=0xFF)KeyPressed=0;
  1949  001600  2841               	incf	KeyPadAcquire@KeyAcquire,w,c
  1950  001602  B4D8               	btfsc	status,2,c
  1951  001604  D004               	goto	l2271
  1952  001606  0E00               	movlw	0
  1953  001608  6E4A               	movwf	_KeyPressed+1,c
  1954  00160A  0E00               	movlw	0
  1955  00160C  6E49               	movwf	_KeyPressed,c
  1956  00160E                     l2271:
  1957                           
  1958                           ;DriverTeclado.c: 196: Delay(150);
  1959  00160E  0E00               	movlw	0
  1960  001610  6E3D               	movwf	Delay@DelayCount+1,c
  1961  001612  0E96               	movlw	150
  1962  001614  6E3C               	movwf	Delay@DelayCount,c
  1963  001616  EC72  F00B         	call	_Delay	;wreg free
  1964  00161A                     l2273:
  1965  00161A  0449               	decf	_KeyPressed,w,c
  1966  00161C  104A               	iorwf	_KeyPressed+1,w,c
  1967  00161E  B4D8               	btfsc	status,2,c
  1968  001620  D7EC               	goto	l2265
  1969                           
  1970                           ;DriverTeclado.c: 197: }
  1971                           ;DriverTeclado.c: 198: KeyPressed=1;
  1972  001622  0E00               	movlw	0
  1973  001624  6E4A               	movwf	_KeyPressed+1,c
  1974  001626  0E01               	movlw	1
  1975  001628  6E49               	movwf	_KeyPressed,c
  1976                           
  1977                           ;DriverTeclado.c: 199: return(KeyAcquire);
  1978  00162A  C041  F03F         	movff	KeyPadAcquire@KeyAcquire,?_KeyPadAcquire
  1979  00162E  6A40               	clrf	?_KeyPadAcquire+1,c
  1980  001630  0012               	return	
  1981  001632                     __end_of_KeyPadAcquire:
  1982                           	opt stack 0
  1983                           tblptru	equ	0xFF8
  1984                           tblptrh	equ	0xFF7
  1985                           tblptrl	equ	0xFF6
  1986                           tablat	equ	0xFF5
  1987                           intcon	equ	0xFF2
  1988                           intcon2	equ	0xFF1
  1989                           postinc0	equ	0xFEE
  1990                           wreg	equ	0xFE8
  1991                           status	equ	0xFD8
  1992                           
  1993 ;; *************** function _KeyPadScan *****************
  1994 ;; Defined at:
  1995 ;;		line 16 in file "DriverTeclado.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;		None
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;  KeyPadKey       1   21[COMRAM] unsigned char 
  2000 ;; Return value:  Size  Location     Type
  2001 ;;                  1    wreg      unsigned char 
  2002 ;; Registers used:
  2003 ;;		wreg, status,2, status,0, cstack
  2004 ;; Tracked objects:
  2005 ;;		On entry : 0/0
  2006 ;;		On exit  : 0/0
  2007 ;;		Unchanged: 0/0
  2008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2010 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2012 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2013 ;;Total ram usage:        1 bytes
  2014 ;; Hardware stack levels used:    1
  2015 ;; Hardware stack levels required when called:    4
  2016 ;; This function calls:
  2017 ;;		_Delay
  2018 ;; This function is called by:
  2019 ;;		_KeyPadAcquire
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           	psect	text20
  2024  00124E                     __ptext20:
  2025                           	opt stack 0
  2026  00124E                     _KeyPadScan:
  2027                           	opt stack 25
  2028                           
  2029                           ;DriverTeclado.c: 18: char KeyPadKey = 0xFF;
  2030                           
  2031                           ;incstack = 0
  2032  00124E  683E               	setf	KeyPadScan@KeyPadKey,c
  2033                           
  2034                           ;DriverTeclado.c: 19: static uint8_t Push = 0;
  2035                           ;DriverTeclado.c: 21: do { LATAbits.LATA3 = 0; } while(0);
  2036  001250  9689               	bcf	3977,3,c	;volatile
  2037                           
  2038                           ;DriverTeclado.c: 22: do { LATAbits.LATA2 = 1; } while(0);
  2039  001252  8489               	bsf	3977,2,c	;volatile
  2040                           
  2041                           ;DriverTeclado.c: 23: do { LATAbits.LATA1 = 1; } while(0);
  2042  001254  8289               	bsf	3977,1,c	;volatile
  2043                           
  2044                           ;DriverTeclado.c: 24: do { LATAbits.LATA0 = 1; } while(0);
  2045  001256  8089               	bsf	3977,0,c	;volatile
  2046                           
  2047                           ;DriverTeclado.c: 26: Push = PORTAbits.RA4;
  2048  001258  0E00               	movlw	0
  2049  00125A  B880               	btfsc	3968,4,c	;volatile
  2050  00125C  0E01               	movlw	1
  2051  00125E  6E10               	movwf	KeyPadScan@Push,c
  2052                           
  2053                           ;DriverTeclado.c: 27: if (Push==0)
  2054  001260  5010               	movf	KeyPadScan@Push,w,c
  2055  001262  A4D8               	btfss	status,2,c
  2056  001264  D002               	goto	l2065
  2057                           
  2058                           ;DriverTeclado.c: 28: {
  2059                           ;DriverTeclado.c: 29: KeyPadKey = '*';
  2060  001266  0E2A               	movlw	42
  2061  001268  D01A               	goto	L3
  2062  00126A                     l2065:
  2063                           
  2064                           ;DriverTeclado.c: 32: else
  2065                           ;DriverTeclado.c: 33: {
  2066                           ;DriverTeclado.c: 34: Push = PORTAbits.RA5;
  2067  00126A  0E00               	movlw	0
  2068  00126C  BA80               	btfsc	3968,5,c	;volatile
  2069  00126E  0E01               	movlw	1
  2070  001270  6E10               	movwf	KeyPadScan@Push,c
  2071                           
  2072                           ;DriverTeclado.c: 35: if (Push==0)
  2073  001272  5010               	movf	KeyPadScan@Push,w,c
  2074  001274  A4D8               	btfss	status,2,c
  2075  001276  D002               	goto	l2071
  2076                           
  2077                           ;DriverTeclado.c: 36: {
  2078                           ;DriverTeclado.c: 37: KeyPadKey = '0';
  2079  001278  0E30               	movlw	48
  2080  00127A  D011               	goto	L3
  2081  00127C                     l2071:
  2082                           
  2083                           ;DriverTeclado.c: 40: else
  2084                           ;DriverTeclado.c: 41: {
  2085                           ;DriverTeclado.c: 42: Push = PORTAbits.RA6;
  2086  00127C  0E00               	movlw	0
  2087  00127E  BC80               	btfsc	3968,6,c	;volatile
  2088  001280  0E01               	movlw	1
  2089  001282  6E10               	movwf	KeyPadScan@Push,c
  2090                           
  2091                           ;DriverTeclado.c: 43: if (Push==0)
  2092  001284  5010               	movf	KeyPadScan@Push,w,c
  2093  001286  A4D8               	btfss	status,2,c
  2094  001288  D002               	goto	l2077
  2095                           
  2096                           ;DriverTeclado.c: 44: {
  2097                           ;DriverTeclado.c: 45: KeyPadKey = '#';
  2098  00128A  0E23               	movlw	35
  2099  00128C  D008               	goto	L3
  2100  00128E                     l2077:
  2101                           
  2102                           ;DriverTeclado.c: 48: else
  2103                           ;DriverTeclado.c: 49: {
  2104                           ;DriverTeclado.c: 50: Push = PORTAbits.RA7;
  2105  00128E  0E00               	movlw	0
  2106  001290  BE80               	btfsc	3968,7,c	;volatile
  2107  001292  0E01               	movlw	1
  2108  001294  6E10               	movwf	KeyPadScan@Push,c
  2109                           
  2110                           ;DriverTeclado.c: 51: if (Push==0)
  2111  001296  5010               	movf	KeyPadScan@Push,w,c
  2112  001298  A4D8               	btfss	status,2,c
  2113  00129A  D004               	goto	l2083
  2114                           
  2115                           ;DriverTeclado.c: 52: {
  2116                           ;DriverTeclado.c: 53: KeyPadKey = 'D';
  2117  00129C  0E44               	movlw	68
  2118  00129E                     L3:
  2119  00129E  6E3E               	movwf	KeyPadScan@KeyPadKey,c
  2120                           
  2121                           ;DriverTeclado.c: 54: Push = 1;
  2122  0012A0  0E01               	movlw	1
  2123  0012A2  6E10               	movwf	KeyPadScan@Push,c
  2124  0012A4                     l2083:
  2125                           
  2126                           ;DriverTeclado.c: 55: }
  2127                           ;DriverTeclado.c: 56: }
  2128                           ;DriverTeclado.c: 57: }
  2129                           ;DriverTeclado.c: 58: }
  2130                           ;DriverTeclado.c: 60: Delay(5);
  2131  0012A4  0E00               	movlw	0
  2132  0012A6  6E3D               	movwf	Delay@DelayCount+1,c
  2133  0012A8  0E05               	movlw	5
  2134  0012AA  6E3C               	movwf	Delay@DelayCount,c
  2135  0012AC  EC72  F00B         	call	_Delay	;wreg free
  2136                           
  2137                           ;DriverTeclado.c: 62: do { LATAbits.LATA3 = 1; } while(0);
  2138  0012B0  8689               	bsf	3977,3,c	;volatile
  2139                           
  2140                           ;DriverTeclado.c: 63: do { LATAbits.LATA2 = 0; } while(0);
  2141  0012B2  9489               	bcf	3977,2,c	;volatile
  2142                           
  2143                           ;DriverTeclado.c: 65: Push = PORTAbits.RA4;
  2144  0012B4  0E00               	movlw	0
  2145  0012B6  B880               	btfsc	3968,4,c	;volatile
  2146  0012B8  0E01               	movlw	1
  2147  0012BA  6E10               	movwf	KeyPadScan@Push,c
  2148                           
  2149                           ;DriverTeclado.c: 66: if (Push==0)
  2150  0012BC  5010               	movf	KeyPadScan@Push,w,c
  2151  0012BE  A4D8               	btfss	status,2,c
  2152  0012C0  D002               	goto	l2095
  2153                           
  2154                           ;DriverTeclado.c: 67: {
  2155                           ;DriverTeclado.c: 68: KeyPadKey = '7';
  2156  0012C2  0E37               	movlw	55
  2157  0012C4  D01A               	goto	L6
  2158  0012C6                     l2095:
  2159                           
  2160                           ;DriverTeclado.c: 71: else
  2161                           ;DriverTeclado.c: 72: {
  2162                           ;DriverTeclado.c: 73: Push = PORTAbits.RA5;
  2163  0012C6  0E00               	movlw	0
  2164  0012C8  BA80               	btfsc	3968,5,c	;volatile
  2165  0012CA  0E01               	movlw	1
  2166  0012CC  6E10               	movwf	KeyPadScan@Push,c
  2167                           
  2168                           ;DriverTeclado.c: 74: if (Push==0)
  2169  0012CE  5010               	movf	KeyPadScan@Push,w,c
  2170  0012D0  A4D8               	btfss	status,2,c
  2171  0012D2  D002               	goto	l2101
  2172                           
  2173                           ;DriverTeclado.c: 75: {
  2174                           ;DriverTeclado.c: 76: KeyPadKey = '8';
  2175  0012D4  0E38               	movlw	56
  2176  0012D6  D011               	goto	L6
  2177  0012D8                     l2101:
  2178                           
  2179                           ;DriverTeclado.c: 79: else
  2180                           ;DriverTeclado.c: 80: {
  2181                           ;DriverTeclado.c: 81: Push = PORTAbits.RA6;
  2182  0012D8  0E00               	movlw	0
  2183  0012DA  BC80               	btfsc	3968,6,c	;volatile
  2184  0012DC  0E01               	movlw	1
  2185  0012DE  6E10               	movwf	KeyPadScan@Push,c
  2186                           
  2187                           ;DriverTeclado.c: 82: if (Push==0)
  2188  0012E0  5010               	movf	KeyPadScan@Push,w,c
  2189  0012E2  A4D8               	btfss	status,2,c
  2190  0012E4  D002               	goto	l2107
  2191                           
  2192                           ;DriverTeclado.c: 83: {
  2193                           ;DriverTeclado.c: 84: KeyPadKey = '9';
  2194  0012E6  0E39               	movlw	57
  2195  0012E8  D008               	goto	L6
  2196  0012EA                     l2107:
  2197                           
  2198                           ;DriverTeclado.c: 87: else
  2199                           ;DriverTeclado.c: 88: {
  2200                           ;DriverTeclado.c: 89: Push = PORTAbits.RA7;
  2201  0012EA  0E00               	movlw	0
  2202  0012EC  BE80               	btfsc	3968,7,c	;volatile
  2203  0012EE  0E01               	movlw	1
  2204  0012F0  6E10               	movwf	KeyPadScan@Push,c
  2205                           
  2206                           ;DriverTeclado.c: 90: if (Push==0)
  2207  0012F2  5010               	movf	KeyPadScan@Push,w,c
  2208  0012F4  A4D8               	btfss	status,2,c
  2209  0012F6  D004               	goto	l2113
  2210                           
  2211                           ;DriverTeclado.c: 91: {
  2212                           ;DriverTeclado.c: 92: KeyPadKey = 'C';
  2213  0012F8  0E43               	movlw	67
  2214  0012FA                     L6:
  2215  0012FA  6E3E               	movwf	KeyPadScan@KeyPadKey,c
  2216                           
  2217                           ;DriverTeclado.c: 93: Push = 1;
  2218  0012FC  0E01               	movlw	1
  2219  0012FE  6E10               	movwf	KeyPadScan@Push,c
  2220  001300                     l2113:
  2221                           
  2222                           ;DriverTeclado.c: 94: }
  2223                           ;DriverTeclado.c: 95: }
  2224                           ;DriverTeclado.c: 96: }
  2225                           ;DriverTeclado.c: 97: }
  2226                           ;DriverTeclado.c: 99: Delay(5);
  2227  001300  0E00               	movlw	0
  2228  001302  6E3D               	movwf	Delay@DelayCount+1,c
  2229  001304  0E05               	movlw	5
  2230  001306  6E3C               	movwf	Delay@DelayCount,c
  2231  001308  EC72  F00B         	call	_Delay	;wreg free
  2232                           
  2233                           ;DriverTeclado.c: 101: do { LATAbits.LATA2 = 1; } while(0);
  2234  00130C  8489               	bsf	3977,2,c	;volatile
  2235                           
  2236                           ;DriverTeclado.c: 102: do { LATAbits.LATA1 = 0; } while(0);
  2237  00130E  9289               	bcf	3977,1,c	;volatile
  2238                           
  2239                           ;DriverTeclado.c: 104: Push = PORTAbits.RA4;
  2240  001310  0E00               	movlw	0
  2241  001312  B880               	btfsc	3968,4,c	;volatile
  2242  001314  0E01               	movlw	1
  2243  001316  6E10               	movwf	KeyPadScan@Push,c
  2244                           
  2245                           ;DriverTeclado.c: 105: if (Push==0)
  2246  001318  5010               	movf	KeyPadScan@Push,w,c
  2247  00131A  A4D8               	btfss	status,2,c
  2248  00131C  D002               	goto	l2125
  2249                           
  2250                           ;DriverTeclado.c: 106: {
  2251                           ;DriverTeclado.c: 107: KeyPadKey = '4';
  2252  00131E  0E34               	movlw	52
  2253  001320  D01A               	goto	L9
  2254  001322                     l2125:
  2255                           
  2256                           ;DriverTeclado.c: 110: else
  2257                           ;DriverTeclado.c: 111: {
  2258                           ;DriverTeclado.c: 112: Push = PORTAbits.RA5;
  2259  001322  0E00               	movlw	0
  2260  001324  BA80               	btfsc	3968,5,c	;volatile
  2261  001326  0E01               	movlw	1
  2262  001328  6E10               	movwf	KeyPadScan@Push,c
  2263                           
  2264                           ;DriverTeclado.c: 113: if (Push==0)
  2265  00132A  5010               	movf	KeyPadScan@Push,w,c
  2266  00132C  A4D8               	btfss	status,2,c
  2267  00132E  D002               	goto	l2131
  2268                           
  2269                           ;DriverTeclado.c: 114: {
  2270                           ;DriverTeclado.c: 115: KeyPadKey = '5';
  2271  001330  0E35               	movlw	53
  2272  001332  D011               	goto	L9
  2273  001334                     l2131:
  2274                           
  2275                           ;DriverTeclado.c: 118: else
  2276                           ;DriverTeclado.c: 119: {
  2277                           ;DriverTeclado.c: 120: Push = PORTAbits.RA6;
  2278  001334  0E00               	movlw	0
  2279  001336  BC80               	btfsc	3968,6,c	;volatile
  2280  001338  0E01               	movlw	1
  2281  00133A  6E10               	movwf	KeyPadScan@Push,c
  2282                           
  2283                           ;DriverTeclado.c: 121: if (Push==0)
  2284  00133C  5010               	movf	KeyPadScan@Push,w,c
  2285  00133E  A4D8               	btfss	status,2,c
  2286  001340  D002               	goto	l2137
  2287                           
  2288                           ;DriverTeclado.c: 122: {
  2289                           ;DriverTeclado.c: 123: KeyPadKey = '6';
  2290  001342  0E36               	movlw	54
  2291  001344  D008               	goto	L9
  2292  001346                     l2137:
  2293                           
  2294                           ;DriverTeclado.c: 126: else
  2295                           ;DriverTeclado.c: 127: {
  2296                           ;DriverTeclado.c: 128: Push = PORTAbits.RA7;
  2297  001346  0E00               	movlw	0
  2298  001348  BE80               	btfsc	3968,7,c	;volatile
  2299  00134A  0E01               	movlw	1
  2300  00134C  6E10               	movwf	KeyPadScan@Push,c
  2301                           
  2302                           ;DriverTeclado.c: 129: if (Push==0)
  2303  00134E  5010               	movf	KeyPadScan@Push,w,c
  2304  001350  A4D8               	btfss	status,2,c
  2305  001352  D004               	goto	l2143
  2306                           
  2307                           ;DriverTeclado.c: 130: {
  2308                           ;DriverTeclado.c: 131: KeyPadKey = 'B';
  2309  001354  0E42               	movlw	66
  2310  001356                     L9:
  2311  001356  6E3E               	movwf	KeyPadScan@KeyPadKey,c
  2312                           
  2313                           ;DriverTeclado.c: 132: Push = 1;
  2314  001358  0E01               	movlw	1
  2315  00135A  6E10               	movwf	KeyPadScan@Push,c
  2316  00135C                     l2143:
  2317                           
  2318                           ;DriverTeclado.c: 133: }
  2319                           ;DriverTeclado.c: 134: }
  2320                           ;DriverTeclado.c: 135: }
  2321                           ;DriverTeclado.c: 136: }
  2322                           ;DriverTeclado.c: 138: Delay(5);
  2323  00135C  0E00               	movlw	0
  2324  00135E  6E3D               	movwf	Delay@DelayCount+1,c
  2325  001360  0E05               	movlw	5
  2326  001362  6E3C               	movwf	Delay@DelayCount,c
  2327  001364  EC72  F00B         	call	_Delay	;wreg free
  2328                           
  2329                           ;DriverTeclado.c: 140: do { LATAbits.LATA1 = 1; } while(0);
  2330  001368  8289               	bsf	3977,1,c	;volatile
  2331                           
  2332                           ;DriverTeclado.c: 141: do { LATAbits.LATA0 = 0; } while(0);
  2333  00136A  9089               	bcf	3977,0,c	;volatile
  2334                           
  2335                           ;DriverTeclado.c: 143: Push = PORTAbits.RA4;
  2336  00136C  0E00               	movlw	0
  2337  00136E  B880               	btfsc	3968,4,c	;volatile
  2338  001370  0E01               	movlw	1
  2339  001372  6E10               	movwf	KeyPadScan@Push,c
  2340                           
  2341                           ;DriverTeclado.c: 144: if (Push==0)
  2342  001374  5010               	movf	KeyPadScan@Push,w,c
  2343  001376  A4D8               	btfss	status,2,c
  2344  001378  D002               	goto	l2155
  2345                           
  2346                           ;DriverTeclado.c: 145: {
  2347                           ;DriverTeclado.c: 146: KeyPadKey = '1';
  2348  00137A  0E31               	movlw	49
  2349  00137C  D01A               	goto	L12
  2350  00137E                     l2155:
  2351                           
  2352                           ;DriverTeclado.c: 149: else
  2353                           ;DriverTeclado.c: 150: {
  2354                           ;DriverTeclado.c: 151: Push = PORTAbits.RA5;
  2355  00137E  0E00               	movlw	0
  2356  001380  BA80               	btfsc	3968,5,c	;volatile
  2357  001382  0E01               	movlw	1
  2358  001384  6E10               	movwf	KeyPadScan@Push,c
  2359                           
  2360                           ;DriverTeclado.c: 152: if (Push==0)
  2361  001386  5010               	movf	KeyPadScan@Push,w,c
  2362  001388  A4D8               	btfss	status,2,c
  2363  00138A  D002               	goto	l2161
  2364                           
  2365                           ;DriverTeclado.c: 153: {
  2366                           ;DriverTeclado.c: 154: KeyPadKey = '2';
  2367  00138C  0E32               	movlw	50
  2368  00138E  D011               	goto	L12
  2369  001390                     l2161:
  2370                           
  2371                           ;DriverTeclado.c: 157: else
  2372                           ;DriverTeclado.c: 158: {
  2373                           ;DriverTeclado.c: 159: Push = PORTAbits.RA6;
  2374  001390  0E00               	movlw	0
  2375  001392  BC80               	btfsc	3968,6,c	;volatile
  2376  001394  0E01               	movlw	1
  2377  001396  6E10               	movwf	KeyPadScan@Push,c
  2378                           
  2379                           ;DriverTeclado.c: 160: if (Push==0)
  2380  001398  5010               	movf	KeyPadScan@Push,w,c
  2381  00139A  A4D8               	btfss	status,2,c
  2382  00139C  D002               	goto	l2167
  2383                           
  2384                           ;DriverTeclado.c: 161: {
  2385                           ;DriverTeclado.c: 162: KeyPadKey = '3';
  2386  00139E  0E33               	movlw	51
  2387  0013A0  D008               	goto	L12
  2388  0013A2                     l2167:
  2389                           
  2390                           ;DriverTeclado.c: 165: else
  2391                           ;DriverTeclado.c: 166: {
  2392                           ;DriverTeclado.c: 167: Push = PORTAbits.RA7;
  2393  0013A2  0E00               	movlw	0
  2394  0013A4  BE80               	btfsc	3968,7,c	;volatile
  2395  0013A6  0E01               	movlw	1
  2396  0013A8  6E10               	movwf	KeyPadScan@Push,c
  2397                           
  2398                           ;DriverTeclado.c: 168: if (Push==0)
  2399  0013AA  5010               	movf	KeyPadScan@Push,w,c
  2400  0013AC  A4D8               	btfss	status,2,c
  2401  0013AE  D004               	goto	l2173
  2402                           
  2403                           ;DriverTeclado.c: 169: {
  2404                           ;DriverTeclado.c: 170: KeyPadKey = 'A';
  2405  0013B0  0E41               	movlw	65
  2406  0013B2                     L12:
  2407  0013B2  6E3E               	movwf	KeyPadScan@KeyPadKey,c
  2408                           
  2409                           ;DriverTeclado.c: 171: Push = 1;
  2410  0013B4  0E01               	movlw	1
  2411  0013B6  6E10               	movwf	KeyPadScan@Push,c
  2412  0013B8                     l2173:
  2413                           
  2414                           ;DriverTeclado.c: 172: }
  2415                           ;DriverTeclado.c: 173: }
  2416                           ;DriverTeclado.c: 174: }
  2417                           ;DriverTeclado.c: 175: }
  2418                           ;DriverTeclado.c: 177: Delay(5);
  2419  0013B8  0E00               	movlw	0
  2420  0013BA  6E3D               	movwf	Delay@DelayCount+1,c
  2421  0013BC  0E05               	movlw	5
  2422  0013BE  6E3C               	movwf	Delay@DelayCount,c
  2423  0013C0  EC72  F00B         	call	_Delay	;wreg free
  2424                           
  2425                           ;DriverTeclado.c: 179: do { LATAbits.LATA0 = 0; } while(0);
  2426  0013C4  9089               	bcf	3977,0,c	;volatile
  2427                           
  2428                           ;DriverTeclado.c: 180: do { LATAbits.LATA1 = 0; } while(0);
  2429  0013C6  9289               	bcf	3977,1,c	;volatile
  2430                           
  2431                           ;DriverTeclado.c: 181: do { LATAbits.LATA2 = 0; } while(0);
  2432  0013C8  9489               	bcf	3977,2,c	;volatile
  2433                           
  2434                           ;DriverTeclado.c: 182: do { LATAbits.LATA3 = 0; } while(0);
  2435  0013CA  9689               	bcf	3977,3,c	;volatile
  2436                           
  2437                           ;DriverTeclado.c: 184: return(KeyPadKey);
  2438  0013CC  503E               	movf	KeyPadScan@KeyPadKey,w,c
  2439  0013CE  0012               	return	
  2440  0013D0                     __end_of_KeyPadScan:
  2441                           	opt stack 0
  2442                           tblptru	equ	0xFF8
  2443                           tblptrh	equ	0xFF7
  2444                           tblptrl	equ	0xFF6
  2445                           tablat	equ	0xFF5
  2446                           intcon	equ	0xFF2
  2447                           intcon2	equ	0xFF1
  2448                           postinc0	equ	0xFEE
  2449                           wreg	equ	0xFE8
  2450                           status	equ	0xFD8
  2451                           
  2452 ;; *************** function _EUSART1_Write *****************
  2453 ;; Defined at:
  2454 ;;		line 96 in file "mcc_generated_files/eusart1.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;  txData          1    wreg     unsigned char 
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;  txData          1   19[COMRAM] unsigned char 
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  1    wreg      void 
  2461 ;; Registers used:
  2462 ;;		wreg
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2469 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2471 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2472 ;;Total ram usage:        1 bytes
  2473 ;; Hardware stack levels used:    1
  2474 ;; Hardware stack levels required when called:    3
  2475 ;; This function calls:
  2476 ;;		Nothing
  2477 ;; This function is called by:
  2478 ;;		_main
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482                           	psect	text21
  2483  00186E                     __ptext21:
  2484                           	opt stack 0
  2485  00186E                     _EUSART1_Write:
  2486                           	opt stack 27
  2487                           
  2488                           ;incstack = 0
  2489                           ;EUSART1_Write@txData stored from wreg
  2490  00186E  6E3C               	movwf	EUSART1_Write@txData,c
  2491  001870                     l452:
  2492  001870  A89E               	btfss	3998,4,c	;volatile
  2493  001872  D7FE               	goto	l452
  2494                           
  2495                           ;eusart1.c: 100: }
  2496                           ;eusart1.c: 102: TXREG1 = txData;
  2497  001874  C03C  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  2498  001878  0012               	return		;funcret
  2499  00187A                     __end_of_EUSART1_Write:
  2500                           	opt stack 0
  2501                           tblptru	equ	0xFF8
  2502                           tblptrh	equ	0xFF7
  2503                           tblptrl	equ	0xFF6
  2504                           tablat	equ	0xFF5
  2505                           intcon	equ	0xFF2
  2506                           intcon2	equ	0xFF1
  2507                           postinc0	equ	0xFEE
  2508                           wreg	equ	0xFE8
  2509                           status	equ	0xFD8
  2510                           
  2511 ;; *************** function _DisplayONCursorONToggleON *****************
  2512 ;; Defined at:
  2513 ;;		line 96 in file "DriverLCD16x2.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;		None
  2516 ;; Auto vars:     Size  Location     Type
  2517 ;;		None
  2518 ;; Return value:  Size  Location     Type
  2519 ;;                  1    wreg      void 
  2520 ;; Registers used:
  2521 ;;		wreg, status,2, status,0, cstack
  2522 ;; Tracked objects:
  2523 ;;		On entry : 0/0
  2524 ;;		On exit  : 0/0
  2525 ;;		Unchanged: 0/0
  2526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2531 ;;Total ram usage:        0 bytes
  2532 ;; Hardware stack levels used:    1
  2533 ;; Hardware stack levels required when called:    6
  2534 ;; This function calls:
  2535 ;;		_Delay
  2536 ;;		_lcd_cmd
  2537 ;; This function is called by:
  2538 ;;		_main
  2539 ;; This function uses a non-reentrant model
  2540 ;;
  2541                           
  2542                           	psect	text22
  2543  00183A                     __ptext22:
  2544                           	opt stack 0
  2545  00183A                     _DisplayONCursorONToggleON:
  2546                           	opt stack 24
  2547                           
  2548                           ;DriverLCD16x2.c: 98: lcd_cmd(0b00001111);
  2549                           
  2550                           ;incstack = 0
  2551  00183A  0E0F               	movlw	15
  2552  00183C  EC98  F00B         	call	_lcd_cmd
  2553                           
  2554                           ;DriverLCD16x2.c: 99: Delay(1);
  2555  001840  0E00               	movlw	0
  2556  001842  6E3D               	movwf	Delay@DelayCount+1,c
  2557  001844  0E01               	movlw	1
  2558  001846  6E3C               	movwf	Delay@DelayCount,c
  2559  001848  EC72  F00B         	call	_Delay	;wreg free
  2560  00184C  0012               	return		;funcret
  2561  00184E                     __end_of_DisplayONCursorONToggleON:
  2562                           	opt stack 0
  2563                           tblptru	equ	0xFF8
  2564                           tblptrh	equ	0xFF7
  2565                           tblptrl	equ	0xFF6
  2566                           tablat	equ	0xFF5
  2567                           intcon	equ	0xFF2
  2568                           intcon2	equ	0xFF1
  2569                           postinc0	equ	0xFEE
  2570                           wreg	equ	0xFE8
  2571                           status	equ	0xFD8
  2572                           
  2573 ;; *************** function _CursorGOTOxy *****************
  2574 ;; Defined at:
  2575 ;;		line 114 in file "DriverLCD16x2.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;  x               2   22[COMRAM] int 
  2578 ;;  y               2   24[COMRAM] int 
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  i               2   26[COMRAM] int 
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      void 
  2583 ;; Registers used:
  2584 ;;		wreg, status,2, status,0, cstack
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2590 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2591 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2592 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2593 ;;      Totals:         6       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2594 ;;Total ram usage:       11 bytes
  2595 ;; Hardware stack levels used:    1
  2596 ;; Hardware stack levels required when called:    6
  2597 ;; This function calls:
  2598 ;;		_Delay
  2599 ;;		_lcd_cmd
  2600 ;; This function is called by:
  2601 ;;		_main
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           	psect	text23
  2606  0013D0                     __ptext23:
  2607                           	opt stack 0
  2608  0013D0                     _CursorGOTOxy:
  2609                           	opt stack 24
  2610                           
  2611                           ;DriverLCD16x2.c: 116: int i;
  2612                           ;DriverLCD16x2.c: 117: if (y==1)
  2613                           
  2614                           ;incstack = 0
  2615  0013D0  0441               	decf	CursorGOTOxy@y,w,c
  2616  0013D2  1042               	iorwf	CursorGOTOxy@y+1,w,c
  2617  0013D4  A4D8               	btfss	status,2,c
  2618  0013D6  D00A               	goto	l2325
  2619                           
  2620                           ;DriverLCD16x2.c: 118: {
  2621                           ;DriverLCD16x2.c: 119: lcd_cmd(0b10000000);
  2622  0013D8  0E80               	movlw	128
  2623  0013DA  EC98  F00B         	call	_lcd_cmd
  2624                           
  2625                           ;DriverLCD16x2.c: 120: Delay(1);
  2626  0013DE  0E00               	movlw	0
  2627  0013E0  6E3D               	movwf	Delay@DelayCount+1,c
  2628  0013E2  0E01               	movlw	1
  2629  0013E4  6E3C               	movwf	Delay@DelayCount,c
  2630  0013E6  EC72  F00B         	call	_Delay	;wreg free
  2631                           
  2632                           ;DriverLCD16x2.c: 121: }
  2633  0013EA  D00E               	goto	l2329
  2634  0013EC                     l2325:
  2635                           
  2636                           ;DriverLCD16x2.c: 122: else if(y==2)
  2637  0013EC  0E02               	movlw	2
  2638  0013EE  1841               	xorwf	CursorGOTOxy@y,w,c
  2639  0013F0  1042               	iorwf	CursorGOTOxy@y+1,w,c
  2640  0013F2  A4D8               	btfss	status,2,c
  2641  0013F4  D009               	goto	l2329
  2642                           
  2643                           ;DriverLCD16x2.c: 123: {
  2644                           ;DriverLCD16x2.c: 124: lcd_cmd(0b11000000);
  2645  0013F6  0EC0               	movlw	192
  2646  0013F8  EC98  F00B         	call	_lcd_cmd
  2647                           
  2648                           ;DriverLCD16x2.c: 125: Delay(1);
  2649  0013FC  0E00               	movlw	0
  2650  0013FE  6E3D               	movwf	Delay@DelayCount+1,c
  2651  001400  0E01               	movlw	1
  2652  001402  6E3C               	movwf	Delay@DelayCount,c
  2653  001404  EC72  F00B         	call	_Delay	;wreg free
  2654  001408                     l2329:
  2655                           
  2656                           ;DriverLCD16x2.c: 126: }
  2657                           ;DriverLCD16x2.c: 127: for (i=0;i<x-1;i++)
  2658  001408  0E00               	movlw	0
  2659  00140A  6E44               	movwf	CursorGOTOxy@i+1,c
  2660  00140C  0E00               	movlw	0
  2661  00140E  6E43               	movwf	CursorGOTOxy@i,c
  2662  001410  D00B               	goto	l2335
  2663  001412                     l2331:
  2664                           
  2665                           ;DriverLCD16x2.c: 128: {
  2666                           ;DriverLCD16x2.c: 129: lcd_cmd(0b00010100);
  2667  001412  0E14               	movlw	20
  2668  001414  EC98  F00B         	call	_lcd_cmd
  2669                           
  2670                           ;DriverLCD16x2.c: 130: Delay(1);
  2671  001418  0E00               	movlw	0
  2672  00141A  6E3D               	movwf	Delay@DelayCount+1,c
  2673  00141C  0E01               	movlw	1
  2674  00141E  6E3C               	movwf	Delay@DelayCount,c
  2675  001420  EC72  F00B         	call	_Delay	;wreg free
  2676  001424  4A43               	infsnz	CursorGOTOxy@i,f,c
  2677  001426  2A44               	incf	CursorGOTOxy@i+1,f,c
  2678  001428                     l2335:
  2679  001428  0EFF               	movlw	255
  2680  00142A  0100               	movlb	0	; () banked
  2681  00142C  6F60               	movwf	??_CursorGOTOxy& (0+255),b
  2682  00142E  0EFF               	movlw	255
  2683  001430  0100               	movlb	0	; () banked
  2684  001432  6F61               	movwf	(??_CursorGOTOxy+1)& (0+255),b
  2685  001434  C03F  F062         	movff	CursorGOTOxy@x,??_CursorGOTOxy+2
  2686  001438  C040  F063         	movff	CursorGOTOxy@x+1,??_CursorGOTOxy+3
  2687  00143C  0100               	movlb	0	; () banked
  2688  00143E  5160               	movf	??_CursorGOTOxy& (0+255),w,b
  2689  001440  0100               	movlb	0	; () banked
  2690  001442  2762               	addwf	(??_CursorGOTOxy+2)& (0+255),f,b
  2691  001444  0100               	movlb	0	; () banked
  2692  001446  5161               	movf	(??_CursorGOTOxy+1)& (0+255),w,b
  2693  001448  0100               	movlb	0	; () banked
  2694  00144A  2363               	addwfc	(??_CursorGOTOxy+3)& (0+255),f,b
  2695  00144C  0100               	movlb	0	; () banked
  2696  00144E  5162               	movf	(??_CursorGOTOxy+2)& (0+255),w,b
  2697  001450  5C43               	subwf	CursorGOTOxy@i,w,c
  2698  001452  5044               	movf	CursorGOTOxy@i+1,w,c
  2699  001454  0A80               	xorlw	128
  2700  001456  0100               	movlb	0	; () banked
  2701  001458  6F64               	movwf	(??_CursorGOTOxy+4)& (0+255),b
  2702  00145A  0100               	movlb	0	; () banked
  2703  00145C  5163               	movf	(??_CursorGOTOxy+3)& (0+255),w,b
  2704  00145E  0A80               	xorlw	128
  2705  001460  0100               	movlb	0	; () banked
  2706  001462  5964               	subwfb	(??_CursorGOTOxy+4)& (0+255),w,b
  2707  001464  B0D8               	btfsc	status,0,c
  2708  001466  0012               	return	
  2709  001468  D7D4               	goto	l2331
  2710  00146A                     __end_of_CursorGOTOxy:
  2711                           	opt stack 0
  2712                           tblptru	equ	0xFF8
  2713                           tblptrh	equ	0xFF7
  2714                           tblptrl	equ	0xFF6
  2715                           tablat	equ	0xFF5
  2716                           intcon	equ	0xFF2
  2717                           intcon2	equ	0xFF1
  2718                           postinc0	equ	0xFEE
  2719                           wreg	equ	0xFE8
  2720                           status	equ	0xFD8
  2721                           
  2722 ;; *************** function _lcd_cmd *****************
  2723 ;; Defined at:
  2724 ;;		line 23 in file "DriverLCD16x2.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;  x               1    wreg     unsigned char 
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;  x               1   21[COMRAM] unsigned char 
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  1    wreg      void 
  2731 ;; Registers used:
  2732 ;;		wreg, status,2, status,0, cstack
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2739 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2741 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2742 ;;Total ram usage:        1 bytes
  2743 ;; Hardware stack levels used:    1
  2744 ;; Hardware stack levels required when called:    5
  2745 ;; This function calls:
  2746 ;;		_lcd_lat
  2747 ;; This function is called by:
  2748 ;;		_lcd_init
  2749 ;;		_DisplayONCursorONToggleON
  2750 ;;		_CursorGOTOxy
  2751 ;;		_DisplayClear
  2752 ;;		_HomeReturn
  2753 ;;		_DisplayONCursorOFFToggleOFF
  2754 ;;		_DisplayOFF
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           	psect	text24
  2759  001730                     __ptext24:
  2760                           	opt stack 0
  2761  001730                     _lcd_cmd:
  2762                           	opt stack 24
  2763                           
  2764                           ; BSR set to: 0
  2765                           ;incstack = 0
  2766                           ;lcd_cmd@x stored from wreg
  2767  001730  6E3E               	movwf	lcd_cmd@x,c
  2768                           
  2769                           ;DriverLCD16x2.c: 25: PORTBbits.RB6 = 0;
  2770  001732  9C81               	bcf	3969,6,c	;volatile
  2771                           
  2772                           ;DriverLCD16x2.c: 26: PORTB &= 0xF0;
  2773  001734  0EF0               	movlw	240
  2774  001736  1681               	andwf	3969,f,c	;volatile
  2775                           
  2776                           ;DriverLCD16x2.c: 27: PORTB |= ((x & 0xF0)>>4);
  2777  001738  383E               	swapf	lcd_cmd@x,w,c
  2778  00173A  0B0F               	andlw	15
  2779  00173C  0B0F               	andlw	15
  2780  00173E  1281               	iorwf	3969,f,c	;volatile
  2781                           
  2782                           ;DriverLCD16x2.c: 28: lcd_lat();
  2783  001740  EC27  F00C         	call	_lcd_lat	;wreg free
  2784                           
  2785                           ;DriverLCD16x2.c: 30: PORTB &= 0xF0;
  2786  001744  0EF0               	movlw	240
  2787  001746  1681               	andwf	3969,f,c	;volatile
  2788                           
  2789                           ;DriverLCD16x2.c: 31: PORTB |= ((x & 0x0F));
  2790  001748  503E               	movf	lcd_cmd@x,w,c
  2791  00174A  0B0F               	andlw	15
  2792  00174C  1281               	iorwf	3969,f,c	;volatile
  2793                           
  2794                           ;DriverLCD16x2.c: 32: lcd_lat();
  2795  00174E  EC27  F00C         	call	_lcd_lat	;wreg free
  2796  001752  0012               	return		;funcret
  2797  001754                     __end_of_lcd_cmd:
  2798                           	opt stack 0
  2799                           tblptru	equ	0xFF8
  2800                           tblptrh	equ	0xFF7
  2801                           tblptrl	equ	0xFF6
  2802                           tablat	equ	0xFF5
  2803                           intcon	equ	0xFF2
  2804                           intcon2	equ	0xFF1
  2805                           postinc0	equ	0xFEE
  2806                           wreg	equ	0xFE8
  2807                           status	equ	0xFD8
  2808                           
  2809 ;; *************** function _lcd_lat *****************
  2810 ;; Defined at:
  2811 ;;		line 15 in file "DriverLCD16x2.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;		None
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;		None
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  1    wreg      void 
  2818 ;; Registers used:
  2819 ;;		wreg, status,2, status,0, cstack
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2829 ;;Total ram usage:        0 bytes
  2830 ;; Hardware stack levels used:    1
  2831 ;; Hardware stack levels required when called:    4
  2832 ;; This function calls:
  2833 ;;		_Delay
  2834 ;; This function is called by:
  2835 ;;		_lcd_cmd
  2836 ;;		_lcd_cmd_hf
  2837 ;;		_lcd_dwr
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841                           	psect	text25
  2842  00184E                     __ptext25:
  2843                           	opt stack 0
  2844  00184E                     _lcd_lat:
  2845                           	opt stack 24
  2846                           
  2847                           ;DriverLCD16x2.c: 18: PORTBbits.RB7 = 1;
  2848                           
  2849                           ;incstack = 0
  2850  00184E  8E81               	bsf	3969,7,c	;volatile
  2851                           
  2852                           ;DriverLCD16x2.c: 19: Delay(1);
  2853  001850  0E00               	movlw	0
  2854  001852  6E3D               	movwf	Delay@DelayCount+1,c
  2855  001854  0E01               	movlw	1
  2856  001856  6E3C               	movwf	Delay@DelayCount,c
  2857  001858  EC72  F00B         	call	_Delay	;wreg free
  2858                           
  2859                           ;DriverLCD16x2.c: 20: PORTBbits.RB7 = 0;
  2860  00185C  9E81               	bcf	3969,7,c	;volatile
  2861  00185E  0012               	return		;funcret
  2862  001860                     __end_of_lcd_lat:
  2863                           	opt stack 0
  2864                           tblptru	equ	0xFF8
  2865                           tblptrh	equ	0xFF7
  2866                           tblptrl	equ	0xFF6
  2867                           tablat	equ	0xFF5
  2868                           intcon	equ	0xFF2
  2869                           intcon2	equ	0xFF1
  2870                           postinc0	equ	0xFEE
  2871                           wreg	equ	0xFE8
  2872                           status	equ	0xFD8
  2873                           
  2874 ;; *************** function _Delay *****************
  2875 ;; Defined at:
  2876 ;;		line 7 in file "devices.c"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;  DelayCount      2   19[COMRAM] unsigned int 
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;		None
  2881 ;; Return value:  Size  Location     Type
  2882 ;;                  1    wreg      void 
  2883 ;; Registers used:
  2884 ;;		wreg, status,2, status,0
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2893 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2894 ;;Total ram usage:        2 bytes
  2895 ;; Hardware stack levels used:    1
  2896 ;; Hardware stack levels required when called:    3
  2897 ;; This function calls:
  2898 ;;		Nothing
  2899 ;; This function is called by:
  2900 ;;		_main
  2901 ;;		_KeyPadScan
  2902 ;;		_KeyPadAcquire
  2903 ;;		_lcd_lat
  2904 ;;		_lcd_init
  2905 ;;		_DisplayONCursorONToggleON
  2906 ;;		_CursorGOTOxy
  2907 ;;		_DisplayClear
  2908 ;;		_HomeReturn
  2909 ;;		_DisplayONCursorOFFToggleOFF
  2910 ;;		_DisplayOFF
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914                           	psect	text26
  2915  0016E4                     __ptext26:
  2916                           	opt stack 0
  2917  0016E4                     _Delay:
  2918                           	opt stack 0
  2919                           
  2920                           ;incstack = 0
  2921  0016E4  D00A               	goto	l2023
  2922  0016E6                     l2019:
  2923                           
  2924                           ;devices.c: 11: {
  2925                           ;devices.c: 12: if (TMR4_Ticked==1)
  2926  0016E6  0408               	decf	_TMR4_Ticked,w,c
  2927  0016E8  1009               	iorwf	_TMR4_Ticked+1,w,c
  2928  0016EA  A4D8               	btfss	status,2,c
  2929  0016EC  D00A               	goto	l2025
  2930                           
  2931                           ;devices.c: 13: {
  2932                           ;devices.c: 15: DelayCount=DelayCount-1;
  2933  0016EE  0EFF               	movlw	255
  2934  0016F0  243C               	addwf	Delay@DelayCount,w,c
  2935  0016F2  6E3C               	movwf	Delay@DelayCount,c
  2936  0016F4  0EFF               	movlw	255
  2937  0016F6  203D               	addwfc	Delay@DelayCount+1,w,c
  2938  0016F8  6E3D               	movwf	Delay@DelayCount+1,c
  2939  0016FA                     l2023:
  2940                           
  2941                           ;devices.c: 16: TMR4_Ticked=0;
  2942  0016FA  0E00               	movlw	0
  2943  0016FC  6E09               	movwf	_TMR4_Ticked+1,c
  2944  0016FE  0E00               	movlw	0
  2945  001700  6E08               	movwf	_TMR4_Ticked,c
  2946  001702                     l2025:
  2947  001702  503C               	movf	Delay@DelayCount,w,c
  2948  001704  103D               	iorwf	Delay@DelayCount+1,w,c
  2949  001706  B4D8               	btfsc	status,2,c
  2950  001708  0012               	return	
  2951  00170A  D7ED               	goto	l2019
  2952  00170C                     __end_of_Delay:
  2953                           	opt stack 0
  2954                           tblptru	equ	0xFF8
  2955                           tblptrh	equ	0xFF7
  2956                           tblptrl	equ	0xFF6
  2957                           tablat	equ	0xFF5
  2958                           intcon	equ	0xFF2
  2959                           intcon2	equ	0xFF1
  2960                           postinc0	equ	0xFEE
  2961                           wreg	equ	0xFE8
  2962                           status	equ	0xFD8
  2963                           
  2964 ;; *************** function _INTERRUPT_InterruptManager *****************
  2965 ;; Defined at:
  2966 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;		None
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;		None
  2971 ;; Return value:  Size  Location     Type
  2972 ;;                  1    wreg      void 
  2973 ;; Registers used:
  2974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2982 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2983 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2984 ;;Total ram usage:       14 bytes
  2985 ;; Hardware stack levels used:    1
  2986 ;; Hardware stack levels required when called:    2
  2987 ;; This function calls:
  2988 ;;		_I2C1_BusCollisionISR
  2989 ;;		_I2C1_ISR
  2990 ;;		_TMR2_ISR
  2991 ;;		_TMR4_ISR
  2992 ;; This function is called by:
  2993 ;;		Interrupt level 2
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           	psect	intcode
  2998  000008                     __pintcode:
  2999                           	opt stack 0
  3000  000008                     _INTERRUPT_InterruptManager:
  3001                           	opt stack 24
  3002                           
  3003                           ;incstack = 0
  3004  000008  824B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3005  00000A  CFFA F02E          	movff	pclath,??_INTERRUPT_InterruptManager
  3006  00000E  CFFB F02F          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3007  000012  CFE9 F030          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  3008  000016  CFEA F031          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  3009  00001A  CFE1 F032          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  3010  00001E  CFE2 F033          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  3011  000022  CFD9 F034          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  3012  000026  CFDA F035          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  3013  00002A  CFF3 F036          	movff	prodl,??_INTERRUPT_InterruptManager+8
  3014  00002E  CFF4 F037          	movff	prodh,??_INTERRUPT_InterruptManager+9
  3015  000032  CFF6 F038          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  3016  000036  CFF7 F039          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  3017  00003A  CFF8 F03A          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  3018  00003E  CFF5 F03B          	movff	tablat,??_INTERRUPT_InterruptManager+13
  3019                           
  3020                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE2bits.BCL1IE == 1 && PIR2bits.BC
      +                          L1IF == 1)
  3021  000042  BCF2               	btfsc	intcon,6,c	;volatile
  3022  000044  A6A0               	btfss	4000,3,c	;volatile
  3023  000046  D003               	goto	i2l1943
  3024  000048  B6A1               	btfsc	4001,3,c	;volatile
  3025                           
  3026                           ;interrupt_manager.c: 61: {
  3027                           ;interrupt_manager.c: 62: I2C1_BusCollisionISR();
  3028  00004A  EC5B  F00C         	call	_I2C1_BusCollisionISR	;wreg free
  3029  00004E                     i2l1943:
  3030                           
  3031                           ;interrupt_manager.c: 63: }
  3032                           ;interrupt_manager.c: 64: if(INTCONbits.PEIE == 1 && PIE1bits.SSP1IE == 1 && PIR1bits.SS
      +                          P1IF == 1)
  3033  00004E  BCF2               	btfsc	intcon,6,c	;volatile
  3034  000050  A69D               	btfss	3997,3,c	;volatile
  3035  000052  D003               	goto	i2l1951
  3036  000054  B69E               	btfsc	3998,3,c	;volatile
  3037                           
  3038                           ;interrupt_manager.c: 65: {
  3039                           ;interrupt_manager.c: 66: I2C1_ISR();
  3040  000056  EC08  F008         	call	_I2C1_ISR	;wreg free
  3041  00005A                     i2l1951:
  3042                           
  3043                           ;interrupt_manager.c: 67: }
  3044                           ;interrupt_manager.c: 68: if(INTCONbits.PEIE == 1 && PIE5bits.TMR4IE == 1 && PIR5bits.TM
      +                          R4IF == 1)
  3045  00005A  BCF2               	btfsc	intcon,6,c	;volatile
  3046  00005C  A07D               	btfss	3965,0,c	;volatile
  3047  00005E  D003               	goto	i2l1959
  3048  000060  B07E               	btfsc	3966,0,c	;volatile
  3049                           
  3050                           ;interrupt_manager.c: 69: {
  3051                           ;interrupt_manager.c: 70: TMR4_ISR();
  3052  000062  ECCC  F00B         	call	_TMR4_ISR	;wreg free
  3053  000066                     i2l1959:
  3054                           
  3055                           ;interrupt_manager.c: 71: }
  3056                           ;interrupt_manager.c: 72: if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bits.TM
      +                          R2IF == 1)
  3057  000066  BCF2               	btfsc	intcon,6,c	;volatile
  3058  000068  A29D               	btfss	3997,1,c	;volatile
  3059  00006A  D003               	goto	i2l407
  3060  00006C  B29E               	btfsc	3998,1,c	;volatile
  3061                           
  3062                           ;interrupt_manager.c: 73: {
  3063                           ;interrupt_manager.c: 74: TMR2_ISR();
  3064  00006E  ECDC  F00B         	call	_TMR2_ISR	;wreg free
  3065  000072                     i2l407:
  3066  000072  C03B  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  3067  000076  C03A  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  3068  00007A  C039  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  3069  00007E  C038  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  3070  000082  C037  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  3071  000086  C036  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  3072  00008A  C035  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  3073  00008E  C034  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  3074  000092  C033  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  3075  000096  C032  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  3076  00009A  C031  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  3077  00009E  C030  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  3078  0000A2  C02F  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3079  0000A6  C02E  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3080  0000AA  924B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3081  0000AC  0011               	retfie		f
  3082  0000AE                     __end_of_INTERRUPT_InterruptManager:
  3083                           	opt stack 0
  3084                           pclatu	equ	0xFFB
  3085                           pclath	equ	0xFFA
  3086                           tblptru	equ	0xFF8
  3087                           tblptrh	equ	0xFF7
  3088                           tblptrl	equ	0xFF6
  3089                           tablat	equ	0xFF5
  3090                           prodh	equ	0xFF4
  3091                           prodl	equ	0xFF3
  3092                           intcon	equ	0xFF2
  3093                           intcon2	equ	0xFF1
  3094                           postinc0	equ	0xFEE
  3095                           fsr0h	equ	0xFEA
  3096                           fsr0l	equ	0xFE9
  3097                           wreg	equ	0xFE8
  3098                           fsr1h	equ	0xFE2
  3099                           fsr1l	equ	0xFE1
  3100                           fsr2h	equ	0xFDA
  3101                           fsr2l	equ	0xFD9
  3102                           status	equ	0xFD8
  3103                           
  3104 ;; *************** function _TMR4_ISR *****************
  3105 ;; Defined at:
  3106 ;;		line 121 in file "mcc_generated_files/tmr4.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;		None
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;		None
  3111 ;; Return value:  Size  Location     Type
  3112 ;;                  1    wreg      void 
  3113 ;; Registers used:
  3114 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3115 ;; Tracked objects:
  3116 ;;		On entry : 0/0
  3117 ;;		On exit  : 0/0
  3118 ;;		Unchanged: 0/0
  3119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3124 ;;Total ram usage:        0 bytes
  3125 ;; Hardware stack levels used:    1
  3126 ;; Hardware stack levels required when called:    1
  3127 ;; This function calls:
  3128 ;;		Absolute function
  3129 ;;		_TMR4_DefaultInterruptHandler
  3130 ;;		_TMR4_Interrupt
  3131 ;; This function is called by:
  3132 ;;		_INTERRUPT_InterruptManager
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           	psect	text28
  3137  001798                     __ptext28:
  3138                           	opt stack 0
  3139  001798                     _TMR4_ISR:
  3140                           	opt stack 24
  3141                           
  3142                           ;tmr4.c: 125: PIR5bits.TMR4IF = 0;
  3143                           
  3144                           ;incstack = 0
  3145  001798  907E               	bcf	3966,0,c	;volatile
  3146                           
  3147                           ;tmr4.c: 127: if(TMR4_InterruptHandler)
  3148  00179A  5045               	movf	_TMR4_InterruptHandler,w,c
  3149  00179C  1046               	iorwf	_TMR4_InterruptHandler+1,w,c
  3150  00179E  B4D8               	btfsc	status,2,c
  3151  0017A0  0012               	return	
  3152                           
  3153                           ;tmr4.c: 128: {
  3154                           ;tmr4.c: 129: TMR4_InterruptHandler();
  3155  0017A2  D801               	call	i2u38_48
  3156  0017A4  0012               	return	
  3157  0017A6                     i2u38_48:
  3158  0017A6  0005               	push	
  3159  0017A8  6EFA               	movwf	pclath,c
  3160  0017AA  5045               	movf	_TMR4_InterruptHandler,w,c
  3161  0017AC  6EFD               	movwf	tosl,c
  3162  0017AE  5046               	movf	_TMR4_InterruptHandler+1,w,c
  3163  0017B0  6EFE               	movwf	tosh,c
  3164  0017B2  6AFF               	clrf	tosu,c
  3165  0017B4  50FA               	movf	pclath,w,c
  3166  0017B6  0012               	return		;indir
  3167  0017B8                     __end_of_TMR4_ISR:
  3168                           	opt stack 0
  3169                           tosu	equ	0xFFF
  3170                           tosh	equ	0xFFE
  3171                           tosl	equ	0xFFD
  3172                           pclatu	equ	0xFFB
  3173                           pclath	equ	0xFFA
  3174                           tblptru	equ	0xFF8
  3175                           tblptrh	equ	0xFF7
  3176                           tblptrl	equ	0xFF6
  3177                           tablat	equ	0xFF5
  3178                           prodh	equ	0xFF4
  3179                           prodl	equ	0xFF3
  3180                           intcon	equ	0xFF2
  3181                           intcon2	equ	0xFF1
  3182                           postinc0	equ	0xFEE
  3183                           fsr0h	equ	0xFEA
  3184                           fsr0l	equ	0xFE9
  3185                           wreg	equ	0xFE8
  3186                           fsr1h	equ	0xFE2
  3187                           fsr1l	equ	0xFE1
  3188                           fsr2h	equ	0xFDA
  3189                           fsr2l	equ	0xFD9
  3190                           status	equ	0xFD8
  3191                           
  3192 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  3193 ;; Defined at:
  3194 ;;		line 138 in file "mcc_generated_files/tmr4.c"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;		None
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;		None
  3199 ;; Return value:  Size  Location     Type
  3200 ;;                  1    wreg      void 
  3201 ;; Registers used:
  3202 ;;		None
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/0
  3205 ;;		On exit  : 0/0
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3212 ;;Total ram usage:        0 bytes
  3213 ;; Hardware stack levels used:    1
  3214 ;; This function calls:
  3215 ;;		Nothing
  3216 ;; This function is called by:
  3217 ;;		_TMR4_Initialize
  3218 ;;		_TMR4_ISR
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           	psect	text29
  3223  0018B2                     __ptext29:
  3224                           	opt stack 0
  3225  0018B2                     _TMR4_DefaultInterruptHandler:
  3226                           	opt stack 24
  3227                           
  3228                           ;incstack = 0
  3229  0018B2  0012               	return		;funcret
  3230  0018B4                     __end_of_TMR4_DefaultInterruptHandler:
  3231                           	opt stack 0
  3232                           tosu	equ	0xFFF
  3233                           tosh	equ	0xFFE
  3234                           tosl	equ	0xFFD
  3235                           pclatu	equ	0xFFB
  3236                           pclath	equ	0xFFA
  3237                           tblptru	equ	0xFF8
  3238                           tblptrh	equ	0xFF7
  3239                           tblptrl	equ	0xFF6
  3240                           tablat	equ	0xFF5
  3241                           prodh	equ	0xFF4
  3242                           prodl	equ	0xFF3
  3243                           intcon	equ	0xFF2
  3244                           intcon2	equ	0xFF1
  3245                           postinc0	equ	0xFEE
  3246                           fsr0h	equ	0xFEA
  3247                           fsr0l	equ	0xFE9
  3248                           wreg	equ	0xFE8
  3249                           fsr1h	equ	0xFE2
  3250                           fsr1l	equ	0xFE1
  3251                           fsr2h	equ	0xFDA
  3252                           fsr2l	equ	0xFD9
  3253                           status	equ	0xFD8
  3254                           
  3255 ;; *************** function _TMR4_Interrupt *****************
  3256 ;; Defined at:
  3257 ;;		line 22 in file "devices.c"
  3258 ;; Parameters:    Size  Location     Type
  3259 ;;		None
  3260 ;; Auto vars:     Size  Location     Type
  3261 ;;		None
  3262 ;; Return value:  Size  Location     Type
  3263 ;;                  1    wreg      void 
  3264 ;; Registers used:
  3265 ;;		wreg, status,2
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3275 ;;Total ram usage:        0 bytes
  3276 ;; Hardware stack levels used:    1
  3277 ;; This function calls:
  3278 ;;		Nothing
  3279 ;; This function is called by:
  3280 ;;		_main
  3281 ;;		_TMR4_ISR
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           
  3285                           	psect	text30
  3286  001898                     __ptext30:
  3287                           	opt stack 0
  3288  001898                     _TMR4_Interrupt:
  3289                           	opt stack 24
  3290                           
  3291                           ;devices.c: 24: TMR4_Ticked = 1;
  3292                           
  3293                           ;incstack = 0
  3294  001898  0E00               	movlw	0
  3295  00189A  6E09               	movwf	_TMR4_Ticked+1,c
  3296  00189C  0E01               	movlw	1
  3297  00189E  6E08               	movwf	_TMR4_Ticked,c
  3298  0018A0  0012               	return		;funcret
  3299  0018A2                     __end_of_TMR4_Interrupt:
  3300                           	opt stack 0
  3301                           tosu	equ	0xFFF
  3302                           tosh	equ	0xFFE
  3303                           tosl	equ	0xFFD
  3304                           pclatu	equ	0xFFB
  3305                           pclath	equ	0xFFA
  3306                           tblptru	equ	0xFF8
  3307                           tblptrh	equ	0xFF7
  3308                           tblptrl	equ	0xFF6
  3309                           tablat	equ	0xFF5
  3310                           prodh	equ	0xFF4
  3311                           prodl	equ	0xFF3
  3312                           intcon	equ	0xFF2
  3313                           intcon2	equ	0xFF1
  3314                           postinc0	equ	0xFEE
  3315                           fsr0h	equ	0xFEA
  3316                           fsr0l	equ	0xFE9
  3317                           wreg	equ	0xFE8
  3318                           fsr1h	equ	0xFE2
  3319                           fsr1l	equ	0xFE1
  3320                           fsr2h	equ	0xFDA
  3321                           fsr2l	equ	0xFD9
  3322                           status	equ	0xFD8
  3323                           
  3324 ;; *************** function _TMR2_ISR *****************
  3325 ;; Defined at:
  3326 ;;		line 121 in file "mcc_generated_files/tmr2.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;		None
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;		None
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  1    wreg      void 
  3333 ;; Registers used:
  3334 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3344 ;;Total ram usage:        0 bytes
  3345 ;; Hardware stack levels used:    1
  3346 ;; Hardware stack levels required when called:    1
  3347 ;; This function calls:
  3348 ;;		Absolute function
  3349 ;;		_TMR2_DefaultInterruptHandler
  3350 ;; This function is called by:
  3351 ;;		_INTERRUPT_InterruptManager
  3352 ;; This function uses a non-reentrant model
  3353 ;;
  3354                           
  3355                           	psect	text31
  3356  0017B8                     __ptext31:
  3357                           	opt stack 0
  3358  0017B8                     _TMR2_ISR:
  3359                           	opt stack 24
  3360                           
  3361                           ;tmr2.c: 125: PIR1bits.TMR2IF = 0;
  3362                           
  3363                           ;incstack = 0
  3364  0017B8  929E               	bcf	3998,1,c	;volatile
  3365                           
  3366                           ;tmr2.c: 127: if(TMR2_InterruptHandler)
  3367  0017BA  5047               	movf	_TMR2_InterruptHandler,w,c
  3368  0017BC  1048               	iorwf	_TMR2_InterruptHandler+1,w,c
  3369  0017BE  B4D8               	btfsc	status,2,c
  3370  0017C0  0012               	return	
  3371                           
  3372                           ;tmr2.c: 128: {
  3373                           ;tmr2.c: 129: TMR2_InterruptHandler();
  3374  0017C2  D801               	call	i2u36_48
  3375  0017C4  0012               	return	
  3376  0017C6                     i2u36_48:
  3377  0017C6  0005               	push	
  3378  0017C8  6EFA               	movwf	pclath,c
  3379  0017CA  5047               	movf	_TMR2_InterruptHandler,w,c
  3380  0017CC  6EFD               	movwf	tosl,c
  3381  0017CE  5048               	movf	_TMR2_InterruptHandler+1,w,c
  3382  0017D0  6EFE               	movwf	tosh,c
  3383  0017D2  6AFF               	clrf	tosu,c
  3384  0017D4  50FA               	movf	pclath,w,c
  3385  0017D6  0012               	return		;indir
  3386  0017D8                     __end_of_TMR2_ISR:
  3387                           	opt stack 0
  3388                           tosu	equ	0xFFF
  3389                           tosh	equ	0xFFE
  3390                           tosl	equ	0xFFD
  3391                           pclatu	equ	0xFFB
  3392                           pclath	equ	0xFFA
  3393                           tblptru	equ	0xFF8
  3394                           tblptrh	equ	0xFF7
  3395                           tblptrl	equ	0xFF6
  3396                           tablat	equ	0xFF5
  3397                           prodh	equ	0xFF4
  3398                           prodl	equ	0xFF3
  3399                           intcon	equ	0xFF2
  3400                           intcon2	equ	0xFF1
  3401                           postinc0	equ	0xFEE
  3402                           fsr0h	equ	0xFEA
  3403                           fsr0l	equ	0xFE9
  3404                           wreg	equ	0xFE8
  3405                           fsr1h	equ	0xFE2
  3406                           fsr1l	equ	0xFE1
  3407                           fsr2h	equ	0xFDA
  3408                           fsr2l	equ	0xFD9
  3409                           status	equ	0xFD8
  3410                           
  3411 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  3412 ;; Defined at:
  3413 ;;		line 138 in file "mcc_generated_files/tmr2.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;		None
  3416 ;; Auto vars:     Size  Location     Type
  3417 ;;		None
  3418 ;; Return value:  Size  Location     Type
  3419 ;;                  1    wreg      void 
  3420 ;; Registers used:
  3421 ;;		None
  3422 ;; Tracked objects:
  3423 ;;		On entry : 0/0
  3424 ;;		On exit  : 0/0
  3425 ;;		Unchanged: 0/0
  3426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3431 ;;Total ram usage:        0 bytes
  3432 ;; Hardware stack levels used:    1
  3433 ;; This function calls:
  3434 ;;		Nothing
  3435 ;; This function is called by:
  3436 ;;		_TMR2_Initialize
  3437 ;;		_TMR2_ISR
  3438 ;; This function uses a non-reentrant model
  3439 ;;
  3440                           
  3441                           	psect	text32
  3442  0018B4                     __ptext32:
  3443                           	opt stack 0
  3444  0018B4                     _TMR2_DefaultInterruptHandler:
  3445                           	opt stack 24
  3446                           
  3447                           ;incstack = 0
  3448  0018B4  0012               	return		;funcret
  3449  0018B6                     __end_of_TMR2_DefaultInterruptHandler:
  3450                           	opt stack 0
  3451                           tosu	equ	0xFFF
  3452                           tosh	equ	0xFFE
  3453                           tosl	equ	0xFFD
  3454                           pclatu	equ	0xFFB
  3455                           pclath	equ	0xFFA
  3456                           tblptru	equ	0xFF8
  3457                           tblptrh	equ	0xFF7
  3458                           tblptrl	equ	0xFF6
  3459                           tablat	equ	0xFF5
  3460                           prodh	equ	0xFF4
  3461                           prodl	equ	0xFF3
  3462                           intcon	equ	0xFF2
  3463                           intcon2	equ	0xFF1
  3464                           postinc0	equ	0xFEE
  3465                           fsr0h	equ	0xFEA
  3466                           fsr0l	equ	0xFE9
  3467                           wreg	equ	0xFE8
  3468                           fsr1h	equ	0xFE2
  3469                           fsr1l	equ	0xFE1
  3470                           fsr2h	equ	0xFDA
  3471                           fsr2l	equ	0xFD9
  3472                           status	equ	0xFD8
  3473                           
  3474 ;; *************** function _I2C1_ISR *****************
  3475 ;; Defined at:
  3476 ;;		line 233 in file "mcc_generated_files/i2c1.c"
  3477 ;; Parameters:    Size  Location     Type
  3478 ;;		None
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;		None
  3481 ;; Return value:  Size  Location     Type
  3482 ;;                  1    wreg      void 
  3483 ;; Registers used:
  3484 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3485 ;; Tracked objects:
  3486 ;;		On entry : 0/0
  3487 ;;		On exit  : 0/0
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3492 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3493 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3494 ;;Total ram usage:        2 bytes
  3495 ;; Hardware stack levels used:    1
  3496 ;; Hardware stack levels required when called:    1
  3497 ;; This function calls:
  3498 ;;		_I2C1_FunctionComplete
  3499 ;;		_I2C1_Stop
  3500 ;; This function is called by:
  3501 ;;		_INTERRUPT_InterruptManager
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           	psect	text33
  3506  001010                     __ptext33:
  3507                           	opt stack 0
  3508  001010                     _I2C1_ISR:
  3509                           	opt stack 24
  3510                           
  3511                           ;i2c1.c: 236: static uint8_t *pi2c_buf_ptr;
  3512                           ;i2c1.c: 237: static uint16_t i2c_address = 0;
  3513                           ;i2c1.c: 238: static uint8_t i2c_bytes_left = 0;
  3514                           ;i2c1.c: 239: static uint8_t i2c_10bit_address_restart = 0;
  3515                           ;i2c1.c: 241: PIR1bits.SSP1IF = 0;
  3516                           
  3517                           ;incstack = 0
  3518  001010  969E               	bcf	3998,3,c	;volatile
  3519                           
  3520                           ;i2c1.c: 245: if(SSP1CON1bits.WCOL)
  3521  001012  AEC6               	btfss	4038,7,c	;volatile
  3522  001014  D0F9               	goto	i2l1661
  3523                           
  3524                           ;i2c1.c: 246: {
  3525                           ;i2c1.c: 248: SSP1CON1bits.WCOL = 0;
  3526  001016  9EC6               	bcf	4038,7,c	;volatile
  3527                           
  3528                           ;i2c1.c: 249: i2c1_state = S_MASTER_IDLE;
  3529  001018  0E00               	movlw	0
  3530  00101A  6E14               	movwf	_i2c1_state,c
  3531                           
  3532                           ;i2c1.c: 250: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
  3533  00101C  EE20 F003          	lfsr	2,3
  3534  001020  500C               	movf	_p_i2c1_current,w,c
  3535  001022  26D9               	addwf	fsr2l,f,c
  3536  001024  500D               	movf	_p_i2c1_current+1,w,c
  3537  001026  22DA               	addwfc	fsr2h,f,c
  3538  001028  CFDE F02C          	movff	postinc2,??_I2C1_ISR
  3539  00102C  CFDD F02D          	movff	postdec2,??_I2C1_ISR+1
  3540  001030  C02C  FFD9         	movff	??_I2C1_ISR,fsr2l
  3541  001034  C02D  FFDA         	movff	??_I2C1_ISR+1,fsr2h
  3542  001038  0E01               	movlw	1
  3543  00103A  6EDF               	movwf	indf2,c
  3544                           
  3545                           ;i2c1.c: 253: p_i2c1_current = (0);
  3546  00103C  0E00               	movlw	0
  3547  00103E  6E0C               	movwf	_p_i2c1_current,c
  3548  001040  0E00               	movlw	0
  3549  001042  6E0D               	movwf	_p_i2c1_current+1,c
  3550                           
  3551                           ;i2c1.c: 255: return;
  3552  001044  0012               	return	
  3553  001046                     i2l128:
  3554                           
  3555                           ;i2c1.c: 263: if(i2c1_object.trStatus.s.empty != 1)
  3556  001046  B205               	btfsc	_i2c1_object+4,1,c
  3557  001048  0012               	return	
  3558                           
  3559                           ;i2c1.c: 264: {
  3560                           ;i2c1.c: 266: p_i2c1_current = i2c1_object.pTrHead;
  3561  00104A  C003  F00C         	movff	_i2c1_object+2,_p_i2c1_current
  3562  00104E  C004  F00D         	movff	_i2c1_object+3,_p_i2c1_current+1
  3563                           
  3564                           ;i2c1.c: 267: i2c1_trb_count = i2c1_object.pTrHead->count;
  3565  001052  C003  FFD9         	movff	_i2c1_object+2,fsr2l
  3566  001056  C004  FFDA         	movff	_i2c1_object+3,fsr2h
  3567  00105A  50DF               	movf	indf2,w,c
  3568  00105C  6E13               	movwf	_i2c1_trb_count,c
  3569                           
  3570                           ;i2c1.c: 268: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
  3571  00105E  EE20 F001          	lfsr	2,1
  3572  001062  5003               	movf	_i2c1_object+2,w,c
  3573  001064  26D9               	addwf	fsr2l,f,c
  3574  001066  5004               	movf	_i2c1_object+3,w,c
  3575  001068  22DA               	addwfc	fsr2h,f,c
  3576  00106A  CFDE F00E          	movff	postinc2,_p_i2c1_trb_current
  3577  00106E  CFDD F00F          	movff	postdec2,_p_i2c1_trb_current+1
  3578                           
  3579                           ;i2c1.c: 270: i2c1_object.pTrHead++;
  3580  001072  0E06               	movlw	6
  3581  001074  2603               	addwf	_i2c1_object+2,f,c
  3582  001076  0E00               	movlw	0
  3583  001078  2204               	addwfc	_i2c1_object+3,f,c
  3584                           
  3585                           ;i2c1.c: 273: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
  3586  00107A  0E27               	movlw	low (_i2c1_tr_queue+6)
  3587  00107C  1803               	xorwf	_i2c1_object+2,w,c
  3588  00107E  E108               	bnz	i2l1553
  3589  001080  0E00               	movlw	high (_i2c1_tr_queue+6)
  3590  001082  1804               	xorwf	_i2c1_object+3,w,c
  3591  001084  A4D8               	btfss	status,2,c
  3592  001086  D004               	goto	i2l1553
  3593                           
  3594                           ;i2c1.c: 274: {
  3595                           ;i2c1.c: 276: i2c1_object.pTrHead = i2c1_tr_queue;
  3596  001088  0E21               	movlw	low _i2c1_tr_queue
  3597  00108A  6E03               	movwf	_i2c1_object+2,c
  3598  00108C  0E00               	movlw	high _i2c1_tr_queue
  3599  00108E  6E04               	movwf	_i2c1_object+3,c
  3600  001090                     i2l1553:
  3601                           
  3602                           ;i2c1.c: 277: }
  3603                           ;i2c1.c: 281: i2c1_object.trStatus.s.full = 0;
  3604  001090  9005               	bcf	_i2c1_object+4,0,c
  3605                           
  3606                           ;i2c1.c: 284: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
  3607  001092  5001               	movf	_i2c1_object,w,c
  3608  001094  1803               	xorwf	_i2c1_object+2,w,c
  3609  001096  E104               	bnz	i2l131
  3610  001098  5002               	movf	_i2c1_object+1,w,c
  3611  00109A  1804               	xorwf	_i2c1_object+3,w,c
  3612  00109C  B4D8               	btfsc	status,2,c
  3613                           
  3614                           ;i2c1.c: 285: {
  3615                           ;i2c1.c: 287: i2c1_object.trStatus.s.empty = 1;
  3616  00109E  8205               	bsf	_i2c1_object+4,1,c
  3617  0010A0                     i2l131:
  3618                           
  3619                           ;i2c1.c: 288: }
  3620                           ;i2c1.c: 291: SSP1CON2bits.SEN = 1;
  3621  0010A0  80C5               	bsf	4037,0,c	;volatile
  3622                           
  3623                           ;i2c1.c: 294: i2c1_state = S_MASTER_SEND_ADDR;
  3624  0010A2  0E02               	movlw	2
  3625  0010A4  6E14               	movwf	_i2c1_state,c
  3626                           
  3627                           ;i2c1.c: 295: }
  3628                           ;i2c1.c: 297: break;
  3629  0010A6  0012               	return	
  3630  0010A8                     i2l133:
  3631                           
  3632                           ;i2c1.c: 304: SSP1CON2bits.RSEN = 1;
  3633  0010A8  82C5               	bsf	4037,1,c	;volatile
  3634                           
  3635                           ;i2c1.c: 307: i2c1_state = S_MASTER_SEND_ADDR;
  3636  0010AA  0E02               	movlw	2
  3637  0010AC  6E14               	movwf	_i2c1_state,c
  3638                           
  3639                           ;i2c1.c: 309: break;
  3640  0010AE  0012               	return	
  3641  0010B0                     i2l134:
  3642                           
  3643                           ;i2c1.c: 313: if(SSP1CON2bits.ACKSTAT)
  3644  0010B0  ACC5               	btfss	4037,6,c	;volatile
  3645  0010B2  D005               	goto	i2l1565
  3646                           
  3647                           ;i2c1.c: 314: {
  3648                           ;i2c1.c: 315: i2c1_object.i2cErrors++;
  3649  0010B4  2A07               	incf	_i2c1_object+6,f,c
  3650                           
  3651                           ;i2c1.c: 316: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  3652  0010B6  0E04               	movlw	4
  3653  0010B8  ECDC  F00A         	call	_I2C1_Stop
  3654                           
  3655                           ;i2c1.c: 317: }
  3656  0010BC  0012               	return	
  3657  0010BE                     i2l1565:
  3658                           
  3659                           ;i2c1.c: 318: else
  3660                           ;i2c1.c: 319: {
  3661                           ;i2c1.c: 321: SSP1BUF = (i2c_address >> 1) & 0x00FF;
  3662  0010BE  90D8               	bcf	status,0,c
  3663  0010C0  3028               	rrcf	I2C1_ISR@i2c_address+1,w,c
  3664  0010C2  6E2D               	movwf	(??_I2C1_ISR+1)& (0+255),c
  3665  0010C4  3027               	rrcf	I2C1_ISR@i2c_address,w,c
  3666  0010C6  6E2C               	movwf	??_I2C1_ISR& (0+255),c
  3667  0010C8  502C               	movf	??_I2C1_ISR,w,c
  3668  0010CA  6EC9               	movwf	4041,c	;volatile
  3669                           
  3670                           ;i2c1.c: 324: if(i2c_address & 0x01)
  3671  0010CC  A027               	btfss	I2C1_ISR@i2c_address,0,c
  3672  0010CE  D003               	goto	i2l1571
  3673                           
  3674                           ;i2c1.c: 325: {
  3675                           ;i2c1.c: 328: i2c1_state = S_MASTER_10BIT_RESTART;
  3676  0010D0  0E0B               	movlw	11
  3677  0010D2  6E14               	movwf	_i2c1_state,c
  3678                           
  3679                           ;i2c1.c: 329: }
  3680  0010D4  0012               	return	
  3681  0010D6                     i2l1571:
  3682                           
  3683                           ;i2c1.c: 330: else
  3684                           ;i2c1.c: 331: {
  3685                           ;i2c1.c: 333: i2c1_state = S_MASTER_SEND_DATA;
  3686  0010D6  0E03               	movlw	3
  3687  0010D8  6E14               	movwf	_i2c1_state,c
  3688                           
  3689                           ;i2c1.c: 334: }
  3690                           ;i2c1.c: 335: }
  3691                           ;i2c1.c: 337: break;
  3692  0010DA  0012               	return	
  3693  0010DC                     i2l139:
  3694                           
  3695                           ;i2c1.c: 341: if(SSP1CON2bits.ACKSTAT)
  3696  0010DC  ACC5               	btfss	4037,6,c	;volatile
  3697  0010DE  D005               	goto	i2l140
  3698                           
  3699                           ;i2c1.c: 342: {
  3700                           ;i2c1.c: 343: i2c1_object.i2cErrors++;
  3701  0010E0  2A07               	incf	_i2c1_object+6,f,c
  3702                           
  3703                           ;i2c1.c: 344: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  3704  0010E2  0E04               	movlw	4
  3705  0010E4  ECDC  F00A         	call	_I2C1_Stop
  3706                           
  3707                           ;i2c1.c: 345: }
  3708  0010E8  0012               	return	
  3709  0010EA                     i2l140:
  3710                           
  3711                           ;i2c1.c: 346: else
  3712                           ;i2c1.c: 347: {
  3713                           ;i2c1.c: 350: SSP1CON2bits.RSEN = 1;
  3714  0010EA  82C5               	bsf	4037,1,c	;volatile
  3715                           
  3716                           ;i2c1.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  3717  0010EC  C027  F02C         	movff	I2C1_ISR@i2c_address,??_I2C1_ISR
  3718  0010F0  C028  F02D         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR+1
  3719  0010F4  C02D  F02C         	movff	??_I2C1_ISR+1,??_I2C1_ISR
  3720  0010F8  6A2D               	clrf	??_I2C1_ISR+1,c
  3721  0010FA  0E06               	movlw	6
  3722  0010FC  162C               	andwf	??_I2C1_ISR,f,c
  3723  0010FE  0E00               	movlw	0
  3724  001100  162D               	andwf	??_I2C1_ISR+1,f,c
  3725  001102  0EF0               	movlw	240
  3726  001104  102C               	iorwf	??_I2C1_ISR,w,c
  3727  001106  6E27               	movwf	I2C1_ISR@i2c_address,c
  3728  001108  502D               	movf	??_I2C1_ISR+1,w,c
  3729  00110A  6E28               	movwf	I2C1_ISR@i2c_address+1,c
  3730                           
  3731                           ;i2c1.c: 357: i2c_address |= 0x0001;
  3732  00110C  8027               	bsf	I2C1_ISR@i2c_address,0,c
  3733                           
  3734                           ;i2c1.c: 360: i2c_10bit_address_restart = 1;
  3735  00110E  0E01               	movlw	1
  3736  001110  6E11               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
  3737                           
  3738                           ;i2c1.c: 363: i2c1_state = S_MASTER_SEND_ADDR;
  3739  001112  0E02               	movlw	2
  3740  001114  6E14               	movwf	_i2c1_state,c
  3741                           
  3742                           ;i2c1.c: 364: }
  3743                           ;i2c1.c: 366: break;
  3744  001116  0012               	return	
  3745  001118                     i2l1585:
  3746                           
  3747                           ;i2c1.c: 381: if(i2c_10bit_address_restart != 1)
  3748  001118  0411               	decf	I2C1_ISR@i2c_10bit_address_restart,w,c
  3749  00111A  B4D8               	btfsc	status,2,c
  3750  00111C  D01A               	goto	i2l144
  3751                           
  3752                           ;i2c1.c: 382: {
  3753                           ;i2c1.c: 384: i2c_address = p_i2c1_trb_current->address;
  3754  00111E  C00E  FFD9         	movff	_p_i2c1_trb_current,fsr2l
  3755  001122  C00F  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
  3756  001126  CFDE F027          	movff	postinc2,I2C1_ISR@i2c_address
  3757  00112A  CFDD F028          	movff	postdec2,I2C1_ISR@i2c_address+1
  3758                           
  3759                           ;i2c1.c: 385: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
  3760  00112E  EE20 F003          	lfsr	2,3
  3761  001132  500E               	movf	_p_i2c1_trb_current,w,c
  3762  001134  26D9               	addwf	fsr2l,f,c
  3763  001136  500F               	movf	_p_i2c1_trb_current+1,w,c
  3764  001138  22DA               	addwfc	fsr2h,f,c
  3765  00113A  CFDE F00A          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
  3766  00113E  CFDD F00B          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
  3767                           
  3768                           ;i2c1.c: 386: i2c_bytes_left = p_i2c1_trb_current->length;
  3769  001142  EE20 F002          	lfsr	2,2
  3770  001146  500E               	movf	_p_i2c1_trb_current,w,c
  3771  001148  26D9               	addwf	fsr2l,f,c
  3772  00114A  500F               	movf	_p_i2c1_trb_current+1,w,c
  3773  00114C  22DA               	addwfc	fsr2h,f,c
  3774  00114E  50DF               	movf	indf2,w,c
  3775  001150  6E12               	movwf	I2C1_ISR@i2c_bytes_left,c
  3776  001152                     i2l144:
  3777                           
  3778                           ;i2c1.c: 409: else
  3779                           ;i2c1.c: 410: {
  3780                           ;i2c1.c: 412: SSP1BUF = i2c_address;
  3781  001152  C027  FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
  3782                           
  3783                           ;i2c1.c: 413: if(i2c_address & 0x01)
  3784  001156  A027               	btfss	I2C1_ISR@i2c_address,0,c
  3785  001158  D003               	goto	i2l1605
  3786                           
  3787                           ;i2c1.c: 414: {
  3788                           ;i2c1.c: 416: i2c1_state = S_MASTER_ACK_ADDR;
  3789  00115A  0E05               	movlw	5
  3790  00115C  6E14               	movwf	_i2c1_state,c
  3791                           
  3792                           ;i2c1.c: 417: }
  3793  00115E  0012               	return	
  3794  001160                     i2l1605:
  3795                           
  3796                           ;i2c1.c: 418: else
  3797                           ;i2c1.c: 419: {
  3798                           ;i2c1.c: 421: i2c1_state = S_MASTER_SEND_DATA;
  3799  001160  0E03               	movlw	3
  3800  001162  6E14               	movwf	_i2c1_state,c
  3801                           
  3802                           ;i2c1.c: 422: }
  3803                           ;i2c1.c: 423: }
  3804                           ;i2c1.c: 424: break;
  3805  001164  0012               	return	
  3806  001166                     i2l150:
  3807                           
  3808                           ;i2c1.c: 429: if(SSP1CON2bits.ACKSTAT)
  3809  001166  ACC5               	btfss	4037,6,c	;volatile
  3810  001168  D006               	goto	i2l1613
  3811                           
  3812                           ;i2c1.c: 430: {
  3813                           ;i2c1.c: 432: i2c1_object.i2cErrors++;
  3814  00116A  2A07               	incf	_i2c1_object+6,f,c
  3815                           
  3816                           ;i2c1.c: 435: SSP1CON2bits.ACKSTAT = 0;
  3817  00116C  9CC5               	bcf	4037,6,c	;volatile
  3818                           
  3819                           ;i2c1.c: 438: I2C1_Stop(I2C1_DATA_NO_ACK);
  3820  00116E  0E05               	movlw	5
  3821  001170  ECDC  F00A         	call	_I2C1_Stop
  3822                           
  3823                           ;i2c1.c: 440: }
  3824  001174  0012               	return	
  3825  001176                     i2l1613:
  3826                           
  3827                           ;i2c1.c: 441: else
  3828                           ;i2c1.c: 442: {
  3829                           ;i2c1.c: 444: if(i2c_bytes_left-- == 0U)
  3830  001176  0612               	decf	I2C1_ISR@i2c_bytes_left,f,c
  3831  001178  2812               	incf	I2C1_ISR@i2c_bytes_left,w,c
  3832  00117A  A4D8               	btfss	status,2,c
  3833  00117C  D00E               	goto	i2l1623
  3834                           
  3835                           ;i2c1.c: 445: {
  3836                           ;i2c1.c: 449: p_i2c1_trb_current++;
  3837  00117E  0E06               	movlw	6
  3838  001180  260E               	addwf	_p_i2c1_trb_current,f,c
  3839  001182  0E00               	movlw	0
  3840  001184  220F               	addwfc	_p_i2c1_trb_current+1,f,c
  3841                           
  3842                           ;i2c1.c: 452: if(--i2c1_trb_count == 0)
  3843  001186  2E13               	decfsz	_i2c1_trb_count,f,c
  3844  001188  D004               	goto	i2l154
  3845                           
  3846                           ;i2c1.c: 453: {
  3847                           ;i2c1.c: 454: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  3848  00118A  0E00               	movlw	0
  3849  00118C  ECDC  F00A         	call	_I2C1_Stop
  3850                           
  3851                           ;i2c1.c: 455: }
  3852  001190  0012               	return	
  3853  001192                     i2l154:
  3854                           
  3855                           ;i2c1.c: 456: else
  3856                           ;i2c1.c: 457: {
  3857                           ;i2c1.c: 464: SSP1CON2bits.RSEN = 1;
  3858  001192  82C5               	bsf	4037,1,c	;volatile
  3859                           
  3860                           ;i2c1.c: 467: i2c1_state = S_MASTER_SEND_ADDR;
  3861  001194  0E02               	movlw	2
  3862  001196  6E14               	movwf	_i2c1_state,c
  3863                           
  3864                           ;i2c1.c: 469: }
  3865                           ;i2c1.c: 470: }
  3866  001198  0012               	return	
  3867  00119A                     i2l1623:
  3868                           
  3869                           ;i2c1.c: 471: else
  3870                           ;i2c1.c: 472: {
  3871                           ;i2c1.c: 474: SSP1BUF = *pi2c_buf_ptr++;
  3872  00119A  C00A  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
  3873  00119E  C00B  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
  3874  0011A2  50DF               	movf	indf2,w,c
  3875  0011A4  6EC9               	movwf	4041,c	;volatile
  3876  0011A6  4A0A               	infsnz	I2C1_ISR@pi2c_buf_ptr,f,c
  3877  0011A8  2A0B               	incf	I2C1_ISR@pi2c_buf_ptr+1,f,c
  3878                           
  3879                           ;i2c1.c: 475: }
  3880                           ;i2c1.c: 476: }
  3881                           ;i2c1.c: 477: break;
  3882  0011AA  0012               	return	
  3883  0011AC                     i2l157:
  3884                           
  3885                           ;i2c1.c: 482: if(SSP1CON2bits.ACKSTAT)
  3886  0011AC  ACC5               	btfss	4037,6,c	;volatile
  3887  0011AE  D006               	goto	i2l158
  3888                           
  3889                           ;i2c1.c: 483: {
  3890                           ;i2c1.c: 486: i2c1_object.i2cErrors++;
  3891  0011B0  2A07               	incf	_i2c1_object+6,f,c
  3892                           
  3893                           ;i2c1.c: 489: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  3894  0011B2  0E04               	movlw	4
  3895  0011B4  ECDC  F00A         	call	_I2C1_Stop
  3896                           
  3897                           ;i2c1.c: 492: SSP1CON2bits.ACKSTAT = 0;
  3898  0011B8  9CC5               	bcf	4037,6,c	;volatile
  3899                           
  3900                           ;i2c1.c: 493: }
  3901  0011BA  0012               	return	
  3902  0011BC                     i2l158:
  3903                           
  3904                           ;i2c1.c: 494: else
  3905                           ;i2c1.c: 495: {
  3906                           ;i2c1.c: 496: SSP1CON2bits.RCEN = 1;
  3907  0011BC  86C5               	bsf	4037,3,c	;volatile
  3908                           
  3909                           ;i2c1.c: 497: i2c1_state = S_MASTER_ACK_RCV_DATA;
  3910  0011BE  0E08               	movlw	8
  3911  0011C0  6E14               	movwf	_i2c1_state,c
  3912                           
  3913                           ;i2c1.c: 498: }
  3914                           ;i2c1.c: 499: break;
  3915  0011C2  0012               	return	
  3916  0011C4                     i2l1635:
  3917                           
  3918                           ;i2c1.c: 506: i2c1_state = S_MASTER_ACK_RCV_DATA;
  3919  0011C4  0E08               	movlw	8
  3920  0011C6  6E14               	movwf	_i2c1_state,c
  3921                           
  3922                           ;i2c1.c: 509: SSP1CON2bits.RCEN = 1;
  3923  0011C8  86C5               	bsf	4037,3,c	;volatile
  3924                           
  3925                           ;i2c1.c: 511: break;
  3926  0011CA  0012               	return	
  3927  0011CC                     i2l1639:
  3928                           
  3929                           ;i2c1.c: 516: *pi2c_buf_ptr++ = SSP1BUF;
  3930  0011CC  C00A  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
  3931  0011D0  C00B  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
  3932  0011D4  CFC9 FFDF          	movff	4041,indf2	;volatile
  3933  0011D8  4A0A               	infsnz	I2C1_ISR@pi2c_buf_ptr,f,c
  3934  0011DA  2A0B               	incf	I2C1_ISR@pi2c_buf_ptr+1,f,c
  3935                           
  3936                           ;i2c1.c: 519: if(--i2c_bytes_left)
  3937  0011DC  0E01               	movlw	1
  3938  0011DE  5E12               	subwf	I2C1_ISR@i2c_bytes_left,f,c
  3939  0011E0  B4D8               	btfsc	status,2,c
  3940  0011E2  D004               	goto	i2l162
  3941                           
  3942                           ;i2c1.c: 520: {
  3943                           ;i2c1.c: 526: SSP1CON2bits.ACKDT = 0;
  3944  0011E4  9AC5               	bcf	4037,5,c	;volatile
  3945                           
  3946                           ;i2c1.c: 529: i2c1_state = S_MASTER_RCV_DATA;
  3947  0011E6  0E06               	movlw	6
  3948  0011E8  6E14               	movwf	_i2c1_state,c
  3949                           
  3950                           ;i2c1.c: 530: }
  3951  0011EA  D003               	goto	i2l1651
  3952  0011EC                     i2l162:
  3953                           
  3954                           ;i2c1.c: 531: else
  3955                           ;i2c1.c: 532: {
  3956                           ;i2c1.c: 536: SSP1CON2bits.ACKDT = 1;
  3957  0011EC  8AC5               	bsf	4037,5,c	;volatile
  3958                           
  3959                           ;i2c1.c: 538: I2C1_FunctionComplete();
  3960  0011EE  ECFB  F00B         	call	_I2C1_FunctionComplete	;wreg free
  3961  0011F2                     i2l1651:
  3962                           
  3963                           ;i2c1.c: 539: }
  3964                           ;i2c1.c: 542: SSP1CON2bits.ACKEN = 1;
  3965  0011F2  88C5               	bsf	4037,4,c	;volatile
  3966                           
  3967                           ;i2c1.c: 543: break;
  3968  0011F4  0012               	return	
  3969  0011F6                     i2l1653:
  3970                           
  3971                           ;i2c1.c: 546: case S_MASTER_SEND_STOP:
  3972                           ;i2c1.c: 549: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  3973  0011F6  0E00               	movlw	0
  3974  0011F8  ECDC  F00A         	call	_I2C1_Stop
  3975                           
  3976                           ;i2c1.c: 550: break;
  3977  0011FC  0012               	return	
  3978  0011FE                     i2l1655:
  3979                           
  3980                           ;i2c1.c: 556: i2c1_object.i2cErrors++;
  3981  0011FE  2A07               	incf	_i2c1_object+6,f,c
  3982                           
  3983                           ;i2c1.c: 557: I2C1_Stop(I2C1_LOST_STATE);
  3984  001200  0E06               	movlw	6
  3985  001202  ECDC  F00A         	call	_I2C1_Stop
  3986                           
  3987                           ;i2c1.c: 560: }
  3988                           
  3989                           ;i2c1.c: 558: break;
  3990  001206  0012               	return	
  3991  001208                     i2l1661:
  3992  001208  5014               	movf	_i2c1_state,w,c
  3993                           
  3994                           ; Switch size 1, requested type "space"
  3995                           ; Number of cases is 11, Range of values is 0 to 11
  3996                           ; switch strategies available:
  3997                           ; Name         Instructions Cycles
  3998                           ; simple_byte           34    18 (average)
  3999                           ;	Chosen strategy is simple_byte
  4000  00120A  0A00               	xorlw	0	; case 0
  4001  00120C  B4D8               	btfsc	status,2,c
  4002  00120E  D71B               	goto	i2l128
  4003  001210  0A01               	xorlw	1	; case 1
  4004  001212  B4D8               	btfsc	status,2,c
  4005  001214  D749               	goto	i2l133
  4006  001216  0A03               	xorlw	3	; case 2
  4007  001218  B4D8               	btfsc	status,2,c
  4008  00121A  D77E               	goto	i2l1585
  4009  00121C  0A01               	xorlw	1	; case 3
  4010  00121E  B4D8               	btfsc	status,2,c
  4011  001220  D7A2               	goto	i2l150
  4012  001222  0A07               	xorlw	7	; case 4
  4013  001224  B4D8               	btfsc	status,2,c
  4014  001226  D7E7               	goto	i2l1653
  4015  001228  0A01               	xorlw	1	; case 5
  4016  00122A  B4D8               	btfsc	status,2,c
  4017  00122C  D7BF               	goto	i2l157
  4018  00122E  0A03               	xorlw	3	; case 6
  4019  001230  B4D8               	btfsc	status,2,c
  4020  001232  D7C8               	goto	i2l1635
  4021  001234  0A01               	xorlw	1	; case 7
  4022  001236  B4D8               	btfsc	status,2,c
  4023  001238  D7DE               	goto	i2l1653
  4024  00123A  0A0F               	xorlw	15	; case 8
  4025  00123C  B4D8               	btfsc	status,2,c
  4026  00123E  D7C6               	goto	i2l1639
  4027  001240  0A02               	xorlw	2	; case 10
  4028  001242  B4D8               	btfsc	status,2,c
  4029  001244  D735               	goto	i2l134
  4030  001246  0A01               	xorlw	1	; case 11
  4031  001248  B4D8               	btfsc	status,2,c
  4032  00124A  D748               	goto	i2l139
  4033  00124C  D7D8               	goto	i2l1655
  4034  00124E                     __end_of_I2C1_ISR:
  4035                           	opt stack 0
  4036                           tosu	equ	0xFFF
  4037                           tosh	equ	0xFFE
  4038                           tosl	equ	0xFFD
  4039                           pclatu	equ	0xFFB
  4040                           pclath	equ	0xFFA
  4041                           tblptru	equ	0xFF8
  4042                           tblptrh	equ	0xFF7
  4043                           tblptrl	equ	0xFF6
  4044                           tablat	equ	0xFF5
  4045                           prodh	equ	0xFF4
  4046                           prodl	equ	0xFF3
  4047                           intcon	equ	0xFF2
  4048                           intcon2	equ	0xFF1
  4049                           postinc0	equ	0xFEE
  4050                           fsr0h	equ	0xFEA
  4051                           fsr0l	equ	0xFE9
  4052                           wreg	equ	0xFE8
  4053                           fsr1h	equ	0xFE2
  4054                           fsr1l	equ	0xFE1
  4055                           indf2	equ	0xFDF
  4056                           postinc2	equ	0xFDE
  4057                           postdec2	equ	0xFDD
  4058                           fsr2h	equ	0xFDA
  4059                           fsr2l	equ	0xFD9
  4060                           status	equ	0xFD8
  4061                           
  4062 ;; *************** function _I2C1_Stop *****************
  4063 ;; Defined at:
  4064 ;;		line 581 in file "mcc_generated_files/i2c1.c"
  4065 ;; Parameters:    Size  Location     Type
  4066 ;;  completion_c    1    wreg     enum E6983
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;  completion_c    1    2[COMRAM] enum E6983
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  1    wreg      void 
  4071 ;; Registers used:
  4072 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4079 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4080 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4081 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4082 ;;Total ram usage:        3 bytes
  4083 ;; Hardware stack levels used:    1
  4084 ;; This function calls:
  4085 ;;		Nothing
  4086 ;; This function is called by:
  4087 ;;		_I2C1_ISR
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090                           
  4091                           	psect	text34
  4092  0015B8                     __ptext34:
  4093                           	opt stack 0
  4094  0015B8                     _I2C1_Stop:
  4095                           	opt stack 24
  4096                           
  4097                           ;incstack = 0
  4098                           ;I2C1_Stop@completion_code stored from wreg
  4099  0015B8  6E2B               	movwf	I2C1_Stop@completion_code,c
  4100                           
  4101                           ;i2c1.c: 584: SSP1CON2bits.PEN = 1;
  4102  0015BA  84C5               	bsf	4037,2,c	;volatile
  4103                           
  4104                           ;i2c1.c: 587: if (p_i2c1_current->pTrFlag != (0))
  4105  0015BC  EE20 F003          	lfsr	2,3
  4106  0015C0  500C               	movf	_p_i2c1_current,w,c
  4107  0015C2  26D9               	addwf	fsr2l,f,c
  4108  0015C4  500D               	movf	_p_i2c1_current+1,w,c
  4109  0015C6  22DA               	addwfc	fsr2h,f,c
  4110  0015C8  50DE               	movf	postinc2,w,c
  4111  0015CA  10DE               	iorwf	postinc2,w,c
  4112  0015CC  B4D8               	btfsc	status,2,c
  4113  0015CE  D010               	goto	i2l1341
  4114                           
  4115                           ;i2c1.c: 588: {
  4116                           ;i2c1.c: 590: *(p_i2c1_current->pTrFlag) = completion_code;
  4117  0015D0  EE20 F003          	lfsr	2,3
  4118  0015D4  500C               	movf	_p_i2c1_current,w,c
  4119  0015D6  26D9               	addwf	fsr2l,f,c
  4120  0015D8  500D               	movf	_p_i2c1_current+1,w,c
  4121  0015DA  22DA               	addwfc	fsr2h,f,c
  4122  0015DC  CFDE F029          	movff	postinc2,??_I2C1_Stop
  4123  0015E0  CFDD F02A          	movff	postdec2,??_I2C1_Stop+1
  4124  0015E4  C029  FFD9         	movff	??_I2C1_Stop,fsr2l
  4125  0015E8  C02A  FFDA         	movff	??_I2C1_Stop+1,fsr2h
  4126  0015EC  C02B  FFDF         	movff	I2C1_Stop@completion_code,indf2
  4127  0015F0                     i2l1341:
  4128                           
  4129                           ;i2c1.c: 591: }
  4130                           ;i2c1.c: 594: i2c1_state = S_MASTER_IDLE;
  4131  0015F0  0E00               	movlw	0
  4132  0015F2  6E14               	movwf	_i2c1_state,c
  4133  0015F4  0012               	return		;funcret
  4134  0015F6                     __end_of_I2C1_Stop:
  4135                           	opt stack 0
  4136                           tosu	equ	0xFFF
  4137                           tosh	equ	0xFFE
  4138                           tosl	equ	0xFFD
  4139                           pclatu	equ	0xFFB
  4140                           pclath	equ	0xFFA
  4141                           tblptru	equ	0xFF8
  4142                           tblptrh	equ	0xFF7
  4143                           tblptrl	equ	0xFF6
  4144                           tablat	equ	0xFF5
  4145                           prodh	equ	0xFF4
  4146                           prodl	equ	0xFF3
  4147                           intcon	equ	0xFF2
  4148                           intcon2	equ	0xFF1
  4149                           postinc0	equ	0xFEE
  4150                           fsr0h	equ	0xFEA
  4151                           fsr0l	equ	0xFE9
  4152                           wreg	equ	0xFE8
  4153                           fsr1h	equ	0xFE2
  4154                           fsr1l	equ	0xFE1
  4155                           indf2	equ	0xFDF
  4156                           postinc2	equ	0xFDE
  4157                           postdec2	equ	0xFDD
  4158                           fsr2h	equ	0xFDA
  4159                           fsr2l	equ	0xFD9
  4160                           status	equ	0xFD8
  4161                           
  4162 ;; *************** function _I2C1_FunctionComplete *****************
  4163 ;; Defined at:
  4164 ;;		line 563 in file "mcc_generated_files/i2c1.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;		None
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;		None
  4169 ;; Return value:  Size  Location     Type
  4170 ;;                  1    wreg      void 
  4171 ;; Registers used:
  4172 ;;		wreg, status,2, status,0
  4173 ;; Tracked objects:
  4174 ;;		On entry : 0/0
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4182 ;;Total ram usage:        0 bytes
  4183 ;; Hardware stack levels used:    1
  4184 ;; This function calls:
  4185 ;;		Nothing
  4186 ;; This function is called by:
  4187 ;;		_I2C1_ISR
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           
  4191                           	psect	text35
  4192  0017F6                     __ptext35:
  4193                           	opt stack 0
  4194  0017F6                     _I2C1_FunctionComplete:
  4195                           	opt stack 24
  4196                           
  4197                           ;i2c1.c: 567: p_i2c1_trb_current++;
  4198                           
  4199                           ;incstack = 0
  4200  0017F6  0E06               	movlw	6
  4201  0017F8  260E               	addwf	_p_i2c1_trb_current,f,c
  4202  0017FA  0E00               	movlw	0
  4203  0017FC  220F               	addwfc	_p_i2c1_trb_current+1,f,c
  4204                           
  4205                           ;i2c1.c: 570: if(--i2c1_trb_count == 0)
  4206  0017FE  2E13               	decfsz	_i2c1_trb_count,f,c
  4207  001800  D003               	goto	i2l1349
  4208                           
  4209                           ;i2c1.c: 571: {
  4210                           ;i2c1.c: 572: i2c1_state = S_MASTER_SEND_STOP;
  4211  001802  0E04               	movlw	4
  4212  001804  6E14               	movwf	_i2c1_state,c
  4213                           
  4214                           ;i2c1.c: 573: }
  4215  001806  0012               	return	
  4216  001808                     i2l1349:
  4217                           
  4218                           ;i2c1.c: 574: else
  4219                           ;i2c1.c: 575: {
  4220                           ;i2c1.c: 576: i2c1_state = S_MASTER_RESTART;
  4221  001808  0E01               	movlw	1
  4222  00180A  6E14               	movwf	_i2c1_state,c
  4223  00180C  0012               	return	
  4224  00180E                     __end_of_I2C1_FunctionComplete:
  4225                           	opt stack 0
  4226                           tosu	equ	0xFFF
  4227                           tosh	equ	0xFFE
  4228                           tosl	equ	0xFFD
  4229                           pclatu	equ	0xFFB
  4230                           pclath	equ	0xFFA
  4231                           tblptru	equ	0xFF8
  4232                           tblptrh	equ	0xFF7
  4233                           tblptrl	equ	0xFF6
  4234                           tablat	equ	0xFF5
  4235                           prodh	equ	0xFF4
  4236                           prodl	equ	0xFF3
  4237                           intcon	equ	0xFF2
  4238                           intcon2	equ	0xFF1
  4239                           postinc0	equ	0xFEE
  4240                           fsr0h	equ	0xFEA
  4241                           fsr0l	equ	0xFE9
  4242                           wreg	equ	0xFE8
  4243                           fsr1h	equ	0xFE2
  4244                           fsr1l	equ	0xFE1
  4245                           indf2	equ	0xFDF
  4246                           postinc2	equ	0xFDE
  4247                           postdec2	equ	0xFDD
  4248                           fsr2h	equ	0xFDA
  4249                           fsr2l	equ	0xFD9
  4250                           status	equ	0xFD8
  4251                           
  4252 ;; *************** function _I2C1_BusCollisionISR *****************
  4253 ;; Defined at:
  4254 ;;		line 728 in file "mcc_generated_files/i2c1.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;		None
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;		None
  4259 ;; Return value:  Size  Location     Type
  4260 ;;                  1    wreg      void 
  4261 ;; Registers used:
  4262 ;;		None
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4272 ;;Total ram usage:        0 bytes
  4273 ;; Hardware stack levels used:    1
  4274 ;; This function calls:
  4275 ;;		Nothing
  4276 ;; This function is called by:
  4277 ;;		_INTERRUPT_InterruptManager
  4278 ;; This function uses a non-reentrant model
  4279 ;;
  4280                           
  4281                           	psect	text36
  4282  0018B6                     __ptext36:
  4283                           	opt stack 0
  4284  0018B6                     _I2C1_BusCollisionISR:
  4285                           	opt stack 25
  4286                           
  4287                           ;incstack = 0
  4288  0018B6  0012               	return		;funcret
  4289  0018B8                     __end_of_I2C1_BusCollisionISR:
  4290                           	opt stack 0
  4291                           tosu	equ	0xFFF
  4292                           tosh	equ	0xFFE
  4293                           tosl	equ	0xFFD
  4294                           pclatu	equ	0xFFB
  4295                           pclath	equ	0xFFA
  4296                           tblptru	equ	0xFF8
  4297                           tblptrh	equ	0xFF7
  4298                           tblptrl	equ	0xFF6
  4299                           tablat	equ	0xFF5
  4300                           prodh	equ	0xFF4
  4301                           prodl	equ	0xFF3
  4302                           intcon	equ	0xFF2
  4303                           intcon2	equ	0xFF1
  4304                           postinc0	equ	0xFEE
  4305                           fsr0h	equ	0xFEA
  4306                           fsr0l	equ	0xFE9
  4307                           wreg	equ	0xFE8
  4308                           fsr1h	equ	0xFE2
  4309                           fsr1l	equ	0xFE1
  4310                           indf2	equ	0xFDF
  4311                           postinc2	equ	0xFDE
  4312                           postdec2	equ	0xFDD
  4313                           fsr2h	equ	0xFDA
  4314                           fsr2l	equ	0xFD9
  4315                           status	equ	0xFD8
  4316                           tosu	equ	0xFFF
  4317                           tosh	equ	0xFFE
  4318                           tosl	equ	0xFFD
  4319                           pclatu	equ	0xFFB
  4320                           pclath	equ	0xFFA
  4321                           tblptru	equ	0xFF8
  4322                           tblptrh	equ	0xFF7
  4323                           tblptrl	equ	0xFF6
  4324                           tablat	equ	0xFF5
  4325                           prodh	equ	0xFF4
  4326                           prodl	equ	0xFF3
  4327                           intcon	equ	0xFF2
  4328                           intcon2	equ	0xFF1
  4329                           postinc0	equ	0xFEE
  4330                           fsr0h	equ	0xFEA
  4331                           fsr0l	equ	0xFE9
  4332                           wreg	equ	0xFE8
  4333                           fsr1h	equ	0xFE2
  4334                           fsr1l	equ	0xFE1
  4335                           indf2	equ	0xFDF
  4336                           postinc2	equ	0xFDE
  4337                           postdec2	equ	0xFDD
  4338                           fsr2h	equ	0xFDA
  4339                           fsr2l	equ	0xFD9
  4340                           status	equ	0xFD8
  4341                           
  4342                           	psect	text37
  4343  000000                     __ptext37:
  4344                           	opt stack 0
  4345                           tosu	equ	0xFFF
  4346                           tosh	equ	0xFFE
  4347                           tosl	equ	0xFFD
  4348                           pclatu	equ	0xFFB
  4349                           pclath	equ	0xFFA
  4350                           tblptru	equ	0xFF8
  4351                           tblptrh	equ	0xFF7
  4352                           tblptrl	equ	0xFF6
  4353                           tablat	equ	0xFF5
  4354                           prodh	equ	0xFF4
  4355                           prodl	equ	0xFF3
  4356                           intcon	equ	0xFF2
  4357                           intcon2	equ	0xFF1
  4358                           postinc0	equ	0xFEE
  4359                           fsr0h	equ	0xFEA
  4360                           fsr0l	equ	0xFE9
  4361                           wreg	equ	0xFE8
  4362                           fsr1h	equ	0xFE2
  4363                           fsr1l	equ	0xFE1
  4364                           indf2	equ	0xFDF
  4365                           postinc2	equ	0xFDE
  4366                           postdec2	equ	0xFDD
  4367                           fsr2h	equ	0xFDA
  4368                           fsr2l	equ	0xFD9
  4369                           status	equ	0xFD8
  4370                           
  4371                           	psect	rparam
  4372  0000                     tosu	equ	0xFFF
  4373                           tosh	equ	0xFFE
  4374                           tosl	equ	0xFFD
  4375                           pclatu	equ	0xFFB
  4376                           pclath	equ	0xFFA
  4377                           tblptru	equ	0xFF8
  4378                           tblptrh	equ	0xFF7
  4379                           tblptrl	equ	0xFF6
  4380                           tablat	equ	0xFF5
  4381                           prodh	equ	0xFF4
  4382                           prodl	equ	0xFF3
  4383                           intcon	equ	0xFF2
  4384                           intcon2	equ	0xFF1
  4385                           postinc0	equ	0xFEE
  4386                           fsr0h	equ	0xFEA
  4387                           fsr0l	equ	0xFE9
  4388                           wreg	equ	0xFE8
  4389                           fsr1h	equ	0xFE2
  4390                           fsr1l	equ	0xFE1
  4391                           indf2	equ	0xFDF
  4392                           postinc2	equ	0xFDE
  4393                           postdec2	equ	0xFDD
  4394                           fsr2h	equ	0xFDA
  4395                           fsr2l	equ	0xFD9
  4396                           status	equ	0xFD8
  4397                           
  4398                           	psect	temp
  4399  00004B                     btemp:
  4400                           	opt stack 0
  4401  00004B                     	ds	1
  4402  0000                     int$flags	set	btemp
  4403                           tosu	equ	0xFFF
  4404                           tosh	equ	0xFFE
  4405                           tosl	equ	0xFFD
  4406                           pclatu	equ	0xFFB
  4407                           pclath	equ	0xFFA
  4408                           tblptru	equ	0xFF8
  4409                           tblptrh	equ	0xFF7
  4410                           tblptrl	equ	0xFF6
  4411                           tablat	equ	0xFF5
  4412                           prodh	equ	0xFF4
  4413                           prodl	equ	0xFF3
  4414                           intcon	equ	0xFF2
  4415                           intcon2	equ	0xFF1
  4416                           postinc0	equ	0xFEE
  4417                           fsr0h	equ	0xFEA
  4418                           fsr0l	equ	0xFE9
  4419                           wreg	equ	0xFE8
  4420                           fsr1h	equ	0xFE2
  4421                           fsr1l	equ	0xFE1
  4422                           indf2	equ	0xFDF
  4423                           postinc2	equ	0xFDE
  4424                           postdec2	equ	0xFDD
  4425                           fsr2h	equ	0xFDA
  4426                           fsr2l	equ	0xFD9
  4427                           status	equ	0xFD8


Data Sizes:
    Strings     14
    Constant    0
    Data        2
    BSS         40
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     28      74
    BANK0           160      5       5
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c1_tr_queue.pTrFlag	PTR enum E6983 size(2) Largest target is 0

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(COMRAM[6]), I2C1_MasterWrite@trBlock(COMRAM[6]), 

    lcd_msg@c	PTR unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR4_Interrupt(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_Interrupt(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR2_DefaultInterruptHandler(), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 0

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c1_object.pTrTail.pTrFlag	PTR enum E6983 size(2) Largest target is 0

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(COMRAM[6]), I2C1_MasterWrite@trBlock(COMRAM[6]), 

    F7095.pbuffer	PTR unsigned char  size(2) Largest target is 0

    F7090.pbuffer	PTR unsigned char  size(2) Largest target is 0

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 0
		 -> I2C1_ISR@i2c_address(COMRAM[2]), NULL(NULL[0]), 

    S119$pbuffer	PTR unsigned char  size(2) Largest target is 0

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 0

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(COMRAM[6]), I2C1_MasterWrite@trBlock(COMRAM[6]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E6983 size(2) Largest target is 0

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(COMRAM[6]), I2C1_MasterWrite@trBlock(COMRAM[6]), 

    S131$pTrFlag	PTR enum E6983 size(2) Largest target is 0

    p_i2c1_current.pTrFlag	PTR enum E6983 size(2) Largest target is 0

    S131$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(COMRAM[6]), I2C1_MasterWrite@trBlock(COMRAM[6]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(COMRAM[6]), I2C1_MasterWrite@trBlock(COMRAM[6]), 

    p_i2c1_current	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[6]), NULL(NULL[0]), 

    S142$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[6]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[6]), 

    S142$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[6]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _main->_CursorGOTOxy
    _lcd_msg->_lcd_dwr
    _lcd_init->_lcd_cmd
    _lcd_init->_lcd_cmd_hf
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _KeyPadAcquire->_KeyPadScan
    _KeyPadScan->_Delay
    _DisplayONCursorONToggleON->_lcd_cmd
    _CursorGOTOxy->_lcd_cmd
    _lcd_lat->_Delay

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop

Critical Paths under _main in BANK0

    _main->_CursorGOTOxy

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   18468
                       _CursorGOTOxy
                              _Delay
          _DisplayONCursorONToggleON
                      _EUSART1_Write
                      _KeyPadAcquire
                         _KeyPadInit
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                           _lcd_init
                            _lcd_msg
 ---------------------------------------------------------------------------------
 (1) _lcd_msg                                              2     0      2    1734
                                             22 COMRAM     2     0      2
                            _lcd_dwr
 ---------------------------------------------------------------------------------
 (2) _lcd_dwr                                              1     1      0    1625
                                             21 COMRAM     1     1      0
                            _lcd_lat
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    4809
                              _Delay
                            _lcd_cmd
                         _lcd_cmd_hf
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd_hf                                           1     1      0    1603
                                             21 COMRAM     1     1      0
                            _lcd_lat
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     236
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM4_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     150
           _TMR4_SetInterruptHandler
                    _TMR4_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     150
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _KeyPadInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _KeyPadAcquire                                        3     1      2    3247
                                             22 COMRAM     3     1      2
                              _Delay
                         _KeyPadScan
 ---------------------------------------------------------------------------------
 (2) _KeyPadScan                                           1     1      0    1620
                                             21 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write                                        1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DisplayONCursorONToggleON                            0     0      0    3206
                              _Delay
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _CursorGOTOxy                                        11     7      4    3490
                                             22 COMRAM     6     2      4
                                              0 BANK0      5     5      0
                              _Delay
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0    1625
                                             21 COMRAM     1     1      0
                            _lcd_lat
 ---------------------------------------------------------------------------------
 (3) _lcd_lat                                              0     0      0    1581
                              _Delay
 ---------------------------------------------------------------------------------
 (4) _Delay                                                2     0      2    1581
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                          14    14      0      15
                                              5 COMRAM    14    14      0
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR2_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR4_ISR                                             0     0      0       0
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
                     _TMR4_Interrupt *
 ---------------------------------------------------------------------------------
 (7) _TMR4_Interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_ISR                                             2     2      0      15
                                              3 COMRAM     2     2      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (7) _I2C1_Stop                                            3     3      0      15
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) _I2C1_FunctionComplete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CursorGOTOxy
     _Delay
     _lcd_cmd
       _lcd_lat
         _Delay
   _Delay
   _DisplayONCursorONToggleON
     _Delay
     _lcd_cmd
       _lcd_lat
         _Delay
   _EUSART1_Write
   _KeyPadAcquire
     _Delay
     _KeyPadScan
       _Delay
   _KeyPadInit
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM4_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
       _TMR4_StartTimer
   _TMR4_SetInterruptHandler
   _lcd_init
     _Delay
     _lcd_cmd
       _lcd_lat
         _Delay
     _lcd_cmd_hf
       _lcd_lat
         _Delay
   _lcd_msg
     _lcd_dwr
       _lcd_lat
         _Delay

 _INTERRUPT_InterruptManager (ROOT)
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
   _TMR4_ISR
     Absolute function(Fake) *
     _TMR4_DefaultInterruptHandler *
     _TMR4_Interrupt *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5       5       5        3.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1C      4A       1       78.7%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4F      12        0.0%
DATA                 0      0      4F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sun Dec 10 18:09:18 2017

        __end_of_TMR2_SetInterruptHandler 188E                           Delay@DelayCount 003C  
                             lcd_cmd_hf@x 003E                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                                       l452 1870  
                            __CFG_CPB$OFF 000000                                       _PR2 000FBB  
                                     _PR4 000F52                              __CFG_CPD$OFF 000000  
                         _TMR2_Initialize 1776                           _PWM4_Initialize 17D8  
                                     tosl 000FFD                                       wreg 000FE8  
                            __CFG_LVP$OFF 000000                          __end_of_I2C1_ISR 124E  
                                    l2101 12D8                                      l2023 16FA  
                                    l2025 1702                                      l2113 1300  
                                    l2019 16E6                                      l2131 1334  
                                    l2107 12EA                                      l2125 1322  
                                    l2143 135C                                      l2071 127C  
                                    l2161 1390                                      l2137 1346  
                                    l2065 126A                                      l2331 1412  
                                    l2155 137E                                      l2083 12A4  
                                    l2243 1678                                      l2325 13EC  
                                    l2173 13B8                                      l2077 128E  
                                    l2335 1428                                      l2167 13A2  
                                    l2095 12C6                                      l2271 160E  
                                    l2239 1662                                      l2329 1408  
                                    l2265 15FA                                      l2273 161A  
                                    l2365 1552                                      STR_1 1001  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      _TMR2 000FBC  
                                    _TMR4 000F53                                      _WPUB 000F61  
                           _EUSART1_Write 186E                                      _main 14EE  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 004B  
                           __CFG_BORV$190 000000                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00AE  
                           __CFG_IESO$OFF 000000                ??_TMR4_SetInterruptHandler 003E  
                            ___param_bank 000000                                _i2c1_state 0014  
                         ??_KeyPadAcquire 0041            __size_of_OSCILLATOR_Initialize 000E  
           __end_of_OSCILLATOR_Initialize 186E                                     ?_main 0029  
                       __end_of_I2C1_Stop 15F6                                     _EEADR 000FA9  
                                   _T2CON 000FBA                                     _T4CON 000F51  
                          __CFG_DEBUG$OFF 000000                                     i2l131 10A0  
                                   i2l140 10EA                                     i2l133 10A8  
                                   i2l150 1166                                     i2l134 10B0  
                                   i2l144 1152                                     i2l128 1046  
                                   i2l162 11EC                                     i2l154 1192  
                                   i2l139 10DC                                     i2l157 11AC  
                                   i2l158 11BC                                     i2l407 0072  
                                   _PORTB 000F81                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                                   _Delay 16E4              __end_of_I2C1_BusCollisionISR 18B8  
                           __CFG_WRT0$OFF 000000                           _TMR4_Initialize 16BC  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                       ??_I2C1_Initialize 003C                           __end_of_lcd_cmd 1754  
                         __end_of_lcd_lat 1860                           __end_of_lcd_dwr 1730  
                         __end_of_lcd_msg 168E                          __end_of_TMR2_ISR 17D8  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                        __end_of_TMR4_ISR 17B8                             __CFG_WRTD$OFF 000000  
                           ?_CursorGOTOxy 003F                            __CFG_EBTRB$OFF 000000  
                      __CFG_MCLRE$EXTMCLR 000000                            ?_EUSART1_Write 0029  
                              _KeyPadInit 188E                                _KeyPadScan 124E  
                                   pclath 000FFA                                     tablat 000FF5  
                                   status 000FD8                            __CFG_HFOFST$ON 000000  
                         _TMR2_StartTimer 18A8                                _KeyPressed 0049  
                         __initialization 1632                __end_of_EUSART1_Initialize 183A  
                            __end_of_main 156A                            KeyPadScan@Push 0010  
                 __end_of_PWM4_Initialize 17F6                   __end_of_TMR2_Initialize 1798  
             ?_INTERRUPT_InterruptManager 0029                               _i2c1_object 0001  
                _TMR2_SetInterruptHandler 1884                                    ??_main 0045  
              ?_DisplayONCursorONToggleON 0029                             __activetblptr 000003  
                                  ?_Delay 003C                            ??_CursorGOTOxy 0060  
                                  _EEADRH 000FAA                                    _EEDATA 000FA8  
                                  _CCPR4H 000F59                                    _CCPR4L 000F58  
                                  _EECON2 000FA7                                    _ANSELA 000F38  
                                  _ANSELB 000F39                                    _ANSELC 000F3A  
                                  _ANSELD 000F3B                                    _ANSELE 000F3C  
                                  i2l1341 15F0                                    i2l1349 1808  
                                  i2l1613 1176                                    i2l1605 1160  
                                  i2l1623 119A                                    i2l1553 1090  
                                  i2l1651 11F2                                    i2l1635 11C4  
                                  i2l1571 10D6                                    i2l1653 11F6  
                                  i2l1565 10BE                                    i2l1661 1208  
                          __CFG_WDTEN$OFF 000000                                    i2l1655 11FE  
                                  i2l1639 11CC                                    i2l1585 1118  
                                  i2l1951 005A                                    i2l1943 004E  
                                  i2l1959 0066                                    _TABLAT 000FF5  
                                  _RCREG1 000FAE                                    _RCSTA1 000FAB  
                                  _OSCCON 000FD3                                    _SPBRG1 000FAF  
                                  _TXREG1 000FAD                                    _TXSTA1 000FAC  
                         _TMR4_StartTimer 18A2                            __CFG_XINST$OFF 000000  
                            _CCPTMRS1bits 000F48                          __end_of_lcd_init 14EE  
                          _p_i2c1_current 000C                            __CFG_STVREN$ON 000000  
                 __end_of_TMR4_Initialize 16E4                                 ?_I2C1_ISR 0029  
                                  clear_0 1650                                 ??_lcd_cmd 003E  
                               ??_lcd_lat 003E                                 ??_lcd_dwr 003E  
                               ??_lcd_msg 0041         __end_of_DisplayONCursorONToggleON 184E  
    __end_of_TMR4_DefaultInterruptHandler 18B4     __size_of_TMR4_DefaultInterruptHandler 0002  
            _TMR4_DefaultInterruptHandler 18B2                              __pdataCOMRAM 0049  
                            __mediumconst 0000                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                         ??_EUSART1_Write 003C                   __end_of_TMR2_StartTimer 18AC  
TMR4_SetInterruptHandler@InterruptHandler 003C  TMR2_SetInterruptHandler@InterruptHandler 003C  
           __size_of_INTERRUPT_Initialize 0004                               ?_KeyPadInit 0029  
                             ?_KeyPadScan 0029                         _SYSTEM_Initialize 1754  
                              __accesstop 0060                   __end_of__initialization 1656  
                         __CFG_PBADEN$OFF 000000                        ?_SYSTEM_Initialize 0029  
                           ___rparam_used 000001                            _i2c1_trb_count 0013  
                           __end_of_Delay 170C                     _I2C1_FunctionComplete 17F6  
                    _I2C1_BusCollisionISR 18B6                            __pcstackCOMRAM 0029  
                     ??_SYSTEM_Initialize 003E                                 ?_TMR2_ISR 0029  
                               ?_TMR4_ISR 0029                                ??_I2C1_ISR 002C  
                        ?_TMR2_Initialize 0029                          ?_PWM4_Initialize 0029  
                                 ??_Delay 003E             ?_TMR4_DefaultInterruptHandler 0029  
                 __end_of_TMR4_StartTimer 18A8                 __end_of_SYSTEM_Initialize 1776  
                         __CFG_PLLCFG$OFF 000000                                __pnvCOMRAM 0045  
                   _TMR4_InterruptHandler 0045                     ?_I2C1_BusCollisionISR 0029  
                      __CFG_CCP2MX$PORTC1 000000                      __end_of_CursorGOTOxy 146A  
                              ??_TMR2_ISR 0029                                ??_TMR4_ISR 0029  
                      __CFG_CCP3MX$PORTE0 000000                           _I2C1_Initialize 168E  
                                 _CCP4CON 000F57                          ?_TMR4_Initialize 0029  
                     __size_of_KeyPadInit 000A                       __size_of_KeyPadScan 0182  
                 __size_of_TMR4_Interrupt 000A                                _lcd_cmd_hf 180E  
                                 _OSCCON2 000FD2                                 _I2C1_Stop 15B8  
                                 _TBLPTRH 000FF7                                   _TBLPTRL 000FF6  
                                 _TBLPTRU 000FF8                                   i2u36_48 17C6  
                                 _OSCTUNE 000F9B                                   i2u38_48 17A6  
                                 _SPBRGH1 000FB0                                   _SSP1ADD 000FC8  
                                 _SSP1BUF 000FC9                          ?_TMR2_StartTimer 0029  
                               ?_lcd_init 0029                           __CFG_PWRTEN$OFF 000000  
                  ?_I2C1_FunctionComplete 0029                                   __Hparam 0000  
                                 __Lparam 0000                ??_TMR2_SetInterruptHandler 003E  
                      _p_i2c1_trb_current 000E                              __psmallconst 1000  
                                 __pcinit 1632                                   __ramtop 1000  
                                 __ptext0 14EE                                   __ptext1 1660  
                                 __ptext2 170C                                   __ptext3 146A  
                                 __ptext4 180E                                   __ptext5 1754  
                                 __ptext6 16BC                                   __ptext7 18A2  
                                 __ptext8 187A                                   __ptext9 1776  
                   __end_of_KeyPadAcquire 1632                                   _lcd_cmd 1730  
                                 _lcd_lat 184E                                   _lcd_dwr 170C  
                                 _lcd_msg 1660               ??_DisplayONCursorONToggleON 003F  
                   _OSCILLATOR_Initialize 1860                                 _T2CONbits 000FBA  
                               _T4CONbits 000F51                        _EUSART1_Initialize 1824  
                ??_PIN_MANAGER_Initialize 003C         __size_of_TMR4_SetInterruptHandler 000A  
               ?_TMR4_SetInterruptHandler 003C                                ?_I2C1_Stop 0029  
              __size_of_SYSTEM_Initialize 0022                      I2C1_ISR@pi2c_buf_ptr 000A  
                              ??_lcd_init 003F                          ?_TMR4_StartTimer 0029  
                    end_of_initialization 1656            ??_TMR4_DefaultInterruptHandler 0029  
                     ?_EUSART1_Initialize 0029                    ??_I2C1_BusCollisionISR 0029  
                 __end_of_I2C1_Initialize 16BC                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc2 000FDE  
                    ??_EUSART1_Initialize 003C                                 _PORTAbits 000F80  
                               _PORTBbits 000F81                         __size_of_I2C1_ISR 023E  
                             ?_lcd_cmd_hf 0029                       EUSART1_Write@txData 003C  
       I2C1_ISR@i2c_10bit_address_restart 0011                              ??_KeyPadInit 003C  
                            ??_KeyPadScan 003E                 _DisplayONCursorONToggleON 183A  
                   __size_of_CursorGOTOxy 009A              __end_of_INTERRUPT_Initialize 18B0  
    __end_of_TMR2_DefaultInterruptHandler 18B6     __size_of_TMR2_DefaultInterruptHandler 0002  
            _TMR2_DefaultInterruptHandler 18B4                   I2C1_MasterWrite@trBlock 001B  
                           __pidataCOMRAM 18B0                  I2C1_Stop@completion_code 002B  
                       __size_of_TMR2_ISR 0020                         __size_of_TMR4_ISR 0020  
                           CursorGOTOxy@i 0043                             CursorGOTOxy@x 003F  
                           CursorGOTOxy@y 0041                       KeyPadScan@KeyPadKey 003E  
                  ?_OSCILLATOR_Initialize 0029                        __end_of_KeyPadInit 1898  
                      __end_of_KeyPadScan 13D0                            _TMR4_Interrupt 1898  
                     start_initialization 1632                               ??_I2C1_Stop 0029  
         __size_of_PIN_MANAGER_Initialize 004E                              _CursorGOTOxy 13D0  
                   __end_of_EUSART1_Write 187A                          ?_I2C1_Initialize 0029  
                     __size_of_lcd_cmd_hf 0016             ?_TMR2_DefaultInterruptHandler 0029  
                  __end_of_TMR4_Interrupt 18A2                               __pbssCOMRAM 0001  
                           __pcstackBANK0 0060                  __size_of_PWM4_Initialize 001E  
                __size_of_TMR2_Initialize 0022                             _i2c1_tr_queue 0021  
                 KeyPadAcquire@KeyAcquire 0041                   ??_I2C1_FunctionComplete 0029  
                       __size_of_lcd_init 0084                    _PIN_MANAGER_Initialize 156A  
                               __pintcode 0008          __end_of_TMR4_SetInterruptHandler 1884  
                                _I2C1_ISR 1010                           ?_TMR4_Interrupt 0029  
            ??_INTERRUPT_InterruptManager 002E                          __CFG_PRICLKEN$ON 000000  
                                ?_lcd_cmd 0029                                  ?_lcd_lat 0029  
                                ?_lcd_dwr 0029                                  ?_lcd_msg 003F  
                             __smallconst 1000                                  _BAUDCON1 000FB8  
                          __size_of_Delay 0028                  __size_of_TMR4_Initialize 0028  
                    _INTERRUPT_Initialize 18AC                    I2C1_MasterRead@trBlock 0015  
                                _LATAbits 000F89                                  _LATBbits 000F8A  
                                _LATDbits 000F8C                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  _PIE5bits 000F7D  
                __size_of_TMR2_StartTimer 0004       __size_of_INTERRUPT_InterruptManager 00A6  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                _PIR5bits 000F7E                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                                  _SSP1CON1 000FC6  
                                _SSP1CON3 000FCB                                  _TMR2_ISR 17B8  
      __size_of_DisplayONCursorONToggleON 0014                                  _TMR4_ISR 1798  
                                _SSP1STAT 000FC7                              ??_lcd_cmd_hf 003E  
          ??_TMR2_DefaultInterruptHandler 0029         __size_of_TMR2_SetInterruptHandler 000A  
               ?_TMR2_SetInterruptHandler 003C                               _INTCON2bits 000FF1  
                   ?_INTERRUPT_Initialize 0029                         ??_TMR2_Initialize 003E  
                       ??_PWM4_Initialize 003C                                _EECON1bits 000FA6  
                  __size_of_KeyPadAcquire 003C                  __size_of_TMR4_StartTimer 0006  
                                __Hrparam 0000             __size_of_I2C1_BusCollisionISR 0002  
                                __Lrparam 0000                        __end_of_lcd_cmd_hf 1824  
                      __CFG_BOREN$SBORDIS 000000                    I2C1_ISR@i2c_bytes_left 0012  
                       __CFG_P2BMX$PORTD2 000000                   ??_OSCILLATOR_Initialize 003C  
             __size_of_EUSART1_Initialize 0016                  _TMR4_SetInterruptHandler 187A  
                        __size_of_lcd_cmd 0024                          __size_of_lcd_lat 0012  
                        __size_of_lcd_dwr 0024                          __size_of_lcd_msg 002E  
                     I2C1_ISR@i2c_address 0027                                  __ptext10 18A8  
                                __ptext11 1884                                  __ptext20 124E  
                                __ptext12 17D8                                  __ptext21 186E  
                                __ptext13 156A                                  __ptext30 1898  
                                __ptext22 183A                                  __ptext14 1860  
                                __ptext31 17B8                                  __ptext23 13D0  
                                __ptext15 18AC                                  __ptext32 18B4  
                                __ptext24 1730                                  __ptext16 168E  
                                __ptext33 1010                                  __ptext25 184E  
                                __ptext17 1824                                  __ptext34 15B8  
                                __ptext26 16E4                                  __ptext18 188E  
                                __ptext35 17F6                                  __ptext19 15F6  
                                __ptext36 18B6                                  __ptext28 1798  
                                __ptext37 0000                                  __ptext29 18B2  
                            _SSP1CON1bits 000FC6                              _SSP1CON2bits 000FC5  
                                _lcd_init 146A                         ??_TMR4_Initialize 003E  
                           __size_of_main 007C                                  int$flags 004B  
                                lcd_cmd@x 003E                         ??_TMR2_StartTimer 003C  
                                lcd_dwr@x 003E        __end_of_INTERRUPT_InterruptManager 00AE  
              _INTERRUPT_InterruptManager 0008                                  lcd_msg@c 003F  
                           _KeyPadAcquire 15F6                                _INTCONbits 000FF2  
                  ??_INTERRUPT_Initialize 003C                                  intlevel2 0000  
                 ?_PIN_MANAGER_Initialize 0029            __size_of_I2C1_FunctionComplete 0018  
                              _RCSTA1bits 000FAB             __end_of_I2C1_FunctionComplete 180E  
                        ??_TMR4_Interrupt 0029                         ??_TMR4_StartTimer 003C  
                             _TMR4_Ticked 0008                  __size_of_I2C1_Initialize 002E  
                  __size_of_EUSART1_Write 000C                            ?_KeyPadAcquire 003F  
                       __CFG_T3CMX$PORTC0 000000            __end_of_PIN_MANAGER_Initialize 15B8  
                      __size_of_I2C1_Stop 003E                         __CFG_FOSC$INTIO67 000000  
                   _TMR2_InterruptHandler 0047  
